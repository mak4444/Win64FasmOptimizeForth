;/
;/REQUIRE DUPENDCASE ~mak/case.f
;/
;/\- M_WL : M_WL CS-DUP POSTPONE WHILE ; IMMEDIATE
;/
;/\- C>S : C>S ( c -- n )  $FF AND $80 XOR $80 - ;
;/\- L>S : L>S ( c -- n )  $FFFFFFFF AND $80000000 XOR $80000000 - ;
;/
;/\- -CELL  -1 CELLS CONSTANT -CELL
;/
;/\- ANDC : ANDC	INVERT AND ;
;/\-  XOR! : XOR!	DUP @ ROT XOR SWAP ! ;
;/
;/\- 4* : 4* 2 << ;
;/\- 3+ : 3+ 2+ 1+ ;
;/
;/\- M@ : M@ @ ;
;/\- THERE : THERE HERE ;
;/\- TBASE BASE CONSTANT TBASE
;/\- SHORT? : SHORT? ( n -- -128 < n < 127 )  0x80 + 0x100 U< ;
;/\- LONG? : LONG? ( n -- -2147483648<n<2147483647 )
;/\- LONG? $80000000 + $100000000 U< ;
;/\- HH. : HH. H. ;
;/\- OPTVALNEED -1 VALUE OPTVALNEED
;/
;/0 VALUE J_COD  \ код для Jx, он же признак ?BRANCH

_J_COD:
	call	_DOVALUE	; 80405870 E8 6F EE FF FF 

	DQ 0x0
;/
;/TBASE M@ HEX
;/
;/OPTVALNEED
;/[IF]
;/0 VALUE MO_TST_VAL

_MO_TST_VAL:
	call	_DOVALUE	; 8040587D E8 62 EE FF FF 

	DQ 0x0
;/
;/   TRUE VALUE OPT?

_OPTque:
	call	_DOVALUE	; 8040588A E8 55 EE FF FF 

	DQ 0xFFFFFFFFFFFFFFFF
;/
;/0x20 VALUE MM_SIZE

_MM_SIZE:
	call	_DOVALUE	; 80405897 E8 48 EE FF FF 

	DQ 0x20
;/
;/0 VALUE OFF-EBP

_OFFsubEBP:
	call	_DOVALUE	; 804058A4 E8 3B EE FF FF 

	DQ 0x0
;/
;/0 VALUE OFF-EAX

_OFFsubEAX:
	call	_DOVALUE	; 804058B1 E8 2E EE FF FF 

	DQ 0x0
;/
;/0 VALUE TOFF-PSP

_TOFFsubPSP:
	call	_DOVALUE	; 804058BE E8 21 EE FF FF 

	DQ 0x0
;/
;/0 VALUE LAST-HERE

_LASTsubHERE:
	call	_DOVALUE	; 804058CB E8 14 EE FF FF 

	DQ 0x0
;/
;/$22 CELLS DUP CONSTANT OpBuffSize
;/
;/CREATE OP0 2 CELLS + ALLOT
	DQ 0x0,0x0,0x0,0x0,0x0
	DQ  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	DQ  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	DQ  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	DQ  0x0,0x0,0x0,0x0,0x0,0x0,0x0
;/OP0
;/CELL+ DUP CONSTANT OP1
;/CELL+ DUP CONSTANT OP2
;/CELL+ DUP CONSTANT OP3
;/CELL+ DUP CONSTANT OP4
;/CELL+ DUP CONSTANT OP5
;/CELL+ DUP CONSTANT OP6
;/CELL+ DUP CONSTANT OP7
;/CELL+ DUP CONSTANT OP8
;/DROP
;/
;/0 VALUE :-SET

_dcomasubSET:
	call	_DOVALUE	; 804059F8 E8 E7 EC FF FF 

	DQ 0x0
;/
;/[THEN]
;/
;/: SET-OPT TRUE TO OPT? ;

_SETsubOPT:
;/*	mov	rax,-0x08(rbp)	; 80405A05 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80405A09 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405A10 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OPTque+0x5 (%rip),rax	; 80405A14 
	DB 0x48,0x8D,0x5,0x74,0xFE,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80405A1B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80405A1F E8 DC E7 FF FF 
	ret		; 80405A24 C3 
;/
;/: DIS-OPT FALSE TO OPT? ;


_DISsubOPT:
;/*	mov	rax,-0x08(rbp)	; 80405A25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80405A29 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80405A2E 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OPTque+0x5 (%rip),rax	; 80405A32 
	DB 0x48,0x8D,0x5,0x56,0xFE,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80405A39 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80405A3D E8 BE E7 FF FF 
	ret		; 80405A42 C3 
;/
;/0 VALUE OP0@


_OP0load:
	call	_DOVALUE	; 80405A43 E8 9C EC FF FF 

	DQ 0x0
;/0 VALUE OP1@

_OP1load:
	call	_DOVALUE	; 80405A50 E8 8F EC FF FF 

	DQ 0x0
;/0 VALUE OP2@

_OP2load:
	call	_DOVALUE	; 80405A5D E8 82 EC FF FF 

	DQ 0x0
;/0 VALUE OP3@

_OP3load:
	call	_DOVALUE	; 80405A6A E8 75 EC FF FF 

	DQ 0x0
;/0 VALUE OP4@

_OP4load:
	call	_DOVALUE	; 80405A77 E8 68 EC FF FF 

	DQ 0x0
;/0 VALUE OP5@

_OP5load:
	call	_DOVALUE	; 80405A84 E8 5B EC FF FF 

	DQ 0x0
;/
;/: OPLast OP0 OpBuffSize + CELL- ;

_OPLast:
;/*	mov	rax,-0x08(rbp)	; 80405A91 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405A95 
	DB 0x48,0x8D,0x5,0x3C,0xFE,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405A9C 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x110,eax	; 80405AA0 
	DB 0xB8,0x10,0x1,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80405AA5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 80405AA9 E8 6D E9 FF FF 
	call	_CELLsub	; 80405AAE E8 CC E9 FF FF 
	ret		; 80405AB3 C3 
;/
;/: ?OPlast  ( OPX -- OPX flag )
;/     DUP OPLast CELL- U> ;


_queOPlast:
	call	_DUP	; 80405AB4 E8 6F EA FF FF 
	call	_OPLast	; 80405AB9 E8 D3 FF FF FF 
	call	_CELLsub	; 80405ABE E8 BC E9 FF FF 
	call	_Ugreat	; 80405AC3 E8 E8 E8 FF FF 
	ret		; 80405AC8 C3 
;/
;/: SetOP ( -- )
;/ THERE OP0 @ = IF -8FD THROW THEN \ -2301 THROW \ do not alow OP1 be the same as OP0


_SetOP:
	call	_THERE	; 80405AC9 E8 6A F1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405ACE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405AD2 
	DB 0x48,0x8D,0x5,0xFF,0xFD,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405AD9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80405ADD E8 E7 E6 FF FF 
	call	_equ	; 80405AE2 E8 53 E8 FF FF 
	test	rax,rax	; 80405AE7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405AEA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405AEE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_SetOP+0x43 	; 80405AF2 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80405AF8 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x8FD,rax	; 80405AFC 
	DB 0x48,0xC7,0xC0,0x3,0xF7,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405B03 
	DB 0x48,0x8D,0x6D,0xF8
	call	_THROW	; 80405B07 E8 F8 F9 FF FF 
;/ OP0 OP1 OpBuffSize CELL- CMOVE>
;/*	mov	rax,-0x08(rbp)	; 80405B0C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405B10 
	DB 0x48,0x8D,0x5,0xC1,0xFD,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405B17 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80405B1B 
	DB 0x48,0x8D,0x5,0xBE,0xFD,0xFF,0xFF
;/*	mov	rax,-0x18(rbp)	; 80405B22 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	$0x110,eax	; 80405B26 
	DB 0xB8,0x10,0x1,0x0,0x0
;/*	lea	-0x18(rbp),rbp	; 80405B2B 
	DB 0x48,0x8D,0x6D,0xE8
	call	_CELLsub	; 80405B2F E8 4B E9 FF FF 
	call	_CMOVEgreat	; 80405B34 E8 21 E6 7F 0 
;/ THERE OP0 !
	call	_THERE	; 80405B39 E8 FA F0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405B3E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405B42 
	DB 0x48,0x8D,0x5,0x8F,0xFD,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405B49 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80405B4D E8 AE E6 FF FF 
;/;
	ret		; 80405B52 C3 
;/
;/: ToOP0 ( OPn -- )
;/     OP0 OpBuffSize CELL- CMOVE ;


_ToOP0:
;/*	mov	rax,-0x08(rbp)	; 80405B53 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405B57 
	DB 0x48,0x8D,0x5,0x7A,0xFD,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405B5E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x110,eax	; 80405B62 
	DB 0xB8,0x10,0x1,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80405B67 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CELLsub	; 80405B6B E8 F E9 FF FF 
	call	_CMOVE	; 80405B70 E8 58 EB FF FF 
	ret		; 80405B75 C3 
;/
;/: ?SET THERE


_queSET:
	call	_THERE	; 80405B76 E8 BD F0 FF FF 
;/	DUP LAST-HERE
	call	_DUP	; 80405B7B E8 A8 E9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405B80 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x5 (%rip),rax	; 80405B84 
	DB 0x48,0x8D,0x5,0x45,0xFD,0xFF,0xFF
;/*	mov	(rax),rax	; 80405B8B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80405B8E 
	DB 0x48,0x8D,0x6D,0xF8
;/ XOR IF DUP TO :-SET THEN
	call	_XOR	; 80405B92 E8 5D E8 FF FF 
	test	rax,rax	; 80405B97 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405B9A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405B9E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queSET+0x4B 	; 80405BA2 
	DB 0xF,0x84,0x19,0x0,0x0,0x0
	call	_DUP	; 80405BA8 E8 7B E9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405BAD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 80405BB1 
	DB 0x48,0x8D,0x5,0x45,0xFE,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405BB8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80405BBC E8 3F E6 FF FF 
;/	DUP    OP0 @ U< IF OP0 0! THEN
	call	_DUP	; 80405BC1 E8 62 E9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405BC6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405BCA 
	DB 0x48,0x8D,0x5,0x7,0xFD,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405BD1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80405BD5 E8 EF E5 FF FF 
	call	_Uless	; 80405BDA E8 DD E7 FF FF 
	test	rax,rax	; 80405BDF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405BE2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405BE6 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queSET+0x8E 	; 80405BEA 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80405BF0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405BF4 
	DB 0x48,0x8D,0x5,0xDD,0xFC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405BFB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OFF	; 80405BFF E8 75 E6 FF FF 
;/	DUP    OP1 @ U< IF OP1 0! THEN
	call	_DUP	; 80405C04 E8 1F E9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405C09 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80405C0D 
	DB 0x48,0x8D,0x5,0xCC,0xFC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405C14 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80405C18 E8 AC E5 FF FF 
	call	_Uless	; 80405C1D E8 9A E7 FF FF 
	test	rax,rax	; 80405C22 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405C25 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405C29 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queSET+0xD1 	; 80405C2D 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80405C33 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80405C37 
	DB 0x48,0x8D,0x5,0xA2,0xFC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405C3E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OFF	; 80405C42 E8 32 E6 FF FF 
;/	DROP
	call	_DgreatS	; 80405C47 E8 E7 E4 FF FF 
;/;
	ret		; 80405C4C C3 
;/
;/: ?^OP ( addr -- flg )
;/\
;/  DUP :-SET U< IF DROP FALSE BREAK


_quepicOP:
	call	_DUP	; 80405C4D E8 D6 E8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405C52 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 80405C56 
	DB 0x48,0x8D,0x5,0xA0,0xFD,0xFF,0xFF
;/*	mov	(rax),rax	; 80405C5D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80405C60 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 80405C64 E8 53 E7 FF FF 
	test	rax,rax	; 80405C69 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405C6C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405C70 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_quepicOP+0x40 	; 80405C74 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
	call	_DgreatS	; 80405C7A E8 B4 E4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405C7F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80405C83 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405C88 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80405C8C C3 
;/  DROP TRUE
	call	_DgreatS	; 80405C8D E8 A1 E4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405C92 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80405C96 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405C9D 
	DB 0x48,0x8D,0x6D,0xF8
;/;
	ret		; 80405CA1 C3 
;/
;/M\ ' DROP ->DEFER DTST


_DTST:
	call	_DOVECT	; 80405CA2 E8 55 EA FF FF 
	DQ _DgreatS

;/
;/ TRUE VALUE ?C-JMP

_queCsubJMP:
	call	_DOVALUE	; 80405CAF E8 30 EA FF FF 

	DQ 0xFFFFFFFFFFFFFFFF
;/
;/ 0 VALUE OPXXX

_OPXXX:
	call	_DOVALUE	; 80405CBC E8 23 EA FF FF 

	DQ 0x0
;/
;/: OP_SIZE ( OP - n )
;/  DUP CELL- @ SWAP @ - ;

_OP_SIZE:
	call	_DUP	; 80405CC9 E8 5A E8 FF FF 
	call	_CELLsub	; 80405CCE E8 AC E7 FF FF 
	call	_load	; 80405CD3 E8 F1 E4 FF FF 
	call	_SWAP	; 80405CD8 E8 65 E8 FF FF 
	call	_load	; 80405CDD E8 E7 E4 FF FF 
	call	_sub	; 80405CE2 E8 31 E7 FF FF 
	ret		; 80405CE7 C3 
;/
;/: RIPADR? ( w -- flg )
;/	CASE
;/
;/	DUP C7FF AND	05F6 XOR IF


_RIPADRque:
	call	_DUP	; 80405CE8 E8 3B E8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405CED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7FF,eax	; 80405CF1 
	DB 0xB8,0xFF,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405CF6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405CFA E8 E3 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405CFF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5F6,eax	; 80405D03 
	DB 0xB8,0xF6,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405D08 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405D0C E8 E3 E6 FF FF 
	test	rax,rax	; 80405D11 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405D14 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405D18 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405D1C 
	DB 0xF,0x84,0x99,0x2,0x0,0x0
;/	DUP D7FF AND	15F7 XOR IF
	call	_DUP	; 80405D22 E8 1 E8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405D27 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD7FF,eax	; 80405D2B 
	DB 0xB8,0xFF,0xD7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405D30 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405D34 E8 A9 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405D39 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x15F7,eax	; 80405D3D 
	DB 0xB8,0xF7,0x15,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405D42 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405D46 E8 A9 E6 FF FF 
	test	rax,rax	; 80405D4B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405D4E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405D52 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405D56 
	DB 0xF,0x84,0x5F,0x2,0x0,0x0
;/	DUP E7FF AND	25F7 XOR IF
	call	_DUP	; 80405D5C E8 C7 E7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405D61 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE7FF,eax	; 80405D65 
	DB 0xB8,0xFF,0xE7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405D6A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405D6E E8 6F E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405D73 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x25F7,eax	; 80405D77 
	DB 0xB8,0xF7,0x25,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405D7C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405D80 E8 6F E6 FF FF 
	test	rax,rax	; 80405D85 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405D88 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405D8C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405D90 
	DB 0xF,0x84,0x25,0x2,0x0,0x0
;/	DUP F7FF AND	05FE XOR IF
	call	_DUP	; 80405D96 E8 8D E7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405D9B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF7FF,eax	; 80405D9F 
	DB 0xB8,0xFF,0xF7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405DA4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405DA8 E8 35 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405DAD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5FE,eax	; 80405DB1 
	DB 0xB8,0xFE,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405DB6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405DBA E8 35 E6 FF FF 
	test	rax,rax	; 80405DBF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405DC2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405DC6 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405DCA 
	DB 0xF,0x84,0xEB,0x1,0x0,0x0
;/	DUP C7FF AND	05FF XOR IF
	call	_DUP	; 80405DD0 E8 53 E7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405DD5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7FF,eax	; 80405DD9 
	DB 0xB8,0xFF,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405DDE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405DE2 E8 FB E5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405DE7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5FF,eax	; 80405DEB 
	DB 0xB8,0xFF,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405DF0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405DF4 E8 FB E5 FF FF 
	test	rax,rax	; 80405DF9 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405DFC 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405E00 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405E04 
	DB 0xF,0x84,0xB1,0x1,0x0,0x0
;/
;/	DUP		05c0 XOR IF \ rolb    %e_x,x(%rip)
	call	_DUP	; 80405E0A E8 19 E7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405E0F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C0,eax	; 80405E13 
	DB 0xB8,0xC0,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405E18 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405E1C E8 D3 E5 FF FF 
	test	rax,rax	; 80405E21 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405E24 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405E28 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405E2C 
	DB 0xF,0x84,0x89,0x1,0x0,0x0
;/	DUP		05c1 XOR IF \ roll    %e_x,x(%rip)
	call	_DUP	; 80405E32 E8 F1 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405E37 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C1,eax	; 80405E3B 
	DB 0xB8,0xC1,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405E40 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405E44 E8 AB E5 FF FF 
	test	rax,rax	; 80405E49 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405E4C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405E50 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405E54 
	DB 0xF,0x84,0x61,0x1,0x0,0x0
;/	DUP		05c6 XOR IF \ movb    %e_x,x(%rip)
	call	_DUP	; 80405E5A E8 C9 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405E5F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C6,eax	; 80405E63 
	DB 0xB8,0xC6,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405E68 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405E6C E8 83 E5 FF FF 
	test	rax,rax	; 80405E71 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405E74 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405E78 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405E7C 
	DB 0xF,0x84,0x39,0x1,0x0,0x0
;/	DUP		05c7 XOR IF \ movl    %e_x,x(%rip)
	call	_DUP	; 80405E82 E8 A1 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405E87 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C7,eax	; 80405E8B 
	DB 0xB8,0xC7,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405E90 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405E94 E8 5B E5 FF FF 
	test	rax,rax	; 80405E99 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405E9C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405EA0 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405EA4 
	DB 0xF,0x84,0x11,0x1,0x0,0x0
;/
;/	DUP C7C4 AND	0500 XOR IF \ add..cmp    %e_x,x(%rip)
	call	_DUP	; 80405EAA E8 79 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405EAF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7C4,eax	; 80405EB3 
	DB 0xB8,0xC4,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405EB8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405EBC E8 21 E5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405EC1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x500,eax	; 80405EC5 
	DB 0xB8,0x0,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405ECA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405ECE E8 21 E5 FF FF 
	test	rax,rax	; 80405ED3 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405ED6 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405EDA 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405EDE 
	DB 0xF,0x84,0xD7,0x0,0x0,0x0
;/	DUP		0563 XOR IF \ movsxd    %e_x,x(%rip)
	call	_DUP	; 80405EE4 E8 3F E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405EE9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x563,eax	; 80405EED 
	DB 0xB8,0x63,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405EF2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405EF6 E8 F9 E4 FF FF 
	test	rax,rax	; 80405EFB 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405EFE 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405F02 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405F06 
	DB 0xF,0x84,0xAF,0x0,0x0,0x0
;/	C7FD AND
;/*	mov	rax,-0x08(rbp)	; 80405F0C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7FD,eax	; 80405F10 
	DB 0xB8,0xFD,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405F15 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405F19 E8 C4 E4 FF FF 
;/	DUP		0569 XOR IF \ imul    %e_x,x(%rip)
	call	_DUP	; 80405F1E E8 5 E6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405F23 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x569,eax	; 80405F27 
	DB 0xB8,0x69,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405F2C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405F30 E8 BF E4 FF FF 
	test	rax,rax	; 80405F35 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405F38 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405F3C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405F40 
	DB 0xF,0x84,0x75,0x0,0x0,0x0
;/	C7F0 AND
;/*	mov	rax,-0x08(rbp)	; 80405F46 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7F0,eax	; 80405F4A 
	DB 0xB8,0xF0,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405F4F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405F53 E8 8A E4 FF FF 
;/	DUP		0580 XOR IF \ mov..    %e_x,x(%rip)
	call	_DUP	; 80405F58 E8 CB E5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405F5D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x580,eax	; 80405F61 
	DB 0xB8,0x80,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405F66 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405F6A E8 85 E4 FF FF 
	test	rax,rax	; 80405F6F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405F72 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405F76 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405F7A 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/	DUP		0580 XOR IF \ mov..    %e_x,x(%rip)
	call	_DUP	; 80405F80 E8 A3 E5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405F85 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x580,eax	; 80405F89 
	DB 0xB8,0x80,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405F8E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80405F92 E8 5D E4 FF FF 
	test	rax,rax	; 80405F97 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80405F9A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405F9E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_RIPADRque+0x2D3 	; 80405FA2 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/	    		05D0 = \ rol..    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405FA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5D0,eax	; 80405FAC 
	DB 0xB8,0xD0,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405FB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80405FB5 E8 80 E3 FF FF 
;/		EXIT
	ret		; 80405FBA C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 80405FBB E8 73 E1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80405FC0 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80405FC4 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405FCB 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80405FCF C3 
;/
;/VARIABLE PREF_S 

	DQ 0x0
;/
;/: PREF+  PREF_S @ + ;

_PREFadd:
;/*	mov	rax,-0x08(rbp)	; 80405FD8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_RIPADRque+0x2E8 (%rip),rax	; 80405FDC 
	DB 0x48,0x8D,0x5,0xED,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405FE3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80405FE7 E8 DD E1 FF FF 
	call	_add	; 80405FEC E8 2A E4 FF FF 
	ret		; 80405FF1 C3 
;/
;/: >PREF  F0 AND 40 <> 1+ PREF_S ! ;


_greatPREF:
;/*	mov	rax,-0x08(rbp)	; 80405FF2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0,eax	; 80405FF6 
	DB 0xB8,0xF0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80405FFB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80405FFF E8 DE E3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406004 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x40,eax	; 80406008 
	DB 0xB8,0x40,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040600D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 80406011 E8 83 E3 FF FF 
	call	_CHARadd	; 80406016 E8 60 E4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040601B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_RIPADRque+0x2E8 (%rip),rax	; 8040601F 
	DB 0x48,0x8D,0x5,0xAA,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406026 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040602A E8 D1 E1 FF FF 
	ret		; 8040602F C3 
;/
;/: OP_SHIFTS (  n OPX -- )
;/	OP0


_OP_SHIFTS:
;/*	mov	rax,-0x08(rbp)	; 80406030 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80406034 
	DB 0x48,0x8D,0x5,0x9D,0xF8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040603B 
	DB 0x48,0x8D,0x6D,0xF8
;/	?DO
	call	_cbigqueDOcend	; 8040603F E8 C6 E6 FF FF 
	DQ _OP_SHIFTS+0xC2 
;/	 I @ C@ >PREF
;/*	mov	rax,-0x08(rbp)	; 8040604C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	r14,rax	; 80406050 
	DB 0x4C,0x89,0xF0
;/*	lea	-0x08(rbp),rbp	; 80406053 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80406057 E8 6D E1 FF FF 
	call	_Cload	; 8040605C E8 6C E1 FF FF 
	call	_greatPREF	; 80406061 E8 8C FF FF FF 
;/	 I @ PREF+ W@ RIPADR? IF DUP NEGATE I @ PREF+ 2+ L+! THEN
;/*	mov	rax,-0x08(rbp)	; 80406066 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	r14,rax	; 8040606A 
	DB 0x4C,0x89,0xF0
;/*	lea	-0x08(rbp),rbp	; 8040606D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80406071 E8 53 E1 FF FF 
	call	_PREFadd	; 80406076 E8 5D FF FF FF 
	call	_Wload	; 8040607B E8 51 E1 FF FF 
	call	_RIPADRque	; 80406080 E8 63 FC FF FF 
	test	rax,rax	; 80406085 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406088 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040608C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OP_SHIFTS+0x8F 	; 80406090 
	DB 0xF,0x84,0x29,0x0,0x0,0x0
	call	_DUP	; 80406096 E8 8D E4 FF FF 
	call	_NEGATE	; 8040609B E8 61 E3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804060A0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	r14,rax	; 804060A4 
	DB 0x4C,0x89,0xF0
;/*	lea	-0x08(rbp),rbp	; 804060A7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 804060AB E8 19 E1 FF FF 
	call	_PREFadd	; 804060B0 E8 23 FF FF FF 
	call	_2add	; 804060B5 E8 BE E3 FF FF 
	call	_Laddsave	; 804060BA E8 70 E1 FF FF 
;/	DUP I +!
	call	_DUP	; 804060BF E8 64 E4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804060C4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	r14,rax	; 804060C8 
	DB 0x4C,0x89,0xF0
;/*	lea	-0x08(rbp),rbp	; 804060CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_addsave	; 804060CF E8 3C E1 FF FF 
;/	CELL +LOOP
;/*	mov	rax,-0x08(rbp)	; 804060D4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 804060D8 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	add	rax,r14	; 804060DD 
	DB 0x49,0x1,0xC6
;/*	add	rax,r15	; 804060E0 
	DB 0x49,0x1,0xC7
;/*	mov	-0x08(rbp),rax	; 804060E3 
	DB 0x48,0x8B,0x45,0xF8
;/*	jNo	_OP_SHIFTS+0x1C 	; 804060E7 
	DB 0xF,0x81,0x5F,0xFF,0xFF,0xFF
	pop	r14	; 804060ED 41 5E 
	pop	r15	; 804060EF 41 5F 
	pop	rcx	; 804060F1 59 
;/;
	ret		; 804060F2 C3 
;/
;/: OPresize ( OPX shift+ -- )
;/\ изменение размера кода на величину n. OPX адрес в таблице ссылок на код.
;/\ Код сдвигается. Если n больше 0 - сдвиг в сторону старших адресов.
;/\ Если n меньше 0 - сдвиг затиранием начала кода
;/  DUP>R


_OPresize:
	Push	rax	; 804060F3 50 
;/ OVER @ C@ >PREF
	call	_OVER	; 804060F4 E8 A0 E4 FF FF 
	call	_load	; 804060F9 E8 CB E0 FF FF 
	call	_Cload	; 804060FE E8 CA E0 FF FF 
	call	_greatPREF	; 80406103 E8 EA FE FF FF 
;/ OVER @ PREF+ W@ RIPADR? IF 2DUP NEGATE SWAP @ PREF+ 2+ L+! THEN
	call	_OVER	; 80406108 E8 8C E4 FF FF 
	call	_load	; 8040610D E8 B7 E0 FF FF 
	call	_PREFadd	; 80406112 E8 C1 FE FF FF 
	call	_Wload	; 80406117 E8 B5 E0 FF FF 
	call	_RIPADRque	; 8040611C E8 C7 FB FF FF 
	test	rax,rax	; 80406121 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406124 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406128 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPresize+0x62 	; 8040612C 
	DB 0xF,0x84,0x23,0x0,0x0,0x0
	call	_2DUP	; 80406132 E8 FA E3 FF FF 
	call	_NEGATE	; 80406137 E8 C5 E2 FF FF 
	call	_SWAP	; 8040613C E8 1 E4 FF FF 
	call	_load	; 80406141 E8 83 E0 FF FF 
	call	_PREFadd	; 80406146 E8 8D FE FF FF 
	call	_2add	; 8040614B E8 28 E3 FF FF 
	call	_Laddsave	; 80406150 E8 DA E0 FF FF 
;/  OVER OP_SHIFTS
	call	_OVER	; 80406155 E8 3F E4 FF FF 
	call	_OP_SHIFTS	; 8040615A E8 D1 FE FF FF 
;/  ALLOT
	call	_ALLOT	; 8040615F E8 E9 EA FF FF 
;/\  @ DUP  R> +
;/\  DUP   THERE - NEGATE MOVE
;/  @ DUP R>
	call	_load	; 80406164 E8 60 E0 FF FF 
	call	_DUP	; 80406169 E8 BA E3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040616E 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80406172 58 
;/*	lea	-0x08(rbp),rbp	; 80406173 
	DB 0x48,0x8D,0x6D,0xF8
;/  DUP 0<
	call	_DUP	; 80406177 E8 AC E3 FF FF 
	call	_0less	; 8040617C E8 2A E2 FF FF 
;/  IF   -  SWAP
	test	rax,rax	; 80406181 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406184 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406188 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPresize+0xAE 	; 8040618C 
	DB 0xF,0x84,0xF,0x0,0x0,0x0
	call	_sub	; 80406192 E8 81 E2 FF FF 
	call	_SWAP	; 80406197 E8 A6 E3 FF FF 
;/  ELSE +  
;/*	jmp	_OPresize+0xB3 	; 8040619C 
	DB 0xE9,0x5,0x0,0x0,0x0
	call	_add	; 804061A1 E8 75 E2 FF FF 
;/  THEN DUP THERE - NEGATE MOVE
	call	_DUP	; 804061A6 E8 7D E3 FF FF 
	call	_THERE	; 804061AB E8 88 EA FF FF 
	call	_sub	; 804061B0 E8 63 E2 FF FF 
	call	_NEGATE	; 804061B5 E8 47 E2 FF FF 
	call	_MOVE	; 804061BA E8 83 EE FF FF 
;/
;/;
	ret		; 804061BF C3 
;/
;/
;/: OPinsert ( OPX n -- )
;/  DUP>R


_OPinsert:
	Push	rax	; 804061C0 50 
;/  2DUP OPresize DROP
	call	_2DUP	; 804061C1 E8 6B E3 FF FF 
	call	_OPresize	; 804061C6 E8 28 FF FF FF 
	call	_DgreatS	; 804061CB E8 63 DF FF FF 
;/  DUP
	call	_DUP	; 804061D0 E8 53 E3 FF FF 
;/  DUP CELL + OVER OP0 -  OpBuffSize CELL- - NEGATE MOVE
	call	_DUP	; 804061D5 E8 4E E3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804061DA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 804061DE 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804061E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804061E7 E8 2F E2 FF FF 
	call	_OVER	; 804061EC E8 A8 E3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804061F1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804061F5 
	DB 0x48,0x8D,0x5,0xDC,0xF6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804061FC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_sub	; 80406200 E8 13 E2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406205 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x110,eax	; 80406209 
	DB 0xB8,0x10,0x1,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040620E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CELLsub	; 80406212 E8 68 E2 FF FF 
	call	_sub	; 80406217 E8 FC E1 FF FF 
	call	_NEGATE	; 8040621C E8 E0 E1 FF FF 
	call	_MOVE	; 80406221 E8 1C EE FF FF 
;/  R> SWAP +!
;/*	mov	rax,-0x08(rbp)	; 80406226 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8040622A 58 
;/*	lea	-0x08(rbp),rbp	; 8040622B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SWAP	; 8040622F E8 E E3 FF FF 
	call	_addsave	; 80406234 E8 D7 DF FF FF 
;/;
	ret		; 80406239 C3 
;/
;/: OPsize! ( OPX n -- )
;/\ установка нового размера кода. OPX - адрес в таблице ссылок на код.
;/\ код остается на месте. Если размер меньше прежнего, код урезается в конце
;/  OVER OP_SIZE -


_OPsizesave:
	call	_OVER	; 8040623A E8 5A E3 FF FF 
	call	_OP_SIZE	; 8040623F E8 85 FA FF FF 
	call	_sub	; 80406244 E8 CF E1 FF FF 
;/  DUP>R
	Push	rax	; 80406249 50 
;/  OVER OP_SHIFTS
	call	_OVER	; 8040624A E8 4A E3 FF FF 
	call	_OP_SHIFTS	; 8040624F E8 DC FD FF FF 
;/  ALLOT
	call	_ALLOT	; 80406254 E8 F4 E9 FF FF 
;/  CELL- @ DUP R> - SWAP DUP THERE - NEGATE MOVE
	call	_CELLsub	; 80406259 E8 21 E2 FF FF 
	call	_load	; 8040625E E8 66 DF FF FF 
	call	_DUP	; 80406263 E8 C0 E2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406268 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8040626C 58 
;/*	lea	-0x08(rbp),rbp	; 8040626D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_sub	; 80406271 E8 A2 E1 FF FF 
	call	_SWAP	; 80406276 E8 C7 E2 FF FF 
	call	_DUP	; 8040627B E8 A8 E2 FF FF 
	call	_THERE	; 80406280 E8 B3 E9 FF FF 
	call	_sub	; 80406285 E8 8E E1 FF FF 
	call	_NEGATE	; 8040628A E8 72 E1 FF FF 
	call	_MOVE	; 8040628F E8 AE ED FF FF 
;/;
	ret		; 80406294 C3 
;/
;/: OPexcise ( OPX -- )
;/\ удаление кода вместе со ссылкой на него
;/	DUP OP0 = IF @ DP! OP1 ToOP0 BREAK


_OPexcise:
	call	_DUP	; 80406295 E8 8E E2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040629A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040629E 
	DB 0x48,0x8D,0x5,0x33,0xF6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804062A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 804062A9 E8 8C E0 FF FF 
	test	rax,rax	; 804062AE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804062B1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804062B5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPexcise+0x49 	; 804062B9 
	DB 0xF,0x84,0x1F,0x0,0x0,0x0
	call	_load	; 804062BF E8 5 DF FF FF 
	call	_DPsave	; 804062C4 E8 99 E9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804062C9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804062CD 
	DB 0x48,0x8D,0x5,0xC,0xF6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804062D4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804062D8 E8 76 F8 FF FF 
	ret		; 804062DD C3 
;/	DUP 0 OPsize!
	call	_DUP	; 804062DE E8 45 E2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804062E3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804062E7 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804062EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPsizesave	; 804062F0 E8 45 FF FF FF 
;/	DUP>R CELL+ R@ OpBuffSize CELL- R> - OP0 + CMOVE
	Push	rax	; 804062F5 50 
	call	_CELLadd	; 804062F6 E8 73 E1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804062FB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rsp),rax	; 804062FF 
	DB 0x48,0x8B,0x4,0x24
;/*	mov	rax,-0x10(rbp)	; 80406303 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x110,eax	; 80406307 
	DB 0xB8,0x10,0x1,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040630C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CELLsub	; 80406310 E8 6A E1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406315 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80406319 58 
;/*	lea	-0x08(rbp),rbp	; 8040631A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_sub	; 8040631E E8 F5 E0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406323 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80406327 
	DB 0x48,0x8D,0x5,0xAA,0xF5,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040632E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80406332 E8 E4 E0 FF FF 
	call	_CMOVE	; 80406337 E8 91 E3 FF FF 
;/;
	ret		; 8040633C C3 
;/
;/: EVEN-EAX OFF-EAX


_EVENsubEAX:
;/*	mov	rax,-0x08(rbp)	; 8040633D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 80406341 
	DB 0x48,0x8D,0x5,0x6E,0xF5,0xFF,0xFF
;/*	mov	(rax),rax	; 80406348 
	DB 0x48,0x8B,0x0
	test	rax,rax	; 8040634B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040634E 
	DB 0x48,0x8B,0x45,0xF8
;/   IF      M\ 1000 DTST
;/*	jz	_EVENsubEAX+0x132 	; 80406352 
	DB 0xF,0x84,0x17,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406358 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1000,eax	; 8040635C 
	DB 0xB8,0x0,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406361 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80406365 E8 38 F9 FF FF 
;/	SetOP 48 C, 
	call	_SetOP	; 8040636A E8 5A F7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040636F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406373 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406378 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040637C E8 4D E9 FF FF 
;/	OFF-EAX DUP SHORT?
;/*	mov	rax,-0x08(rbp)	; 80406381 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 80406385 
	DB 0x48,0x8D,0x5,0x2A,0xF5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040638C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040638F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP	; 80406393 E8 90 E1 FF FF 
	call	_SHORTque	; 80406398 E8 2B F2 FF FF 
;/     IF		J_COD IF c083 ELSE 408D THEN W, C,
	test	rax,rax	; 8040639D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804063A0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804063A4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EVENsubEAX+0xBA 	; 804063A8 
	DB 0xF,0x84,0x49,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063AE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 804063B2 
	DB 0x48,0x8D,0x5,0xBC,0xF4,0xFF,0xFF
;/*	mov	(rax),rax	; 804063B9 
	DB 0x48,0x8B,0x0
	test	rax,rax	; 804063BC 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804063BF 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EVENsubEAX+0x9E 	; 804063C3 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063C9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC083,eax	; 804063CD 
	DB 0xB8,0x83,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804063D2 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jmp	_EVENsubEAX+0xAB 	; 804063D6 
	DB 0xE9,0xD,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063DB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D,eax	; 804063DF 
	DB 0xB8,0x8D,0x40,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804063E4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 804063E8 E8 C4 E8 FF FF 
	call	_Ccom	; 804063ED E8 DC E8 FF FF 
;/     ELSE	J_COD IF 5 C, ELSE 808D W, THEN  L,
;/*	jmp	_EVENsubEAX+0x103 	; 804063F2 
	DB 0xE9,0x49,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063F7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 804063FB 
	DB 0x48,0x8D,0x5,0x73,0xF4,0xFF,0xFF
;/*	mov	(rax),rax	; 80406402 
	DB 0x48,0x8B,0x0
	test	rax,rax	; 80406405 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406408 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EVENsubEAX+0xEC 	; 8040640C 
	DB 0xF,0x84,0x17,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406412 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 80406416 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040641B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040641F E8 AA E8 FF FF 
;/*	jmp	_EVENsubEAX+0xFE 	; 80406424 
	DB 0xE9,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406429 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x808D,eax	; 8040642D 
	DB 0xB8,0x8D,0x80,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406432 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 80406436 E8 76 E8 FF FF 
	call	_Lcom	; 8040643B E8 54 E8 FF FF 
;/     THEN   \  LEA   EAX,  OFF-EBP [EAX]
;/     0 TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80406440 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406444 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80406449 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040644D 
	DB 0x48,0x8D,0x5,0x62,0xF4,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80406454 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80406458 E8 A3 DD FF FF 
;/       M\ 1001 DTST
;/*	mov	rax,-0x08(rbp)	; 8040645D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1001,eax	; 80406461 
	DB 0xB8,0x1,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406466 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040646A E8 33 F8 FF FF 
;/   THEN
;/;
	ret		; 8040646F C3 
;/
;/: EVEN-EBP OFF-EBP


_EVENsubEBP:
;/*	mov	rax,-0x08(rbp)	; 80406470 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 80406474 
	DB 0x48,0x8D,0x5,0x2E,0xF4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040647B 
	DB 0x48,0x8B,0x0
	test	rax,rax	; 8040647E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406481 
	DB 0x48,0x8B,0x45,0xF8
;/   IF SetOP
;/*	jz	_EVENsubEBP+0x78 	; 80406485 
	DB 0xF,0x84,0x5D,0x0,0x0,0x0
	call	_SetOP	; 8040648B E8 39 F6 FF FF 
;/  48 C, 06D8D W, OFF-EBP C, \   LEA   ebp,  OFF-EBP [EBP]
;/*	mov	rax,-0x08(rbp)	; 80406490 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406494 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406499 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040649D E8 2C E8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804064A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D,eax	; 804064A6 
	DB 0xB8,0x8D,0x6D,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804064AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 804064AF E8 FD E7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804064B4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 804064B8 
	DB 0x48,0x8D,0x5,0xEA,0xF3,0xFF,0xFF
;/*	mov	(rax),rax	; 804064BF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804064C2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 804064C6 E8 3 E8 FF FF 
;/      0 TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 804064CB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804064CF 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 804064D4 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 804064D8 
	DB 0x48,0x8D,0x5,0xCA,0xF3,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 804064DF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 804064E3 E8 18 DD FF FF 
;/   THEN
;/;
	ret		; 804064E8 C3 
;/
;/: +>OFF-EBP ( C -- )
;/   C>S OFF-EBP + TO OFF-EBP ;


_addgreatOFFsubEBP:
	call	_CgreatS	; 804064E9 E8 FD DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804064EE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 804064F2 
	DB 0x48,0x8D,0x5,0xB0,0xF3,0xFF,0xFF
;/*	mov	(rax),rax	; 804064F9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804064FC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80406500 E8 16 DF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406505 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 80406509 
	DB 0x48,0x8D,0x5,0x99,0xF3,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406510 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80406514 E8 E7 DC FF FF 
	ret		; 80406519 C3 
;/
;/: ADD|OR|AND|XOR<>  ( l -- FLAG )
;/  FFFFFF AND


_ADDlORlANDlXORlessgreat:
;/*	mov	rax,-0x08(rbp)	; 8040651A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040651E 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80406523 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406527 E8 B6 DE FF FF 
;/   CASE
;/	DUP	450348 XOR IF \ ADD
	call	_DUP	; 8040652C E8 F7 DF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406531 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x450348,eax	; 80406535 
	DB 0xB8,0x48,0x3,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040653A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040653E E8 B1 DE FF FF 
	test	rax,rax	; 80406543 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406546 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040654A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_ADDlORlANDlXORlessgreat+0xC7 	; 8040654E 
	DB 0xF,0x84,0x8D,0x0,0x0,0x0
;/	DUP	450B48 XOR IF \  OR
	call	_DUP	; 80406554 E8 CF DF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406559 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x450B48,eax	; 8040655D 
	DB 0xB8,0x48,0xB,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 80406562 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406566 E8 89 DE FF FF 
	test	rax,rax	; 8040656B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040656E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406572 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_ADDlORlANDlXORlessgreat+0xC7 	; 80406576 
	DB 0xF,0x84,0x65,0x0,0x0,0x0
;/	DUP	452348 XOR IF \ AND
	call	_DUP	; 8040657C E8 A7 DF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406581 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x452348,eax	; 80406585 
	DB 0xB8,0x48,0x23,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040658A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040658E E8 61 DE FF FF 
	test	rax,rax	; 80406593 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406596 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040659A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_ADDlORlANDlXORlessgreat+0xC7 	; 8040659E 
	DB 0xF,0x84,0x3D,0x0,0x0,0x0
;/	DUP	453348 XOR IF \ XOR
	call	_DUP	; 804065A4 E8 7F DF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804065A9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453348,eax	; 804065AD 
	DB 0xB8,0x48,0x33,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 804065B2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804065B6 E8 39 DE FF FF 
	test	rax,rax	; 804065BB 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804065BE 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804065C2 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_ADDlORlANDlXORlessgreat+0xC7 	; 804065C6 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
;/             DROP TRUE EXIT
	call	_DgreatS	; 804065CC E8 62 DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804065D1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 804065D5 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804065DC 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804065E0 C3 
;/  DUPENDCASE DROP FALSE ;
	call	_DgreatS	; 804065E1 E8 4D DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804065E6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804065EA 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804065EF 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804065F3 C3 
;/
;/: -EVEN-EBP
;/     OP0 @ :-SET


_subEVENsubEBP:
;/*	mov	rax,-0x08(rbp)	; 804065F4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804065F8 
	DB 0x48,0x8D,0x5,0xD9,0xF2,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804065FF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80406603 E8 C1 DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406608 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 8040660C 
	DB 0x48,0x8D,0x5,0xEA,0xF3,0xFF,0xFF
;/*	mov	(rax),rax	; 80406613 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80406616 
	DB 0x48,0x8D,0x6D,0xF8
;/ U< IF BREAK
	call	_Uless	; 8040661A E8 9D DD FF FF 
	test	rax,rax	; 8040661F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406622 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406626 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEBP+0x3D 	; 8040662A 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 80406630 C3 
;/     OP0 @ L@ FFFFFF AND 06D8D48 =  \  LEA   ebp,  OFF-EBP [EBP]
;/*	mov	rax,-0x08(rbp)	; 80406631 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80406635 
	DB 0x48,0x8D,0x5,0x9C,0xF2,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040663C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80406640 E8 84 DB FF FF 
	call	_Lload	; 80406645 E8 7C DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040664A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040664E 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80406653 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406657 E8 86 DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040665C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D48,eax	; 80406660 
	DB 0xB8,0x48,0x8D,0x6D,0x0
;/*	lea	-0x08(rbp),rbp	; 80406665 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80406669 E8 CC DC FF FF 
;/     IF  OP0 @ 3 + C@ +>OFF-EBP
	test	rax,rax	; 8040666E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406671 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406675 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEBP+0xE4 	; 80406679 
	DB 0xF,0x84,0x59,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040667F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80406683 
	DB 0x48,0x8D,0x5,0x4E,0xF2,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040668A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040668E E8 36 DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406693 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 80406697 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040669C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804066A0 E8 76 DD FF FF 
	call	_Cload	; 804066A5 E8 23 DB FF FF 
	call	_addgreatOFFsubEBP	; 804066AA E8 3A FE FF FF 
;/         OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804066AF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804066B3 
	DB 0x48,0x8D,0x5,0x26,0xF2,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804066BA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804066BE E8 90 F4 FF FF 
;/        -4 ALLOT EXIT
;/*	mov	rax,-0x08(rbp)	; 804066C3 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 804066C7 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804066CE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804066D2 E8 76 E5 FF FF 
	ret		; 804066D7 C3 
;/     THEN ;
	ret		; 804066D8 C3 
;/
;/
;/: DUP2B? ( w -- w flg )
;/  DUP


_DUP2Bque:
	call	_DUP	; 804066D9 E8 4A DE FF FF 
;/   CASE
;/  DUP		1088	XOR IF \	mov    %dl,(%rax)
	call	_DUP	; 804066DE E8 45 DE FF FF 
;/*	mov	rax,-0x08(rbp)	; 804066E3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1088,eax	; 804066E7 
	DB 0xB8,0x88,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804066EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804066F0 E8 FF DC FF FF 
	test	rax,rax	; 804066F5 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804066F8 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804066FC 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406700 
	DB 0xF,0x84,0xB3,0x2,0x0,0x0
;/  DUP		1089	XOR IF \	mov    %edx,(%rax)
	call	_DUP	; 80406706 E8 1D DE FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040670B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1089,eax	; 8040670F 
	DB 0xB8,0x89,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406714 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406718 E8 D7 DC FF FF 
	test	rax,rax	; 8040671D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406720 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406724 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406728 
	DB 0xF,0x84,0x8B,0x2,0x0,0x0
;/  DUP		1001	XOR IF \	add     %rdx,(%rax)
	call	_DUP	; 8040672E E8 F5 DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406733 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1001,eax	; 80406737 
	DB 0xB8,0x1,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040673C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406740 E8 AF DC FF FF 
	test	rax,rax	; 80406745 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406748 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040674C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406750 
	DB 0xF,0x84,0x63,0x2,0x0,0x0
;/  DUP		C019	XOR IF \	sbb     %eax,%eax
	call	_DUP	; 80406756 E8 CD DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040675B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC019,eax	; 8040675F 
	DB 0xB8,0x19,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406764 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406768 E8 87 DC FF FF 
	test	rax,rax	; 8040676D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406770 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406774 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406778 
	DB 0xF,0x84,0x3B,0x2,0x0,0x0
;/  DUP		C063	XOR IF \	movslq %eax,%rax
	call	_DUP	; 8040677E E8 A5 DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406783 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC063,eax	; 80406787 
	DB 0xB8,0x63,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040678C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406790 E8 5F DC FF FF 
	test	rax,rax	; 80406795 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406798 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040679C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 804067A0 
	DB 0xF,0x84,0x13,0x2,0x0,0x0
;/  DUP		D031	XOR IF \	xor     %rdx,%rax
	call	_DUP	; 804067A6 E8 7D DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804067AB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD031,eax	; 804067AF 
	DB 0xB8,0x31,0xD0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804067B4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804067B8 E8 37 DC FF FF 
	test	rax,rax	; 804067BD 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804067C0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804067C4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 804067C8 
	DB 0xF,0x84,0xEB,0x1,0x0,0x0
;/  DUP		D029	XOR IF \	sub     %rdx,%rax
	call	_DUP	; 804067CE E8 55 DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804067D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD029,eax	; 804067D7 
	DB 0xB8,0x29,0xD0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804067DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804067E0 E8 F DC FF FF 
	test	rax,rax	; 804067E5 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804067E8 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804067EC 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 804067F0 
	DB 0xF,0x84,0xC3,0x1,0x0,0x0
;/  DUP		008B	XOR IF \	mov	(%rax),%eax
	call	_DUP	; 804067F6 E8 2D DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804067FB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B,eax	; 804067FF 
	DB 0xB8,0x8B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406804 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406808 E8 E7 DB FF FF 
	test	rax,rax	; 8040680D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406810 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406814 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406818 
	DB 0xF,0x84,0x9B,0x1,0x0,0x0
;/  DUP		00FF	XOR IF \	incl	(%rax)
	call	_DUP	; 8040681E E8 5 DD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406823 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80406827 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040682C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406830 E8 BF DB FF FF 
	test	rax,rax	; 80406835 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406838 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040683C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406840 
	DB 0xF,0x84,0x73,0x1,0x0,0x0
;/  DUP		028B	XOR IF \	mov	(%rdx),%eax
	call	_DUP	; 80406846 E8 DD DC FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040684B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x28B,eax	; 8040684F 
	DB 0xB8,0x8B,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406854 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406858 E8 97 DB FF FF 
	test	rax,rax	; 8040685D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406860 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406864 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406868 
	DB 0xF,0x84,0x4B,0x1,0x0,0x0
;/  DUP		F9F7	XOR IF \	idiv   %ecx
	call	_DUP	; 8040686E E8 B5 DC FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406873 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF9F7,eax	; 80406877 
	DB 0xB8,0xF7,0xF9,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040687C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406880 E8 6F DB FF FF 
	test	rax,rax	; 80406885 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406888 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040688C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406890 
	DB 0xF,0x84,0x23,0x1,0x0,0x0
;/  DUP		9948	XOR IF \	cqto
	call	_DUP	; 80406896 E8 8D DC FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040689B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9948,eax	; 8040689F 
	DB 0xB8,0x48,0x99,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804068A4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804068A8 E8 47 DB FF FF 
	test	rax,rax	; 804068AD 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804068B0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804068B4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 804068B8 
	DB 0xF,0x84,0xFB,0x0,0x0,0x0
;/  DUP E4FC AND	C088	XOR IF \   mov    %e<abcd>x,%e<abcd>x
	call	_DUP	; 804068BE E8 65 DC FF FF 
;/*	mov	rax,-0x08(rbp)	; 804068C3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE4FC,eax	; 804068C7 
	DB 0xB8,0xFC,0xE4,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804068CC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804068D0 E8 D DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804068D5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC088,eax	; 804068D9 
	DB 0xB8,0x88,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804068DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804068E2 E8 D DB FF FF 
	test	rax,rax	; 804068E7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804068EA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804068EE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 804068F2 
	DB 0xF,0x84,0xC1,0x0,0x0,0x0
;/  DUP E7FC AND	E0D0	XOR IF \ s<a|h>r	$1,%rax
	call	_DUP	; 804068F8 E8 2B DC FF FF 
;/*	mov	rax,-0x08(rbp)	; 804068FD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE7FC,eax	; 80406901 
	DB 0xB8,0xFC,0xE7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406906 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040690A E8 D3 DA FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040690F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE0D0,eax	; 80406913 
	DB 0xB8,0xD0,0xE0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406918 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040691C E8 D3 DA FF FF 
	test	rax,rax	; 80406921 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406924 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406928 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 8040692C 
	DB 0xF,0x84,0x87,0x0,0x0,0x0
;/  F6FF AND
;/*	mov	rax,-0x08(rbp)	; 80406932 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF6FF,eax	; 80406936 
	DB 0xB8,0xFF,0xF6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040693B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040693F E8 9E DA FF FF 
;/  DUP		C0FF	XOR IF \ <in|de>cq	%eax
	call	_DUP	; 80406944 E8 DF DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406949 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0FF,eax	; 8040694D 
	DB 0xB8,0xFF,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406952 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406956 E8 99 DA FF FF 
	test	rax,rax	; 8040695B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040695E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406962 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 80406966 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/  F0FE AND
;/*	mov	rax,-0x08(rbp)	; 8040696C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0FE,eax	; 80406970 
	DB 0xB8,0xFE,0xF0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406975 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406979 E8 64 DA FF FF 
;/  DUP		D0F6	XOR IF \ n<ot|eg>	%eax
	call	_DUP	; 8040697E E8 A5 DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406983 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD0F6,eax	; 80406987 
	DB 0xB8,0xF6,0xD0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040698C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406990 E8 5F DA FF FF 
	test	rax,rax	; 80406995 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406998 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040699C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP2Bque+0x2E0 	; 804069A0 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/ DROP  FALSE  EXIT
	call	_DgreatS	; 804069A6 E8 88 D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804069AB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804069AF 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804069B4 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804069B8 C3 
;/   DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 804069B9 E8 75 D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804069BE 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 804069C2 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804069C9 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804069CD C3 
;/
;/: DUP3B?[EBP]  ( u -- u FLAG )
;/  DUP FFFF AND


_DUP3BquexcEBPyc:
	call	_DUP	; 804069CE E8 55 DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804069D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 804069D7 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804069DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804069E0 E8 FD D9 FF FF 
;/   CASE
;/  DUP E7FC AND	4588	XOR IF \ mov    0x_(%rbp),%e<abcd>x | %e<abcd>x,0x_(%rbp)
	call	_DUP	; 804069E5 E8 3E DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804069EA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE7FC,eax	; 804069EE 
	DB 0xB8,0xFC,0xE7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804069F3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804069F7 E8 E6 D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804069FC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4588,eax	; 80406A00 
	DB 0xB8,0x88,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406A05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406A09 E8 E6 D9 FF FF 
	test	rax,rax	; 80406A0E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406A11 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406A15 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3BquexcEBPyc+0xEE 	; 80406A19 
	DB 0xF,0x84,0x9D,0x0,0x0,0x0
;/  DUP FFC5 AND	4501	XOR IF \ add|or|adc|sbb|and|sub|xor|cmp  0x_(%rbp),%eax | %eax,0x_(%rbp)
	call	_DUP	; 80406A1F E8 4 DB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406A24 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFC5,eax	; 80406A28 
	DB 0xB8,0xC5,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406A2D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406A31 E8 AC D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406A36 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4501,eax	; 80406A3A 
	DB 0xB8,0x1,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406A3F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406A43 E8 AC D9 FF FF 
	test	rax,rax	; 80406A48 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406A4B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406A4F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3BquexcEBPyc+0xEE 	; 80406A53 
	DB 0xF,0x84,0x63,0x0,0x0,0x0
;/  DUP		558B	XOR IF \ mov 0x00(%rbp),%edx
	call	_DUP	; 80406A59 E8 CA DA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406A5E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558B,eax	; 80406A62 
	DB 0xB8,0x8B,0x55,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406A67 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406A6B E8 84 D9 FF FF 
	test	rax,rax	; 80406A70 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406A73 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406A77 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3BquexcEBPyc+0xEE 	; 80406A7B 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/  DUP		6DF7	XOR IF \ imulL   0x00(%rbp)
	call	_DUP	; 80406A81 E8 A2 DA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406A86 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6DF7,eax	; 80406A8A 
	DB 0xB8,0xF7,0x6D,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406A8F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406A93 E8 5C D9 FF FF 
	test	rax,rax	; 80406A98 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406A9B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406A9F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3BquexcEBPyc+0xEE 	; 80406AA3 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/            DROP FALSE EXIT
	call	_DgreatS	; 80406AA9 E8 85 D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406AAE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406AB2 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406AB7 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406ABB C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 80406ABC E8 72 D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406AC1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80406AC5 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406ACC 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406AD0 C3 
;/
;/: DUP3B? ( u -- u flg )
;/  DUP 


_DUP3Bque:
	call	_DUP	; 80406AD1 E8 52 DA FF FF 
;/  DUP FF AND 48 = IF 8 >> DUP2B? NIP BREAK  \ rex.w
	call	_DUP	; 80406AD6 E8 4D DA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406ADB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80406ADF 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406AE4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406AE8 E8 F5 D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406AED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406AF1 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406AF6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80406AFA E8 3B D8 FF FF 
	test	rax,rax	; 80406AFF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406B02 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406B06 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x5C 	; 80406B0A 
	DB 0xF,0x84,0x1D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406B10 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80406B14 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406B19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 80406B1D E8 1F DB FF FF 
	call	_DUP2Bque	; 80406B22 E8 B2 FB FF FF 
	call	_NIP	; 80406B27 E8 E0 DA FF FF 
	ret		; 80406B2C C3 
;/   CASE
;/ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80406B2D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80406B31 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80406B36 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406B3A E8 A3 D8 FF FF 
;/  
;/  DUP		00B60F	XOR IF \ movzbl  (%rax),%eax 
	call	_DUP	; 80406B3F E8 E4 D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406B44 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB60F,eax	; 80406B48 
	DB 0xB8,0xF,0xB6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406B4D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406B51 E8 9E D8 FF FF 
	test	rax,rax	; 80406B56 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406B59 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406B5D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406B61 
	DB 0xF,0x84,0x17,0x2,0x0,0x0
;/  DUP		00B70F	XOR IF \ movzwl  (%rax),%eax 
	call	_DUP	; 80406B67 E8 BC D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406B6C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB70F,eax	; 80406B70 
	DB 0xB8,0xF,0xB7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406B75 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406B79 E8 76 D8 FF FF 
	test	rax,rax	; 80406B7E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406B81 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406B85 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406B89 
	DB 0xF,0x84,0xEF,0x1,0x0,0x0
;/  DUP		C0BE0F	XOR IF \ movsbl %al,%eax
	call	_DUP	; 80406B8F E8 94 D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406B94 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0BE0F,eax	; 80406B98 
	DB 0xB8,0xF,0xBE,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406B9D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406BA1 E8 4E D8 FF FF 
	test	rax,rax	; 80406BA6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406BA9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406BAD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406BB1 
	DB 0xF,0x84,0xC7,0x1,0x0,0x0
;/  DUP		C0BF0F	XOR IF \ movswl %ax,%eax
	call	_DUP	; 80406BB7 E8 6C D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406BBC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0BF0F,eax	; 80406BC0 
	DB 0xB8,0xF,0xBF,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406BC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406BC9 E8 26 D8 FF FF 
	test	rax,rax	; 80406BCE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406BD1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406BD5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406BD9 
	DB 0xF,0x84,0x9F,0x1,0x0,0x0
;/  DUP		C09F0F	XOR IF \ setg	%al
	call	_DUP	; 80406BDF E8 44 D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406BE4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC09F0F,eax	; 80406BE8 
	DB 0xB8,0xF,0x9F,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406BED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406BF1 E8 FE D7 FF FF 
	test	rax,rax	; 80406BF6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406BF9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406BFD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406C01 
	DB 0xF,0x84,0x77,0x1,0x0,0x0
;/  DUP		C09C0F	XOR IF \ setl	%al
	call	_DUP	; 80406C07 E8 1C D9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406C0C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC09C0F,eax	; 80406C10 
	DB 0xB8,0xF,0x9C,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406C15 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406C19 E8 D6 D7 FF FF 
	test	rax,rax	; 80406C1E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406C21 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406C25 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406C29 
	DB 0xF,0x84,0x4F,0x1,0x0,0x0
;/  DUP		108966	XOR IF \ mov     %dx,(%rax)
	call	_DUP	; 80406C2F E8 F4 D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406C34 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x108966,eax	; 80406C38 
	DB 0xB8,0x66,0x89,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 80406C3D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406C41 E8 AE D7 FF FF 
	test	rax,rax	; 80406C46 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406C49 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406C4D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406C51 
	DB 0xF,0x84,0x27,0x1,0x0,0x0
;/ FFFF AND
;/*	mov	rax,-0x08(rbp)	; 80406C57 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 80406C5B 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406C60 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406C64 E8 79 D7 FF FF 
;/  DUP		E883	XOR IF \ sub	$_,%rax
	call	_DUP	; 80406C69 E8 BA D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406C6E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE883,eax	; 80406C72 
	DB 0xB8,0x83,0xE8,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406C77 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406C7B E8 74 D7 FF FF 
	test	rax,rax	; 80406C80 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406C83 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406C87 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406C8B 
	DB 0xF,0x84,0xED,0x0,0x0,0x0
;/  DUP		408B	XOR IF \ mov    0x_(%rax),%eax
	call	_DUP	; 80406C91 E8 92 D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406C96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408B,eax	; 80406C9A 
	DB 0xB8,0x8B,0x40,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406C9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406CA3 E8 4C D7 FF FF 
	test	rax,rax	; 80406CA8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406CAB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406CAF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406CB3 
	DB 0xF,0x84,0xC5,0x0,0x0,0x0
;/  DUP		408D	XOR IF \ lea    -0x70(%rax),%eax
	call	_DUP	; 80406CB9 E8 6A D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406CBE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D,eax	; 80406CC2 
	DB 0xB8,0x8D,0x40,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406CC7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406CCB E8 24 D7 FF FF 
	test	rax,rax	; 80406CD0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406CD3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406CD7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406CDB 
	DB 0xF,0x84,0x9D,0x0,0x0,0x0
;/  DUP		508D	XOR IF \ lea 0x_(%rax),%rdx
	call	_DUP	; 80406CE1 E8 42 D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406CE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x508D,eax	; 80406CEA 
	DB 0xB8,0x8D,0x50,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406CEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406CF3 E8 FC D6 FF FF 
	test	rax,rax	; 80406CF8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406CFB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406CFF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406D03 
	DB 0xF,0x84,0x75,0x0,0x0,0x0
;/  DUP		048D	XOR IF \ lea (%rax,%rax),%rax
	call	_DUP	; 80406D09 E8 1A D8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406D0E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48D,eax	; 80406D12 
	DB 0xB8,0x8D,0x4,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406D17 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406D1B E8 D4 D6 FF FF 
	test	rax,rax	; 80406D20 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406D23 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406D27 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406D2B 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/C7FE AND
;/*	mov	rax,-0x08(rbp)	; 80406D31 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7FE,eax	; 80406D35 
	DB 0xB8,0xFE,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406D3A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406D3E E8 9F D6 FF FF 
;/  DUP		C0C0	XOR IF \ rol..sar $X,%al
	call	_DUP	; 80406D43 E8 E0 D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406D48 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C0,eax	; 80406D4C 
	DB 0xB8,0xC0,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406D51 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406D55 E8 9A D6 FF FF 
	test	rax,rax	; 80406D5A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406D5D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406D61 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP3Bque+0x2AD 	; 80406D65 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/	DROP FALSE EXIT
	call	_DgreatS	; 80406D6B E8 C3 D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406D70 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406D74 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406D79 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406D7D C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 80406D7E E8 B0 D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406D83 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80406D87 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406D8E 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406D92 C3 
;/
;/: DUP4B? ( u -- u flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP3B? NIP BREAK  \ rex.w


_DUP4Bque:
	call	_DUP	; 80406D93 E8 90 D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406D98 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80406D9C 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406DA1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406DA5 E8 38 D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406DAA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406DAE 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406DB3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80406DB7 E8 7E D5 FF FF 
	test	rax,rax	; 80406DBC 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406DBF 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406DC3 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP4Bque+0x5C 	; 80406DC7 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
	call	_DUP	; 80406DCD E8 56 D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406DD2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80406DD6 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406DDB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 80406DDF E8 5D D8 FF FF 
	call	_DUP3Bque	; 80406DE4 E8 E8 FC FF FF 
	call	_NIP	; 80406DE9 E8 1E D8 FF FF 
	ret		; 80406DEE C3 
;/   CASE
;/  DUP	40B60F	XOR IF \ movzbl X(%rax),%eax
	call	_DUP	; 80406DEF E8 34 D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406DF4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x40B60F,eax	; 80406DF8 
	DB 0xB8,0xF,0xB6,0x40,0x0
;/*	lea	-0x08(rbp),rbp	; 80406DFD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406E01 E8 EE D5 FF FF 
	test	rax,rax	; 80406E06 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406E09 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406E0D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP4Bque+0x9C 	; 80406E11 
	DB 0xF,0x84,0x18,0x0,0x0,0x0
;/  DUP	40B70F	= EXIT \ movzwl	X(%rax),%eax             
	call	_DUP	; 80406E17 E8 C D7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406E1C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x40B70F,eax	; 80406E20 
	DB 0xB8,0xF,0xB7,0x40,0x0
;/*	lea	-0x08(rbp),rbp	; 80406E25 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80406E29 E8 C D5 FF FF 
	ret		; 80406E2E C3 
;/  DUPENDCASE  TRUE ;
;/*	mov	rax,-0x08(rbp)	; 80406E2F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80406E33 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406E3A 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406E3E C3 
;/
;/
;/: DUP5B? ( u -- u flg )
;/  DUP


_DUP5Bque:
	call	_DUP	; 80406E3F E8 E4 D6 FF FF 
;/   CASE
;/ FF AND
;/*	mov	rax,-0x08(rbp)	; 80406E44 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80406E48 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406E4D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406E51 E8 8C D5 FF FF 
;/  DUP	B8 XOR IF \ mov    $_,%eax
	call	_DUP	; 80406E56 E8 CD D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406E5B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 80406E5F 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406E64 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406E68 E8 87 D5 FF FF 
	test	rax,rax	; 80406E6D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406E70 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406E74 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP5Bque+0x8C 	; 80406E78 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/ CF AND
;/*	mov	rax,-0x08(rbp)	; 80406E7E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xCF,eax	; 80406E82 
	DB 0xB8,0xCF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406E87 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406E8B E8 52 D5 FF FF 
;/  DUP	05 XOR IF \ sub	$_,%eax
	call	_DUP	; 80406E90 E8 93 D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406E95 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 80406E99 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406E9E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406EA2 E8 4D D5 FF FF 
	test	rax,rax	; 80406EA7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406EAA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406EAE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP5Bque+0x8C 	; 80406EB2 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/	DROP FALSE EXIT
	call	_DgreatS	; 80406EB8 E8 76 D2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406EBD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406EC1 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406EC6 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406ECA C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 80406ECB E8 63 D2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406ED0 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80406ED4 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406EDB 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406EDF C3 
;/
;/: DUP6B?  ( u -- u FLAG )
;/  DUP FF AND 48 = IF DUP 8 >> DUP5B? NIP BREAK  \ rex.w


_DUP6Bque:
	call	_DUP	; 80406EE0 E8 43 D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406EE5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80406EE9 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406EEE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406EF2 E8 EB D4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406EF7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406EFB 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406F00 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80406F04 E8 31 D4 FF FF 
	test	rax,rax	; 80406F09 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406F0C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406F10 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP6Bque+0x5C 	; 80406F14 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
	call	_DUP	; 80406F1A E8 9 D6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406F1F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80406F23 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406F28 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 80406F2C E8 10 D7 FF FF 
	call	_DUP5Bque	; 80406F31 E8 9 FF FF FF 
	call	_NIP	; 80406F36 E8 D1 D6 FF FF 
	ret		; 80406F3B C3 
;/  DUP FFFF AND
	call	_DUP	; 80406F3C E8 E7 D5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406F41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 80406F45 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406F4A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406F4E E8 8F D4 FF FF 
;/   CASE
;/  DUP		00C7	XOR IF \ movq	$_,(%rax)
	call	_DUP	; 80406F53 E8 D0 D5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406F58 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7,eax	; 80406F5C 
	DB 0xB8,0xC7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406F61 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80406F65 E8 8A D4 FF FF 
	test	rax,rax	; 80406F6A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406F6D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406F71 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP6Bque+0xAE 	; 80406F75 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/            DROP FALSE EXIT
	call	_DgreatS	; 80406F7B E8 B3 D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406F80 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406F84 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406F89 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406F8D C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 80406F8E E8 A0 D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406F93 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80406F97 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406F9E 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406FA2 C3 
;/
;/: DUP4B?[EBP] ( u -- u flg )
;/  DUP 


_DUP4BquexcEBPyc:
	call	_DUP	; 80406FA3 E8 80 D5 FF FF 
;/  DUP FF AND 48 = IF 8 >> DUP3B?[EBP] NIP BREAK
	call	_DUP	; 80406FA8 E8 7B D5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406FAD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80406FB1 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406FB6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80406FBA E8 23 D4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406FBF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406FC3 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406FC8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80406FCC E8 69 D3 FF FF 
	test	rax,rax	; 80406FD1 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406FD4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406FD8 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP4BquexcEBPyc+0x5C 	; 80406FDC 
	DB 0xF,0x84,0x1D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406FE2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80406FE6 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406FEB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 80406FEF E8 4D D6 FF FF 
	call	_DUP3BquexcEBPyc	; 80406FF4 E8 D5 F9 FF FF 
	call	_NIP	; 80406FF9 E8 E D6 FF FF 
	ret		; 80406FFE C3 
;/   CASE
;/ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80406FFF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80407003 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80407008 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040700C E8 D1 D3 FF FF 
;/  DUP FFF0FF AND 45400F	XOR IF \ cmov_  0x0(%rbp),%rax
	call	_DUP	; 80407011 E8 12 D5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407016 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFF0FF,eax	; 8040701A 
	DB 0xB8,0xFF,0xF0,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040701F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407023 E8 BA D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407028 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45400F,eax	; 8040702C 
	DB 0xB8,0xF,0x40,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 80407031 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407035 E8 BA D3 FF FF 
	test	rax,rax	; 8040703A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040703D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407041 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP4BquexcEBPyc+0xBB 	; 80407045 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/            DROP FALSE EXIT
	call	_DgreatS	; 8040704B E8 E3 D0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407050 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407054 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407059 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040705D C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 8040705E E8 D0 D0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407063 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80407067 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040706E 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407072 C3 
;/
;/: DUP5B?[EBP] ( u -- u flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP4B?[EBP] NIP BREAK  \ 3b have meanings


_DUP5BquexcEBPyc:
	call	_DUP	; 80407073 E8 B0 D4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407078 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 8040707C 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407081 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407085 E8 58 D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040708A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 8040708E 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407093 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407097 E8 9E D2 FF FF 
	test	rax,rax	; 8040709C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040709F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804070A3 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP5BquexcEBPyc+0x5C 	; 804070A7 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
	call	_DUP	; 804070AD E8 76 D4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804070B2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 804070B6 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804070BB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 804070BF E8 7D D5 FF FF 
	call	_DUP4BquexcEBPyc	; 804070C4 E8 DA FE FF FF 
	call	_NIP	; 804070C9 E8 3E D5 FF FF 
	ret		; 804070CE C3 
;/  0 ;
;/*	mov	rax,-0x08(rbp)	; 804070CF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804070D3 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804070D8 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804070DC C3 
;/
;/: DUP6B?IP  ( u -- u FLAG )
;/  DUP


_DUP6BqueIP:
	call	_DUP	; 804070DD E8 46 D4 FF FF 
;/   CASE
;/  FFFF AND
;/*	mov	rax,-0x08(rbp)	; 804070E2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 804070E6 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804070EB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804070EF E8 EE D2 FF FF 
;/  DUP		058D	XOR IF \ lea     X(%rip),%rax
	call	_DUP	; 804070F4 E8 2F D4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804070F9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D,eax	; 804070FD 
	DB 0xB8,0x8D,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407102 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407106 E8 E9 D2 FF FF 
	test	rax,rax	; 8040710B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040710E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407112 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP6BqueIP+0xC6 	; 80407116 
	DB 0xF,0x84,0x87,0x0,0x0,0x0
;/  FFFD AND	\ direction independent
;/*	mov	rax,-0x08(rbp)	; 8040711C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFD,eax	; 80407120 
	DB 0xB8,0xFD,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407125 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407129 E8 B4 D2 FF FF 
;/  DUP		0589	XOR IF \ mov     %rax,X(%rip)
	call	_DUP	; 8040712E E8 F5 D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407133 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x589,eax	; 80407137 
	DB 0xB8,0x89,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040713C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407140 E8 AF D2 FF FF 
	test	rax,rax	; 80407145 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407148 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040714C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP6BqueIP+0xC6 	; 80407150 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/  FFC0 AND	\
;/*	mov	rax,-0x08(rbp)	; 80407156 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFC0,eax	; 8040715A 
	DB 0xB8,0xC0,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040715F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407163 E8 7A D2 FF FF 
;/  DUP		0500	XOR IF \ add .. cmp   %rax|al,X(%rip)
	call	_DUP	; 80407168 E8 BB D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040716D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x500,eax	; 80407171 
	DB 0xB8,0x0,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407176 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040717A E8 75 D2 FF FF 
	test	rax,rax	; 8040717F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407182 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407186 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP6BqueIP+0xC6 	; 8040718A 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
;/            DROP FALSE EXIT
	call	_DgreatS	; 80407190 E8 9E CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407195 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407199 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040719E 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804071A2 C3 
;/  DUPENDCASE DROP TRUE ;
	call	_DgreatS	; 804071A3 E8 8B CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804071A8 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 804071AC 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804071B3 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804071B7 C3 
;/
;/: DUP7B? ( l -- l flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP6B? NIP BREAK  \ rex.w


_DUP7Bque:
	call	_DUP	; 804071B8 E8 6B D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804071BD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 804071C1 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804071C6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804071CA E8 13 D2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804071CF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 804071D3 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804071D8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 804071DC E8 59 D1 FF FF 
	test	rax,rax	; 804071E1 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804071E4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804071E8 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP7Bque+0x5C 	; 804071EC 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
	call	_DUP	; 804071F2 E8 31 D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804071F7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 804071FB 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407200 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 80407204 E8 38 D4 FF FF 
	call	_DUP6Bque	; 80407209 E8 D2 FC FF FF 
	call	_NIP	; 8040720E E8 F9 D3 FF FF 
	ret		; 80407213 C3 
;/ FALSE ;
;/*	mov	rax,-0x08(rbp)	; 80407214 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407218 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040721D 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407221 C3 
;/
;/: DUP7B?IP ( l -- l flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP6B?IP NIP BREAK  \ rex.w


_DUP7BqueIP:
	call	_DUP	; 80407222 E8 1 D3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407227 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 8040722B 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407230 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407234 E8 A9 D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407239 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 8040723D 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407242 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407246 E8 EF D0 FF FF 
	test	rax,rax	; 8040724B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040724E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407252 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUP7BqueIP+0x5C 	; 80407256 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
	call	_DUP	; 8040725C E8 C7 D2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407261 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80407265 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040726A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 8040726E E8 CE D3 FF FF 
	call	_DUP6BqueIP	; 80407273 E8 65 FE FF FF 
	call	_NIP	; 80407278 E8 8F D3 FF FF 
	ret		; 8040727D C3 
;/ FALSE ;
;/*	mov	rax,-0x08(rbp)	; 8040727E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407282 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407287 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040728B C3 
;/
;/: NEWRAX0  ( addr -- flg ) \ 0 set rax wichout rax using
;/ L@ DUP FF AND 48 = IF 8 >> THEN \ rax -> eax


_NEWRAX0:
	call	_Lload	; 8040728C E8 35 CF FF FF 
	call	_DUP	; 80407291 E8 92 D2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407296 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 8040729A 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040729F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804072A3 E8 3A D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804072A8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 804072AC 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804072B1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 804072B5 E8 80 D0 FF FF 
	test	rax,rax	; 804072BA 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804072BD 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804072C1 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x51 	; 804072C5 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804072CB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 804072CF 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804072D4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 804072D8 E8 64 D3 FF FF 
;/   CASE
;/ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 804072DD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804072E1 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804072E6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804072EA E8 F3 D0 FF FF 
;/ DUP F0894C XOR IF \ mov     %r14,%rax
	call	_DUP	; 804072EF E8 34 D2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804072F4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0894C,eax	; 804072F8 
	DB 0xB8,0x4C,0x89,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 804072FD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407301 E8 EE D0 FF FF 
	test	rax,rax	; 80407306 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407309 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040730D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 80407311 
	DB 0xF,0x84,0x51,0x1,0x0,0x0
;/ FFFF AND
;/*	mov	rax,-0x08(rbp)	; 80407317 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 8040731B 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407320 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407324 E8 B9 D0 FF FF 
;/ DUP	458B XOR IF \	mov    X(%rbp),%rax
	call	_DUP	; 80407329 E8 FA D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040732E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B,eax	; 80407332 
	DB 0xB8,0x8B,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407337 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040733B E8 B4 D0 FF FF 
	test	rax,rax	; 80407340 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407343 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407347 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 8040734B 
	DB 0xF,0x84,0x17,0x1,0x0,0x0
;/ DUP	058a XOR IF \	mov    X(%rip),%al
	call	_DUP	; 80407351 E8 D2 D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407356 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58A,eax	; 8040735A 
	DB 0xB8,0x8A,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040735F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407363 E8 8C D0 FF FF 
	test	rax,rax	; 80407368 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040736B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040736F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 80407373 
	DB 0xF,0x84,0xEF,0x0,0x0,0x0
;/ DUP	058b XOR IF \	mov    X(%rip),%eax
	call	_DUP	; 80407379 E8 AA D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040737E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58B,eax	; 80407382 
	DB 0xB8,0x8B,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407387 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040738B E8 64 D0 FF FF 
	test	rax,rax	; 80407390 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407393 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407397 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 8040739B 
	DB 0xF,0x84,0xC7,0x0,0x0,0x0
;/ DUP	058d XOR IF \	lea    X(%rip),%eax
	call	_DUP	; 804073A1 E8 82 D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804073A6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D,eax	; 804073AA 
	DB 0xB8,0x8D,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804073AF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804073B3 E8 3C D0 FF FF 
	test	rax,rax	; 804073B8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804073BB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804073BF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 804073C3 
	DB 0xF,0x84,0x9F,0x0,0x0,0x0
;/ DUP	D089 XOR IF \	mov     %rdx,%rax
	call	_DUP	; 804073C9 E8 5A D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804073CE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD089,eax	; 804073D2 
	DB 0xB8,0x89,0xD0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804073D7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804073DB E8 14 D0 FF FF 
	test	rax,rax	; 804073E0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804073E3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804073E7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 804073EB 
	DB 0xF,0x84,0x77,0x0,0x0,0x0
;/ DUP	C0C7 XOR IF \	movq    $-0x2CBE,%rax
	call	_DUP	; 804073F1 E8 32 D1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804073F6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C7,eax	; 804073FA 
	DB 0xB8,0xC7,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804073FF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407403 E8 EC CF FF FF 
	test	rax,rax	; 80407408 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040740B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040740F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 80407413 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/ FF AND
;/*	mov	rax,-0x08(rbp)	; 80407419 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 8040741D 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407422 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407426 E8 B7 CF FF FF 
;/ DUP	B8 XOR IF \	 mov     $X,%eax
	call	_DUP	; 8040742B E8 F8 D0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407430 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 80407434 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407439 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040743D E8 B2 CF FF FF 
	test	rax,rax	; 80407442 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407445 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407449 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0+0x1DC 	; 8040744D 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
;/ DROP TRUE EXIT
	call	_DgreatS	; 80407453 E8 DB CC FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407458 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040745C 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407463 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407467 C3 
;/ DUPENDCASE DROP FALSE ;
	call	_DgreatS	; 80407468 E8 C6 CC FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040746D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407471 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407476 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040747A C3 
;/
;/: NEWRAX0+  ( addr -- flg ) \ NEWRAX0 with a ban on deletion
;/  DUP C@ 58 XOR IF \ pop     %rax 


_NEWRAX0add:
	call	_DUP	; 8040747B E8 A8 D0 FF FF 
	call	_Cload	; 80407480 E8 48 CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407485 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58,eax	; 80407489 
	DB 0xB8,0x58,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040748E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407492 E8 5D CF FF FF 
	test	rax,rax	; 80407497 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040749A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040749E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NEWRAX0add+0x33 	; 804074A2 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/  NEWRAX0
	call	_NEWRAX0	; 804074A8 E8 DF FD FF FF 
;/  BREAK DROP FALSE ;
	ret		; 804074AD C3 
	call	_DgreatS	; 804074AE E8 80 CC FF FF 
;/*	mov	rax,-0x08(rbp)	; 804074B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804074B7 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804074BC 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804074C0 C3 
;/
;/: AX_apply<> ( addr -- flg )  \ 0 is not AX application
;/ L@ DUP FF AND 48 = IF 8 >> THEN \ rax -> eax


_AX_applylessgreat:
	call	_Lload	; 804074C1 E8 0 CD FF FF 
	call	_DUP	; 804074C6 E8 5D D0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804074CB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 804074CF 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804074D4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804074D8 E8 5 CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804074DD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 804074E1 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804074E6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 804074EA E8 4B CE FF FF 
	test	rax,rax	; 804074EF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804074F2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804074F6 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_AX_applylessgreat+0x51 	; 804074FA 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407500 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80407504 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407509 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 8040750D E8 2F D1 FF FF 
;/   CASE
;/ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80407512 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80407516 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040751B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040751F E8 BE CE FF FF 
;/ DUP 75894C XOR IF \ mov     %r14,-0x10(%rbp)
	call	_DUP	; 80407524 E8 FF CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407529 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x75894C,eax	; 8040752D 
	DB 0xB8,0x4C,0x89,0x75,0x0
;/*	lea	-0x08(rbp),rbp	; 80407532 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407536 E8 B9 CE FF FF 
	test	rax,rax	; 8040753B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040753E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407542 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_AX_applylessgreat+0x164 	; 80407546 
	DB 0xF,0x84,0xD9,0x0,0x0,0x0
;/ FFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040754C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 80407550 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407555 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407559 E8 84 CE FF FF 
;/ DUP d285 XOR IF \ test   %rdx,%rdx
	call	_DUP	; 8040755E E8 C5 CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407563 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD285,eax	; 80407567 
	DB 0xB8,0x85,0xD2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040756C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407570 E8 7F CE FF FF 
	test	rax,rax	; 80407575 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407578 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040757C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_AX_applylessgreat+0x164 	; 80407580 
	DB 0xF,0x84,0x9F,0x0,0x0,0x0
;/ DUP 35FF XOR IF \ pushq   X (%rip)
	call	_DUP	; 80407586 E8 9D CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040758B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x35FF,eax	; 8040758F 
	DB 0xB8,0xFF,0x35,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407594 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407598 E8 57 CE FF FF 
	test	rax,rax	; 8040759D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804075A0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804075A4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_AX_applylessgreat+0x164 	; 804075A8 
	DB 0xF,0x84,0x77,0x0,0x0,0x0
;/ DUP 45C7 XOR IF \ mov<lq>    $0x4D,-0x08(%rbp)
	call	_DUP	; 804075AE E8 75 CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804075B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C7,eax	; 804075B7 
	DB 0xB8,0xC7,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804075BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804075C0 E8 2F CE FF FF 
	test	rax,rax	; 804075C5 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804075C8 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804075CC 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_AX_applylessgreat+0x164 	; 804075D0 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/ FF AND
;/*	mov	rax,-0x08(rbp)	; 804075D6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 804075DA 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804075DF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804075E3 E8 FA CD FF FF 
;/ DUP	B1 XOR IF \ mov     $0x03,%cl
	call	_DUP	; 804075E8 E8 3B CF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804075ED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB1,eax	; 804075F1 
	DB 0xB8,0xB1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804075F6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804075FA E8 F5 CD FF FF 
	test	rax,rax	; 804075FF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407602 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407606 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_AX_applylessgreat+0x164 	; 8040760A 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
;/ DROP TRUE EXIT
	call	_DgreatS	; 80407610 E8 1E CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407615 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80407619 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407620 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407624 C3 
;/ DUPENDCASE DROP FALSE ;
	call	_DgreatS	; 80407625 E8 9 CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040762A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040762E 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407633 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407637 C3 
;/
;/: ?ChRAX<> ( addr -- flg ) \ 0 is't chench rax
;/ DUP NEWRAX0+ 0= IF DROP TRUE BREAK


_queChRAXlessgreat:
	call	_DUP	; 80407638 E8 EB CE FF FF 
	call	_NEWRAX0add	; 8040763D E8 39 FE FF FF 
	call	_0equ	; 80407642 E8 FB CC FF FF 
	test	rax,rax	; 80407647 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040764A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040764E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x35 	; 80407652 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
	call	_DgreatS	; 80407658 E8 D6 CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040765D 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80407661 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407668 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040766C C3 
;/ DUP AX_apply<> 0= IF DROP FALSE BREAK
	call	_DUP	; 8040766D E8 B6 CE FF FF 
	call	_AX_applylessgreat	; 80407672 E8 4A FE FF FF 
	call	_0equ	; 80407677 E8 C6 CC FF FF 
	test	rax,rax	; 8040767C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040767F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407683 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x68 	; 80407687 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
	call	_DgreatS	; 8040768D E8 A1 CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407692 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407696 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040769B 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040769F C3 
;/ L@ DUP F8 AND 48 = IF 8 >> THEN \ rax -> eax
	call	_Lload	; 804076A0 E8 21 CB FF FF 
	call	_DUP	; 804076A5 E8 7E CE FF FF 
;/*	mov	rax,-0x08(rbp)	; 804076AA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF8,eax	; 804076AE 
	DB 0xB8,0xF8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804076B3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804076B7 E8 26 CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804076BC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 804076C0 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804076C5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 804076C9 E8 6C CC FF FF 
	test	rax,rax	; 804076CE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804076D1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804076D5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0xB9 	; 804076D9 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804076DF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 804076E3 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804076E8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 804076EC E8 50 CF FF FF 
;/	CASE
;/ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 804076F1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804076F5 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804076FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804076FE E8 DF CC FF FF 
;/ DUP 243C83 XOR IF \ cmp    $X,(%rsp)
	call	_DUP	; 80407703 E8 20 CE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407708 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x243C83,eax	; 8040770C 
	DB 0xB8,0x83,0x3C,0x24,0x0
;/*	lea	-0x08(rbp),rbp	; 80407711 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407715 E8 DA CC FF FF 
	test	rax,rax	; 8040771A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040771D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407721 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 80407725 
	DB 0xF,0x84,0xC5,0x1,0x0,0x0
;/ DUP 583880 XOR IF \ cmpb   $X,(%rax)
	call	_DUP	; 8040772B E8 F8 CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407730 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x583880,eax	; 80407734 
	DB 0xB8,0x80,0x38,0x58,0x0
;/*	lea	-0x08(rbp),rbp	; 80407739 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040773D E8 B2 CC FF FF 
	test	rax,rax	; 80407742 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407745 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407749 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 8040774D 
	DB 0xF,0x84,0x9D,0x1,0x0,0x0
;/ FFFF AND
;/*	mov	rax,-0x08(rbp)	; 80407753 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 80407757 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040775C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407760 E8 7D CC FF FF 
;/
;/ DUP 0601 XOR IF \ add    %eax,(%rsi) add    %rax,(%r14)
	call	_DUP	; 80407765 E8 BE CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040776A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x601,eax	; 8040776E 
	DB 0xB8,0x1,0x6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407773 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407777 E8 78 CC FF FF 
	test	rax,rax	; 8040777C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040777F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407783 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 80407787 
	DB 0xF,0x84,0x63,0x1,0x0,0x0
;/ DUP 0689 XOR IF \ mov    %eax,(%rsi) mov    %rax,(%r14)
	call	_DUP	; 8040778D E8 96 CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407792 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x689,eax	; 80407796 
	DB 0xB8,0x89,0x6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040779B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040779F E8 50 CC FF FF 
	test	rax,rax	; 804077A4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804077A7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804077AB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 804077AF 
	DB 0xF,0x84,0x3B,0x1,0x0,0x0
;/ DUP F883 XOR IF \ cmp	$-0x01,%eax
	call	_DUP	; 804077B5 E8 6E CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804077BA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF883,eax	; 804077BE 
	DB 0xB8,0x83,0xF8,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804077C3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804077C7 E8 28 CC FF FF 
	test	rax,rax	; 804077CC 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804077CF 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804077D3 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 804077D7 
	DB 0xF,0x84,0x13,0x1,0x0,0x0
;/ DUP 00FF XOR IF \ incl   (%rax)
	call	_DUP	; 804077DD E8 46 CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804077E2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 804077E6 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804077EB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804077EF E8 0 CC FF FF 
	test	rax,rax	; 804077F4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804077F7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804077FB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 804077FF 
	DB 0xF,0x84,0xEB,0x0,0x0,0x0
;/
;/ DUP FFF0 AND	0580 XOR IF \ mov     %eax,dcomasubSET+0x5 (%rip) ...
	call	_DUP	; 80407805 E8 1E CD FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040780A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFF0,eax	; 8040780E 
	DB 0xB8,0xF0,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407813 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407817 E8 C6 CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040781C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x580,eax	; 80407820 
	DB 0xB8,0x80,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407825 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407829 E8 C6 CB FF FF 
	test	rax,rax	; 8040782E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407831 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407835 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 80407839 
	DB 0xF,0x84,0xB1,0x0,0x0,0x0
;/ DUP		05C7 XOR IF \ mov     $X,Y(%rip)
	call	_DUP	; 8040783F E8 E4 CC FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407844 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C7,eax	; 80407848 
	DB 0xB8,0xC7,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040784D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407851 E8 9E CB FF FF 
	test	rax,rax	; 80407856 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407859 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040785D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 80407861 
	DB 0xF,0x84,0x89,0x0,0x0,0x0
;/ DUP FFF0 AND	5580 XOR IF \ mov|lea     0x08(%rbp),%rdx ...
	call	_DUP	; 80407867 E8 BC CC FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040786C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFF0,eax	; 80407870 
	DB 0xB8,0xF0,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407875 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407879 E8 64 CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040787E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5580,eax	; 80407882 
	DB 0xB8,0x80,0x55,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407887 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040788B E8 64 CB FF FF 
	test	rax,rax	; 80407890 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407893 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407897 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 8040789B 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/ F8 AND
;/*	mov	rax,-0x08(rbp)	; 804078A1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF8,eax	; 804078A5 
	DB 0xB8,0xF8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804078AA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804078AE E8 2F CB FF FF 
;/ DUP	38 XOR IF \ cmp
	call	_DUP	; 804078B3 E8 70 CC FF FF 
;/*	mov	rax,-0x08(rbp)	; 804078B8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x38,eax	; 804078BC 
	DB 0xB8,0x38,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804078C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804078C5 E8 2A CB FF FF 
	test	rax,rax	; 804078CA 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804078CD 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804078D1 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2B8 	; 804078D5 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
;/ DROP TRUE EXIT
	call	_DgreatS	; 804078DB E8 53 C8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804078E0 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 804078E4 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804078EB 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804078EF C3 
;/ DUPENDCASE DROP FALSE ;
	call	_DgreatS	; 804078F0 E8 3E C8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804078F5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804078F9 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804078FE 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407902 C3 
;/
;/: ?ChRDX<> ( addr -- flg ) \ 0 is't chench rax
;/ DUP NEWRAX0+ 0= IF DROP FALSE BREAK


_queChRDXlessgreat:
	call	_DUP	; 80407903 E8 20 CC FF FF 
	call	_NEWRAX0add	; 80407908 E8 6E FB FF FF 
	call	_0equ	; 8040790D E8 30 CA FF FF 
	test	rax,rax	; 80407912 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407915 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407919 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRDXlessgreat+0x33 	; 8040791D 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
	call	_DgreatS	; 80407923 E8 B C8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407928 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040792C 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407931 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407935 C3 
;/DROP TRUE
	call	_DgreatS	; 80407936 E8 F8 C7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040793B 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040793F 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407946 
	DB 0x48,0x8D,0x6D,0xF8
;/;
	ret		; 8040794A C3 
;/
;/: DX_apply<> ( addr -- flg )  \ 0 is not DX application
;/ L@ DUP F8 AND 48 = IF 8 >> THEN \ rax -> eax


_DX_applylessgreat:
	call	_Lload	; 8040794B E8 76 C8 FF FF 
	call	_DUP	; 80407950 E8 D3 CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407955 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF8,eax	; 80407959 
	DB 0xB8,0xF8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040795E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407962 E8 7B CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407967 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 8040796B 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407970 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407974 E8 C1 C9 FF FF 
	test	rax,rax	; 80407979 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040797C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407980 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x51 	; 80407984 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040798A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 8040798E 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407993 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatgreat	; 80407997 E8 A5 CC FF FF 
;/   CASE
;/ FFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040799C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 804079A0 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804079A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804079A9 E8 34 CA FF FF 
;/DUP	058d XOR IF	\ lea     X(%rip),%eax
	call	_DUP	; 804079AE E8 75 CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804079B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D,eax	; 804079B7 
	DB 0xB8,0x8D,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804079BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804079C0 E8 2F CA FF FF 
	test	rax,rax	; 804079C5 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804079C8 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804079CC 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 804079D0 
	DB 0xF,0x84,0x51,0x1,0x0,0x0
;/DUP	408B XOR IF	\ mov	-0x08(%rax),%eax
	call	_DUP	; 804079D6 E8 4D CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804079DB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408B,eax	; 804079DF 
	DB 0xB8,0x8B,0x40,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804079E4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804079E8 E8 7 CA FF FF 
	test	rax,rax	; 804079ED 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804079F0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804079F4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 804079F8 
	DB 0xF,0x84,0x29,0x1,0x0,0x0
;/DUP	458B XOR IF	\ mov	-0x08(%rbp),%eax
	call	_DUP	; 804079FE E8 25 CB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407A03 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B,eax	; 80407A07 
	DB 0xB8,0x8B,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A0C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407A10 E8 DF C9 FF FF 
	test	rax,rax	; 80407A15 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407A18 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407A1C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 80407A20 
	DB 0xF,0x84,0x1,0x1,0x0,0x0
;/DUP	008B XOR IF	\ mov	 (%rax),%eax
	call	_DUP	; 80407A26 E8 FD CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407A2B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B,eax	; 80407A2F 
	DB 0xB8,0x8B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A34 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407A38 E8 B7 C9 FF FF 
	test	rax,rax	; 80407A3D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407A40 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407A44 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 80407A48 
	DB 0xF,0x84,0xD9,0x0,0x0,0x0
;/DUP	FFC0 AND 4500 XOR IF	\ add .. cmp -0x08(%rbp),%eax
	call	_DUP	; 80407A4E E8 D5 CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407A53 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFC0,eax	; 80407A57 
	DB 0xB8,0xC0,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A5C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407A60 E8 7D C9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407A65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4500,eax	; 80407A69 
	DB 0xB8,0x0,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A6E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407A72 E8 7D C9 FF FF 
	test	rax,rax	; 80407A77 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407A7A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407A7E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 80407A82 
	DB 0xF,0x84,0x9F,0x0,0x0,0x0
;/DUP	f089 XOR IF	\ mov    %esi,%eax mov    %r14,%rax
	call	_DUP	; 80407A88 E8 9B CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407A8D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF089,eax	; 80407A91 
	DB 0xB8,0x89,0xF0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A96 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407A9A E8 55 C9 FF FF 
	test	rax,rax	; 80407A9F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407AA2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407AA6 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 80407AAA 
	DB 0xF,0x84,0x77,0x0,0x0,0x0
;/  FF AND
;/*	mov	rax,-0x08(rbp)	; 80407AB0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80407AB4 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407AB9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407ABD E8 20 C9 FF FF 
;/DUP	B8 XOR IF	\ mov     $0x0,%eax
	call	_DUP	; 80407AC2 E8 61 CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407AC7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 80407ACB 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407AD0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407AD4 E8 1B C9 FF FF 
	test	rax,rax	; 80407AD9 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407ADC 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407AE0 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 80407AE4 
	DB 0xF,0x84,0x3D,0x0,0x0,0x0
;/DUP	58 XOR IF	\ pop     %rax
	call	_DUP	; 80407AEA E8 39 CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407AEF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58,eax	; 80407AF3 
	DB 0xB8,0x58,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407AF8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407AFC E8 F3 C8 FF FF 
	test	rax,rax	; 80407B01 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407B04 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407B08 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DX_applylessgreat+0x1DC 	; 80407B0C 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
;/
;/ DROP TRUE EXIT
	call	_DgreatS	; 80407B12 E8 1C C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407B17 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80407B1B 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407B22 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407B26 C3 
;/ DUPENDCASE DROP FALSE ;
	call	_DgreatS	; 80407B27 E8 7 C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407B2C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80407B30 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407B35 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80407B39 C3 
;/
;/: -EBPCLR  ( FLAG OPX  -- FLAG' )
;/   DUP @  :-SET  U< IF DROP BREAK


_subEBPCLR:
	call	_DUP	; 80407B3A E8 E9 C9 FF FF 
	call	_load	; 80407B3F E8 85 C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407B44 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 80407B48 
	DB 0x48,0x8D,0x5,0xAE,0xDE,0xFF,0xFF
;/*	mov	(rax),rax	; 80407B4F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80407B52 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 80407B56 E8 61 C8 FF FF 
	test	rax,rax	; 80407B5B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407B5E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407B62 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x38 	; 80407B66 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 80407B6C E8 C2 C5 FF FF 
	ret		; 80407B71 C3 
;/  OFF-EBP CELL- TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 80407B72 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 80407B76 
	DB 0x48,0x8D,0x5,0x2C,0xDD,0xFF,0xFF
;/*	mov	(rax),rax	; 80407B7D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80407B80 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CELLsub	; 80407B84 E8 F6 C8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407B89 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 80407B8D 
	DB 0x48,0x8D,0x5,0x15,0xDD,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407B94 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80407B98 E8 63 C6 FF FF 
;/  BEGIN
;/	DUP @  4 + THERE  U> IF CELL+ THEN
	call	_DUP	; 80407B9D E8 86 C9 FF FF 
	call	_load	; 80407BA2 E8 22 C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407BA7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 80407BAB 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407BB0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80407BB4 E8 62 C8 FF FF 
	call	_THERE	; 80407BB9 E8 7A D0 FF FF 
	call	_Ugreat	; 80407BBE E8 ED C7 FF FF 
	test	rax,rax	; 80407BC3 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407BC6 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407BCA 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x9F 	; 80407BCE 
	DB 0xF,0x84,0x5,0x0,0x0,0x0
	call	_CELLadd	; 80407BD4 E8 95 C8 FF FF 
;/		?OPlast    IF DROP BREAK
	call	_queOPlast	; 80407BD9 E8 D6 DE FF FF 
	test	rax,rax	; 80407BDE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407BE1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407BE5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0xBB 	; 80407BE9 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 80407BEF E8 3F C5 FF FF 
	ret		; 80407BF4 C3 
;/	DUP @ C@ F0
	call	_DUP	; 80407BF5 E8 2E C9 FF FF 
	call	_load	; 80407BFA E8 CA C5 FF FF 
	call	_Cload	; 80407BFF E8 C9 C5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407C04 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0,eax	; 80407C08 
	DB 0xB8,0xF0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407C0D 
	DB 0x48,0x8D,0x6D,0xF8
;/		AND 70   = IF DROP BREAK \ Jx
	call	_AND	; 80407C11 E8 CC C7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407C16 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x70,eax	; 80407C1A 
	DB 0xB8,0x70,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407C1F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407C23 E8 12 C7 FF FF 
	test	rax,rax	; 80407C28 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407C2B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407C2F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x105 	; 80407C33 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 80407C39 E8 F5 C4 FF FF 
	ret		; 80407C3E C3 
;/
;/     DUP @  \ FLAG OPX [OPX]
	call	_DUP	; 80407C3F E8 E4 C8 FF FF 
	call	_load	; 80407C44 E8 80 C5 FF FF 
;/     DUP W@ 6D8D = IF 2DROP BREAK \ lea  ebp, X[rbp]
	call	_DUP	; 80407C49 E8 DA C8 FF FF 
	call	_Wload	; 80407C4E E8 7E C5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407C53 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D,eax	; 80407C57 
	DB 0xB8,0x8D,0x6D,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407C5C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407C60 E8 D5 C6 FF FF 
	test	rax,rax	; 80407C65 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407C68 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407C6C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x142 	; 80407C70 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407C76 E8 F1 C8 FF FF 
	ret		; 80407C7B C3 
;/     DUP 1+ W@ 6D8D = IF 2DROP BREAK \ lea  rbp, X[rbp]
	call	_DUP	; 80407C7C E8 A7 C8 FF FF 
	call	_CHARadd	; 80407C81 E8 F5 C7 FF FF 
	call	_Wload	; 80407C86 E8 46 C5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407C8B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D,eax	; 80407C8F 
	DB 0xB8,0x8D,0x6D,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407C94 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407C98 E8 9D C6 FF FF 
	test	rax,rax	; 80407C9D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407CA0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407CA4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x17A 	; 80407CA8 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407CAE E8 B9 C8 FF FF 
	ret		; 80407CB3 C3 
;/     DUP C@ FF   = IF 2DROP BREAK \ CALL [x]
	call	_DUP	; 80407CB4 E8 6F C8 FF FF 
	call	_Cload	; 80407CB9 E8 F C5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407CBE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80407CC2 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407CC7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407CCB E8 6A C6 FF FF 
	test	rax,rax	; 80407CD0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407CD3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407CD7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x1AD 	; 80407CDB 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407CE1 E8 86 C8 FF FF 
	ret		; 80407CE6 C3 
;/     DUP C@ E8   = IF 2DROP BREAK \ CALL
	call	_DUP	; 80407CE7 E8 3C C8 FF FF 
	call	_Cload	; 80407CEC E8 DC C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407CF1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE8,eax	; 80407CF5 
	DB 0xB8,0xE8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407CFA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407CFE E8 37 C6 FF FF 
	test	rax,rax	; 80407D03 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407D06 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407D0A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x1E0 	; 80407D0E 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407D14 E8 53 C8 FF FF 
	ret		; 80407D19 C3 
;/     DUP C@ E9   = IF 2DROP BREAK \ JMP
	call	_DUP	; 80407D1A E8 9 C8 FF FF 
	call	_Cload	; 80407D1F E8 A9 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407D24 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE9,eax	; 80407D28 
	DB 0xB8,0xE9,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407D2D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407D31 E8 4 C6 FF FF 
	test	rax,rax	; 80407D36 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407D39 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407D3D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x213 	; 80407D41 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407D47 E8 20 C8 FF FF 
	ret		; 80407D4C C3 
;/     DUP C@ EB   = IF 2DROP BREAK
	call	_DUP	; 80407D4D E8 D6 C7 FF FF 
	call	_Cload	; 80407D52 E8 76 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407D57 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xEB,eax	; 80407D5B 
	DB 0xB8,0xEB,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407D60 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407D64 E8 D1 C5 FF FF 
	test	rax,rax	; 80407D69 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407D6C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407D70 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x246 	; 80407D74 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407D7A E8 ED C7 FF FF 
	ret		; 80407D7F C3 
;/     DUP L@ F0FF
	call	_DUP	; 80407D80 E8 A3 C7 FF FF 
	call	_Lload	; 80407D85 E8 3C C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407D8A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0FF,eax	; 80407D8E 
	DB 0xB8,0xFF,0xF0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407D93 
	DB 0x48,0x8D,0x6D,0xF8
;/          AND 800F = IF 2DROP BREAK \ Jx
	call	_AND	; 80407D97 E8 46 C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407D9C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x800F,eax	; 80407DA0 
	DB 0xB8,0xF,0x80,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407DA5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407DA9 E8 8C C5 FF FF 
	test	rax,rax	; 80407DAE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407DB1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407DB5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x28B 	; 80407DB9 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407DBF E8 A8 C7 FF FF 
	ret		; 80407DC4 C3 
;/     DUP L@ FFFFFF AND C5448B = \ MOV  EAX , FC [EBP] [EAX*8]
	call	_DUP	; 80407DC5 E8 5E C7 FF FF 
	call	_Lload	; 80407DCA E8 F7 C3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407DCF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80407DD3 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80407DD8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407DDC E8 1 C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407DE1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC5448B,eax	; 80407DE5 
	DB 0xB8,0x8B,0x44,0xC5,0x0
;/*	lea	-0x08(rbp),rbp	; 80407DEA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407DEE E8 47 C5 FF FF 
;/              IF 2DROP BREAK
	test	rax,rax	; 80407DF3 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407DF6 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407DFA 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x2D0 	; 80407DFE 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407E04 E8 63 C7 FF FF 
	ret		; 80407E09 C3 
;/
;/     DUP L@  C5448B48 = \ MOV  EAX , FC [EBP] [EAX*8]
	call	_DUP	; 80407E0A E8 19 C7 FF FF 
	call	_Lload	; 80407E0F E8 B2 C3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407E14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC5448B48,eax	; 80407E18 
	DB 0xB8,0x48,0x8B,0x44,0xC5
;/*	lea	-0x08(rbp),rbp	; 80407E1D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407E21 E8 14 C5 FF FF 
;/              IF 2DROP BREAK
	test	rax,rax	; 80407E26 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407E29 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407E2D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x303 	; 80407E31 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407E37 E8 30 C7 FF FF 
	ret		; 80407E3C C3 
;/
;/     DUP C@ >PREF
	call	_DUP	; 80407E3D E8 E6 C6 FF FF 
	call	_Cload	; 80407E42 E8 86 C3 FF FF 
	call	_greatPREF	; 80407E47 E8 A6 E1 FF FF 
;/     DUP PREF+ C@ F = IF 1 PREF_S +! THEN
	call	_DUP	; 80407E4C E8 D7 C6 FF FF 
	call	_PREFadd	; 80407E51 E8 82 E1 FF FF 
	call	_Cload	; 80407E56 E8 72 C3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407E5B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF,eax	; 80407E5F 
	DB 0xB8,0xF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407E64 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407E68 E8 CD C4 FF FF 
	test	rax,rax	; 80407E6D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407E70 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407E74 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x361 	; 80407E78 
	DB 0xF,0x84,0x1D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407E7E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1,eax	; 80407E82 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80407E87 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_RIPADRque+0x2E8 (%rip),rax	; 80407E8B 
	DB 0x48,0x8D,0x5,0x3E,0xE1,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80407E92 
	DB 0x48,0x8D,0x6D,0xF0
	call	_addsave	; 80407E96 E8 75 C3 FF FF 
;/
;/     DUP PREF+ 2+ C@ C>S OFF-EBP =
	call	_DUP	; 80407E9B E8 88 C6 FF FF 
	call	_PREFadd	; 80407EA0 E8 33 E1 FF FF 
	call	_2add	; 80407EA5 E8 CE C5 FF FF 
	call	_Cload	; 80407EAA E8 1E C3 FF FF 
	call	_CgreatS	; 80407EAF E8 37 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407EB4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 80407EB8 
	DB 0x48,0x8D,0x5,0xEA,0xD9,0xFF,0xFF
;/*	mov	(rax),rax	; 80407EBF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80407EC2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407EC6 E8 6F C4 FF FF 
;/     IF   DUP	PREF+ W@  E7FF AND  4589 =    \ MOV X [EBP] , EAX|EDX|EBX|ECX
	test	rax,rax	; 80407ECB 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407ECE 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407ED2 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x495 	; 80407ED6 
	DB 0xF,0x84,0xF3,0x0,0x0,0x0
	call	_DUP	; 80407EDC E8 47 C6 FF FF 
	call	_PREFadd	; 80407EE1 E8 F2 E0 FF FF 
	call	_Wload	; 80407EE6 E8 E6 C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407EEB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE7FF,eax	; 80407EEF 
	DB 0xB8,0xFF,0xE7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407EF4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80407EF8 E8 E5 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407EFD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4589,eax	; 80407F01 
	DB 0xB8,0x89,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407F06 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407F0A E8 2B C4 FF FF 
;/          OVER	PREF+ W@            45C7 = OR \ MOV     F8 [EBP] , # 2710
	call	_OVER	; 80407F0F E8 85 C6 FF FF 
	call	_PREFadd	; 80407F14 E8 BF E0 FF FF 
	call	_Wload	; 80407F19 E8 B3 C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407F1E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C7,eax	; 80407F22 
	DB 0xB8,0xC7,0x45,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407F27 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80407F2B E8 A C4 FF FF 
	call	_OR	; 80407F30 E8 B6 C4 FF FF 
;/          IF M\ 200 DTST
	test	rax,rax	; 80407F35 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407F38 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407F3C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x45D 	; 80407F40 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407F46 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x200,eax	; 80407F4A 
	DB 0xB8,0x0,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407F4F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407F53 E8 4A DD FF FF 
;/               OVER  OPexcise >R NIP TRUE SWAP CELL- R>
	call	_OVER	; 80407F58 E8 3C C6 FF FF 
	call	_OPexcise	; 80407F5D E8 33 E3 FF FF 
	Push	rax	; 80407F62 50 
;/*	mov	0x00(rbp),rax	; 80407F63 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407F67 
	DB 0x48,0x8D,0x6D,0x8
	call	_NIP	; 80407F6B E8 9C C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407F70 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80407F74 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80407F7B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SWAP	; 80407F7F E8 BE C5 FF FF 
	call	_CELLsub	; 80407F84 E8 F6 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407F89 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80407F8D 58 
;/*	lea	-0x08(rbp),rbp	; 80407F8E 
	DB 0x48,0x8D,0x6D,0xF8
;/          ELSE  DUP	PREF+ W@ 408B XOR \ not (%rbp)
;/*	jmp	_subEBPCLR+0x495 	; 80407F92 
	DB 0xE9,0x38,0x0,0x0,0x0
	call	_DUP	; 80407F97 E8 8C C5 FF FF 
	call	_PREFadd	; 80407F9C E8 37 E0 FF FF 
	call	_Wload	; 80407FA1 E8 2B C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407FA6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408B,eax	; 80407FAA 
	DB 0xB8,0x8B,0x40,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407FAF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80407FB3 E8 3C C4 FF FF 
;/		IF  2DROP BREAK
	test	rax,rax	; 80407FB8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407FBB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407FBF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x495 	; 80407FC3 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80407FC9 E8 9E C5 FF FF 
	ret		; 80407FCE C3 
;/          THEN
;/     THEN
;/
;/   DROP  CELL+   DUP @  :-SET  U<
	call	_DgreatS	; 80407FCF E8 5F C1 FF FF 
	call	_CELLadd	; 80407FD4 E8 95 C4 FF FF 
	call	_DUP	; 80407FD9 E8 4A C5 FF FF 
	call	_load	; 80407FDE E8 E6 C1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80407FE3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 80407FE7 
	DB 0x48,0x8D,0x5,0xF,0xDA,0xFF,0xFF
;/*	mov	(rax),rax	; 80407FEE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80407FF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 80407FF5 E8 C2 C3 FF FF 
;/  UNTIL DROP ;
	test	rax,rax	; 80407FFA 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407FFD 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408001 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x63 	; 80408005 
	DB 0xF,0x84,0x92,0xFB,0xFF,0xFF
	call	_DgreatS	; 8040800B E8 23 C1 FF FF 
	ret		; 80408010 C3 
;/
;/: X?EBP
;/ DROP EXIT


_XqueEBP:
	call	_DgreatS	; 80408011 E8 1D C1 FF FF 
	ret		; 80408016 C3 
;/ C@ C>S OFF-EBP  +
	call	_Cload	; 80408017 E8 B1 C1 FF FF 
	call	_CgreatS	; 8040801C E8 CA C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408021 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 80408025 
	DB 0x48,0x8D,0x5,0x7D,0xD8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040802C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040802F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80408033 E8 E3 C3 FF FF 
;/  40 + -80 AND
;/*	mov	rax,-0x08(rbp)	; 80408038 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x40,eax	; 8040803C 
	DB 0xB8,0x40,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408041 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80408045 E8 D1 C3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040804A 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x80,rax	; 8040804E 
	DB 0x48,0xC7,0xC0,0x80,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408055 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408059 E8 84 C3 FF FF 
;/  IF EVEN-EBP THEN ;
	test	rax,rax	; 8040805E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408061 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408065 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_XqueEBP+0x63 	; 80408069 
	DB 0xF,0x84,0x5,0x0,0x0,0x0
	call	_EVENsubEBP	; 8040806F E8 FC E3 FF FF 
	ret		; 80408074 C3 
;/
;/: 2?EBP OVER 2+  X?EBP ;


_2queEBP:
	call	_OVER	; 80408075 E8 1F C5 FF FF 
	call	_2add	; 8040807A E8 F9 C3 FF FF 
	call	_XqueEBP	; 8040807F E8 8D FF FF FF 
	ret		; 80408084 C3 
;/: 3?EBP OVER 3 + X?EBP ;


_3queEBP:
	call	_OVER	; 80408085 E8 F C5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040808A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040808E 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408093 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80408097 E8 7F C3 FF FF 
	call	_XqueEBP	; 8040809C E8 70 FF FF FF 
	ret		; 804080A1 C3 
;/: 4?EBP OVER 4 + X?EBP ;


_4queEBP:
	call	_OVER	; 804080A2 E8 F2 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804080A7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 804080AB 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804080B0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804080B4 E8 62 C3 FF FF 
	call	_XqueEBP	; 804080B9 E8 53 FF FF FF 
	ret		; 804080BE C3 
;/
;/\- LOW_LIM 0 VALUE LOW_LIM
;/: -EVEN-EAX
;/   BEGIN
;/ OP0 @ DUP :-SET U< IF DROP BREAK TO OP0@


_subEVENsubEAX:
;/*	mov	rax,-0x08(rbp)	; 804080BF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804080C3 
	DB 0x48,0x8D,0x5,0xE,0xD8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804080CA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 804080CE E8 F6 C0 FF FF 
	call	_DUP	; 804080D3 E8 50 C4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804080D8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 804080DC 
	DB 0x48,0x8D,0x5,0x1A,0xD9,0xFF,0xFF
;/*	mov	(rax),rax	; 804080E3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804080E6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 804080EA E8 CD C2 FF FF 
	test	rax,rax	; 804080EF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804080F2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804080F6 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0x47 	; 804080FA 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 80408100 E8 2E C0 FF FF 
	ret		; 80408105 C3 
;/*	mov	rax,-0x08(rbp)	; 80408106 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040810A 
	DB 0x48,0x8D,0x5,0x37,0xD9,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408111 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80408115 E8 E6 C0 FF FF 
;/  OP0@ L@ FFFFFF AND 408D48 = \      lea     0x02(%rax),%rax # 41CE14 48 8D 40 2
;/*	mov	rax,-0x08(rbp)	; 8040811A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040811E 
	DB 0x48,0x8D,0x5,0x23,0xD9,0xFF,0xFF
;/*	mov	(rax),rax	; 80408125 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408128 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040812C E8 95 C0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408131 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408135 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040813A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040813E E8 9F C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408143 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D48,eax	; 80408147 
	DB 0xB8,0x48,0x8D,0x40,0x0
;/*	lea	-0x08(rbp),rbp	; 8040814C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80408150 E8 E5 C1 FF FF 
;/   M_WL  M\ 2 DTST
	test	rax,rax	; 80408155 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408158 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040815C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0x14D 	; 80408160 
	DB 0xF,0x84,0xA6,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408166 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040816A 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040816F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408173 E8 2A DB FF FF 
;/       OP0@ 3 + C@ C>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80408178 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040817C 
	DB 0x48,0x8D,0x5,0xC5,0xD8,0xFF,0xFF
;/*	mov	(rax),rax	; 80408183 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80408186 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040818A 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040818F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 80408193 E8 83 C2 FF FF 
	call	_Cload	; 80408198 E8 30 C0 FF FF 
	call	_CgreatS	; 8040819D E8 49 C1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804081A2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804081A6 
	DB 0x48,0x8D,0x5,0x9,0xD7,0xFF,0xFF
;/*	mov	(rax),rax	; 804081AD 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804081B0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804081B4 E8 62 C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804081B9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804081BD 
	DB 0x48,0x8D,0x5,0xF2,0xD6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804081C4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804081C8 E8 33 C0 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804081CD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804081D1 
	DB 0x48,0x8D,0x5,0x8,0xD7,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804081D8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804081DC E8 72 D9 FF FF 
;/       -4 ALLOT M\ 3 DTST
;/*	mov	rax,-0x08(rbp)	; 804081E1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 804081E5 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804081EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804081F0 E8 58 CA FF FF 
;/*	mov	rax,-0x08(rbp)	; 804081F5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 804081F9 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804081FE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408202 E8 9B DA FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 80408207 
	DB 0xE9,0xB3,0xFE,0xFF,0xFF
;/
;/  OP0@ L@ FFFFFF AND 808D48 = \      lea     0x02(%rax),%rax # 41CE14 48 8D 40 2
;/*	mov	rax,-0x08(rbp)	; 8040820C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408210 
	DB 0x48,0x8D,0x5,0x31,0xD8,0xFF,0xFF
;/*	mov	(rax),rax	; 80408217 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040821A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040821E E8 A3 BF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408223 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408227 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040822C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408230 E8 AD C1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408235 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x808D48,eax	; 80408239 
	DB 0xB8,0x48,0x8D,0x80,0x0
;/*	lea	-0x08(rbp),rbp	; 8040823E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80408242 E8 F3 C0 FF FF 
;/   M_WL  M\ 22 DTST
	test	rax,rax	; 80408247 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040824A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040824E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0x23F 	; 80408252 
	DB 0xF,0x84,0xA6,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408258 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x22,eax	; 8040825C 
	DB 0xB8,0x22,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408261 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408265 E8 38 DA FF FF 
;/       OP0@ 3 + L@ L>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 8040826A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040826E 
	DB 0x48,0x8D,0x5,0xD3,0xD7,0xFF,0xFF
;/*	mov	(rax),rax	; 80408275 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80408278 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040827C 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80408281 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 80408285 E8 91 C1 FF FF 
	call	_Lload	; 8040828A E8 37 BF FF FF 
	call	_LgreatS	; 8040828F E8 61 C0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408294 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 80408298 
	DB 0x48,0x8D,0x5,0x17,0xD6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040829F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804082A2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804082A6 E8 70 C1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804082AB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804082AF 
	DB 0x48,0x8D,0x5,0x0,0xD6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804082B6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804082BA E8 41 BF FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804082BF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804082C3 
	DB 0x48,0x8D,0x5,0x16,0xD6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804082CA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804082CE E8 80 D8 FF FF 
;/       -7 ALLOT M\ 23 DTST
;/*	mov	rax,-0x08(rbp)	; 804082D3 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x7,rax	; 804082D7 
	DB 0x48,0xC7,0xC0,0xF9,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804082DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804082E2 E8 66 C9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804082E7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x23,eax	; 804082EB 
	DB 0xB8,0x23,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804082F0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804082F4 E8 A9 D9 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804082F9 
	DB 0xE9,0xC1,0xFD,0xFF,0xFF
;/
;/  OP0@ L@ F7FFFF AND C0FF48 = \      incq|decq    %rax
;/*	mov	rax,-0x08(rbp)	; 804082FE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408302 
	DB 0x48,0x8D,0x5,0x3F,0xD7,0xFF,0xFF
;/*	mov	(rax),rax	; 80408309 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040830C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408310 E8 B1 BE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408315 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF7FFFF,eax	; 80408319 
	DB 0xB8,0xFF,0xFF,0xF7,0x0
;/*	lea	-0x08(rbp),rbp	; 8040831E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408322 E8 BB C0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408327 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0FF48,eax	; 8040832B 
	DB 0xB8,0x48,0xFF,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408330 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80408334 E8 1 C0 FF FF 
;/   M_WL  M\ 4 DTST
	test	rax,rax	; 80408339 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040833C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408340 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0x343 	; 80408344 
	DB 0xF,0x84,0xB8,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040834A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 8040834E 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408353 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408357 E8 46 D9 FF FF 
;/       OFF-EAX OP0@ L@ 80000 AND 0<> 1 OR + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 8040835C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 80408360 
	DB 0x48,0x8D,0x5,0x4F,0xD5,0xFF,0xFF
;/*	mov	(rax),rax	; 80408367 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040836A 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040836E 
	DB 0x48,0x8D,0x5,0xD3,0xD6,0xFF,0xFF
;/*	mov	(rax),rax	; 80408375 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80408378 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lload	; 8040837C E8 45 BE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408381 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80000,eax	; 80408385 
	DB 0xB8,0x0,0x0,0x8,0x0
;/*	lea	-0x08(rbp),rbp	; 8040838A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040838E E8 4F C0 FF FF 
	call	_0lessgreat	; 80408393 E8 9 C0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408398 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1,eax	; 8040839C 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804083A1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OR	; 804083A5 E8 41 C0 FF FF 
	call	_add	; 804083AA E8 6C C0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804083AF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804083B3 
	DB 0x48,0x8D,0x5,0xFC,0xD4,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804083BA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804083BE E8 3D BE FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804083C3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804083C7 
	DB 0x48,0x8D,0x5,0x12,0xD5,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804083CE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804083D2 E8 7C D7 FF FF 
;/       -3 ALLOT M\ 5 DTST
;/*	mov	rax,-0x08(rbp)	; 804083D7 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 804083DB 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804083E2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804083E6 E8 62 C8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804083EB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 804083EF 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804083F4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804083F8 E8 A5 D8 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804083FD 
	DB 0xE9,0xBD,0xFC,0xFF,0xFF
;/
;/  OP0@ L@ FFFFFF AND C08148 = \     add     $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 80408402 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408406 
	DB 0x48,0x8D,0x5,0x3B,0xD6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040840D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408410 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408414 E8 AD BD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408419 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040841D 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408422 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408426 E8 B7 BF FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040842B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC08148,eax	; 8040842F 
	DB 0xB8,0x48,0x81,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408434 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80408438 E8 FD BE FF FF 
;/   M_WL  M\ E DTST
	test	rax,rax	; 8040843D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408440 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408444 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0x435 	; 80408448 
	DB 0xF,0x84,0xA6,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040844E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE,eax	; 80408452 
	DB 0xB8,0xE,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408457 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040845B E8 42 D8 FF FF 
;/       OP0@ 3 + L@ L>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80408460 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408464 
	DB 0x48,0x8D,0x5,0xDD,0xD5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040846B 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040846E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 80408472 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80408477 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040847B E8 9B BF FF FF 
	call	_Lload	; 80408480 E8 41 BD FF FF 
	call	_LgreatS	; 80408485 E8 6B BE FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040848A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040848E 
	DB 0x48,0x8D,0x5,0x21,0xD4,0xFF,0xFF
;/*	mov	(rax),rax	; 80408495 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408498 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040849C E8 7A BF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804084A1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804084A5 
	DB 0x48,0x8D,0x5,0xA,0xD4,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804084AC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804084B0 E8 4B BD FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804084B5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804084B9 
	DB 0x48,0x8D,0x5,0x20,0xD4,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804084C0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804084C4 E8 8A D6 FF FF 
;/       -7 ALLOT M\ F DTST
;/*	mov	rax,-0x08(rbp)	; 804084C9 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x7,rax	; 804084CD 
	DB 0x48,0xC7,0xC0,0xF9,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804084D4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804084D8 E8 70 C7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804084DD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF,eax	; 804084E1 
	DB 0xB8,0xF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804084E6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804084EA E8 B3 D7 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804084EF 
	DB 0xE9,0xCB,0xFB,0xFF,0xFF
;/
;/  OP0@ W@ 0548 = \     add     $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 804084F4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804084F8 
	DB 0x48,0x8D,0x5,0x49,0xD5,0xFF,0xFF
;/*	mov	(rax),rax	; 804084FF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408502 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 80408506 E8 C6 BC FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040850B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x548,eax	; 8040850F 
	DB 0xB8,0x48,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408514 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80408518 E8 1D BE FF FF 
;/   WHILE  M\ E DTST
	test	rax,rax	; 8040851D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408520 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408524 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0x50C 	; 80408528 
	DB 0xF,0x84,0x9D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040852E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE,eax	; 80408532 
	DB 0xB8,0xE,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408537 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040853B E8 62 D7 FF FF 
;/       OP0@ 2+ L@ L>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80408540 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408544 
	DB 0x48,0x8D,0x5,0xFD,0xD4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040854B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040854E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 80408552 E8 21 BF FF FF 
	call	_Lload	; 80408557 E8 6A BC FF FF 
	call	_LgreatS	; 8040855C E8 94 BD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408561 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 80408565 
	DB 0x48,0x8D,0x5,0x4A,0xD3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040856C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040856F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80408573 E8 A3 BE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408578 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040857C 
	DB 0x48,0x8D,0x5,0x33,0xD3,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408583 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80408587 E8 74 BC FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040858C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80408590 
	DB 0x48,0x8D,0x5,0x49,0xD3,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408597 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040859B E8 B3 D5 FF FF 
;/       -6 ALLOT M\ F DTST
;/*	mov	rax,-0x08(rbp)	; 804085A0 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x6,rax	; 804085A4 
	DB 0x48,0xC7,0xC0,0xFA,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804085AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804085AF E8 99 C6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804085B4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF,eax	; 804085B8 
	DB 0xB8,0xF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804085BD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804085C1 E8 DC D6 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804085C6 
	DB 0xE9,0xF4,0xFA,0xFF,0xFF
;/;
	ret		; 804085CB C3 
;/
;/: OPT-RULES  ( ADDR  -- ADDR )
;/   M\ -1 DTST


_OPTsubRULES:
;/*	mov	rax,-0x08(rbp)	; 804085CC 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 804085D0 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804085D7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804085DB E8 C2 D6 FF FF 
;/   BEGIN
;/   OP0 @ DUP :-SET U< IF DROP BREAK TO OP0@
;/*	mov	rax,-0x08(rbp)	; 804085E0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804085E4 
	DB 0x48,0x8D,0x5,0xED,0xD2,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804085EB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 804085EF E8 D5 BB FF FF 
	call	_DUP	; 804085F4 E8 2F BF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804085F9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 804085FD 
	DB 0x48,0x8D,0x5,0xF9,0xD3,0xFF,0xFF
;/*	mov	(rax),rax	; 80408604 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408607 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8040860B E8 AC BD FF FF 
	test	rax,rax	; 80408610 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408613 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408617 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5B 	; 8040861B 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 80408621 E8 D BB FF FF 
	ret		; 80408626 C3 
;/*	mov	rax,-0x08(rbp)	; 80408627 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040862B 
	DB 0x48,0x8D,0x5,0x16,0xD4,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408632 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80408636 E8 C5 BB FF FF 
;/  OP0@ L@ FFFFFF AND D08948 XOR		\ mov	%rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040863B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040863F 
	DB 0x48,0x8D,0x5,0x2,0xD4,0xFF,0xFF
;/*	mov	(rax),rax	; 80408646 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408649 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040864D E8 74 BB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408652 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408656 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040865B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040865F E8 7E BD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408664 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 80408668 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040866D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408671 E8 7E BD FF FF 
;/  OFF-EAX 0=
;/*	mov	rax,-0x08(rbp)	; 80408676 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040867A 
	DB 0x48,0x8D,0x5,0x35,0xD2,0xFF,0xFF
;/*	mov	(rax),rax	; 80408681 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408684 
	DB 0x48,0x8D,0x6D,0xF8
	call	_0equ	; 80408688 E8 B5 BC FF FF 
;/  OR 0=
	call	_OR	; 8040868D E8 59 BD FF FF 
	call	_0equ	; 80408692 E8 AB BC FF FF 
;/  M_WL
	test	rax,rax	; 80408697 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040869A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040869E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1A8 	; 804086A2 
	DB 0xF,0x84,0xCC,0x0,0x0,0x0
;/    M\ A DTST
;/*	mov	rax,-0x08(rbp)	; 804086A8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xA,eax	; 804086AC 
	DB 0xB8,0xA,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804086B1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804086B5 E8 E8 D5 FF FF 
;/	OFF-EAX DUP SHORT?
;/*	mov	rax,-0x08(rbp)	; 804086BA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804086BE 
	DB 0x48,0x8D,0x5,0xF1,0xD1,0xFF,0xFF
;/*	mov	(rax),rax	; 804086C5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804086C8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP	; 804086CC E8 57 BE FF FF 
	call	_SHORTque	; 804086D1 E8 F2 CE FF FF 
;/     IF    428D OP0@ 1+ W! C,
	test	rax,rax	; 804086D6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804086D9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804086DD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x14A 	; 804086E1 
	DB 0xF,0x84,0x2F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804086E7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x428D,eax	; 804086EB 
	DB 0xB8,0x8D,0x42,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 804086F0 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 804086F4 
	DB 0x48,0x8D,0x5,0x4D,0xD3,0xFF,0xFF
;/*	mov	(rax),rax	; 804086FB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 804086FE 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 80408702 E8 74 BD FF FF 
	call	_Wsave	; 80408707 E8 D7 BA FF FF 
	call	_Ccom	; 8040870C E8 BD C5 FF FF 
;/     ELSE  828D OP0@ 1+ W! L,
;/*	jmp	_OPTsubRULES+0x174 	; 80408711 
	DB 0xE9,0x2A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408716 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x828D,eax	; 8040871A 
	DB 0xB8,0x8D,0x82,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040871F 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408723 
	DB 0x48,0x8D,0x5,0x1E,0xD3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040872A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040872D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 80408731 E8 45 BD FF FF 
	call	_Wsave	; 80408736 E8 A8 BA FF FF 
	call	_Lcom	; 8040873B E8 54 C5 FF FF 
;/     THEN   \  lea    0x1(%rdx),%rax
;/	0 TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80408740 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80408744 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408749 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040874D 
	DB 0x48,0x8D,0x5,0x62,0xD1,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80408754 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80408758 E8 A3 BA FF FF 
;/       M\ B DTST
;/*	mov	rax,-0x08(rbp)	; 8040875D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB,eax	; 80408761 
	DB 0xB8,0xB,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408766 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040876A E8 33 D5 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040876F 
	DB 0xE9,0x6C,0xFE,0xFF,0xFF
;/
;/  OP0@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80408774 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408778 
	DB 0x48,0x8D,0x5,0xC9,0xD2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040877F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408782 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408786 E8 3B BA FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040878B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040878F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408794 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408798 E8 45 BC FF FF 
;/ DUP 058d48 XOR	\ lea	X(%rip),%rax
	call	_DUP	; 8040879D E8 86 BD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804087A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D48,eax	; 804087A6 
	DB 0xB8,0x48,0x8D,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 804087AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804087AF E8 40 BC FF FF 
;/ SWAP C0C748 <> AND	\ movq	$X,%rax
	call	_SWAP	; 804087B4 E8 89 BD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804087B9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C748,eax	; 804087BD 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 804087C2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 804087C6 E8 CE BB FF FF 
	call	_AND	; 804087CB E8 12 BC FF FF 
;/  OFF-EAX 0=
;/*	mov	rax,-0x08(rbp)	; 804087D0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804087D4 
	DB 0x48,0x8D,0x5,0xDB,0xD0,0xFF,0xFF
;/*	mov	(rax),rax	; 804087DB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804087DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_0equ	; 804087E2 E8 5B BB FF FF 
;/  OR 0=
	call	_OR	; 804087E7 E8 FF BB FF FF 
	call	_0equ	; 804087EC E8 51 BB FF FF 
;/  M_WL
	test	rax,rax	; 804087F1 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804087F4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804087F8 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x375 	; 804087FC 
	DB 0xF,0x84,0x3F,0x1,0x0,0x0
;/    M\ 24 DTST
;/*	mov	rax,-0x08(rbp)	; 80408802 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x24,eax	; 80408806 
	DB 0xB8,0x24,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040880B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040880F E8 8E D4 FF FF 
;/      OP0@ 3 + SL@  OFF-EAX + 
;/*	mov	rax,-0x08(rbp)	; 80408814 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408818 
	DB 0x48,0x8D,0x5,0x29,0xD2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040881F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80408822 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 80408826 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040882B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040882F E8 E7 BB FF FF 
	call	_SLload	; 80408834 E8 88 B9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408839 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040883D 
	DB 0x48,0x8D,0x5,0x72,0xD0,0xFF,0xFF
;/*	mov	(rax),rax	; 80408844 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408847 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040884B E8 CB BB FF FF 
;/	DUP LONG?
	call	_DUP	; 80408850 E8 D3 BC FF FF 
	call	_LONGque	; 80408855 E8 93 CD FF FF 
;/	IF      OP0@ 3 + L!
	test	rax,rax	; 8040885A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040885D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408861 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2C9 	; 80408865 
	DB 0xF,0x84,0x2A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040886B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040886F 
	DB 0x48,0x8D,0x5,0xD2,0xD1,0xFF,0xFF
;/*	mov	(rax),rax	; 80408876 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80408879 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040887D 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80408882 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 80408886 E8 90 BB FF FF 
	call	_Lsave	; 8040888B E8 62 B9 FF FF 
;/	ELSE  OP0@ L@ FFFFFF AND C0C748 XOR IF BREAK \ $X,%rax omly
;/*	jmp	_OPTsubRULES+0x341 	; 80408890 
	DB 0xE9,0x78,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408895 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408899 
	DB 0x48,0x8D,0x5,0xA8,0xD1,0xFF,0xFF
;/*	mov	(rax),rax	; 804088A0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804088A3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804088A7 E8 1A B9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804088AC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804088B0 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804088B5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804088B9 E8 24 BB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804088BE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C748,eax	; 804088C2 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 804088C7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804088CB E8 24 BB FF FF 
	test	rax,rax	; 804088D0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804088D3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804088D7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x316 	; 804088DB 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 804088E1 C3 
;/	   -6 ALLOT   $B8 C,  ,	\  movabs $X,%rax
;/*	mov	rax,-0x08(rbp)	; 804088E2 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x6,rax	; 804088E6 
	DB 0x48,0xC7,0xC0,0xFA,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804088ED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804088F1 E8 57 C3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804088F6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 804088FA 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804088FF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80408903 E8 C6 C3 FF FF 
	call	_com	; 80408908 E8 6A C3 FF FF 
;/	THEN
;/	 0 TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 8040890D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80408911 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408916 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040891A 
	DB 0x48,0x8D,0x5,0x95,0xCF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80408921 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80408925 E8 D6 B8 FF FF 
;/
;/    M\ 25 DTST
;/*	mov	rax,-0x08(rbp)	; 8040892A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x25,eax	; 8040892E 
	DB 0xB8,0x25,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408933 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408937 E8 66 D3 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040893C 
	DB 0xE9,0x9F,0xFC,0xFF,0xFF
;/
;/  OP0@ C@ B8 XOR
;/*	mov	rax,-0x08(rbp)	; 80408941 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408945 
	DB 0x48,0x8D,0x5,0xFC,0xD0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040894C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040894F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 80408953 E8 75 B8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408958 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040895C 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408961 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408965 E8 8A BA FF FF 
;/  OFF-EAX 0=
;/*	mov	rax,-0x08(rbp)	; 8040896A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040896E 
	DB 0x48,0x8D,0x5,0x41,0xCF,0xFF,0xFF
;/*	mov	(rax),rax	; 80408975 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408978 
	DB 0x48,0x8D,0x6D,0xF8
	call	_0equ	; 8040897C E8 C1 B9 FF FF 
;/  OR 0=
	call	_OR	; 80408981 E8 65 BA FF FF 
	call	_0equ	; 80408986 E8 B7 B9 FF FF 
;/  M_WL
	test	rax,rax	; 8040898B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040898E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408992 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4C2 	; 80408996 
	DB 0xF,0x84,0xF2,0x0,0x0,0x0
;/    M\ 46 DTST
;/*	mov	rax,-0x08(rbp)	; 8040899C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x46,eax	; 804089A0 
	DB 0xB8,0x46,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804089A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804089A9 E8 F4 D2 FF FF 
;/      OP0@ 1+ L@  OFF-EAX +
;/*	mov	rax,-0x08(rbp)	; 804089AE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804089B2 
	DB 0x48,0x8D,0x5,0x8F,0xD0,0xFF,0xFF
;/*	mov	(rax),rax	; 804089B9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804089BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 804089C0 E8 B6 BA FF FF 
	call	_Lload	; 804089C5 E8 FC B7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804089CA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 804089CE 
	DB 0x48,0x8D,0x5,0xE1,0xCE,0xFF,0xFF
;/*	mov	(rax),rax	; 804089D5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804089D8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804089DC E8 3A BA FF FF 
;/	DUP 0x100000000 U< 
	call	_DUP	; 804089E1 E8 42 BB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804089E6 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x100000000,%rax	; 804089EA 
	DB 0x48,0xB8,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804089F4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 804089F8 E8 BF B9 FF FF 
;/	IF      OP0@ 1+ L!
	test	rax,rax	; 804089FD 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408A00 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408A04 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x463 	; 80408A08 
	DB 0xF,0x84,0x21,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408A0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408A12 
	DB 0x48,0x8D,0x5,0x2F,0xD0,0xFF,0xFF
;/*	mov	(rax),rax	; 80408A19 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408A1C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 80408A20 E8 56 BA FF FF 
	call	_Lsave	; 80408A25 E8 C8 B7 FF FF 
;/	ELSE   -5 ALLOT   $B848 W,  ,	\  movabs $X,%rax
;/*	jmp	_OPTsubRULES+0x48E 	; 80408A2A 
	DB 0xE9,0x2B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408A2F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x5,rax	; 80408A33 
	DB 0x48,0xC7,0xC0,0xFB,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408A3A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80408A3E E8 A C2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408A43 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB848,eax	; 80408A47 
	DB 0xB8,0x48,0xB8,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408A4C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 80408A50 E8 5C C2 FF FF 
	call	_com	; 80408A55 E8 1D C2 FF FF 
;/	THEN
;/	 0 TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80408A5A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80408A5E 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408A63 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 80408A67 
	DB 0x48,0x8D,0x5,0x48,0xCE,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80408A6E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80408A72 E8 89 B7 FF FF 
;/
;/    M\ 47 DTST
;/*	mov	rax,-0x08(rbp)	; 80408A77 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x47,eax	; 80408A7B 
	DB 0xB8,0x47,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408A80 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408A84 E8 19 D2 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408A89 
	DB 0xE9,0x52,0xFB,0xFF,0xFF
;/
;/  OP0@ @ 80000000FFFF AND 2548 = \ MO_TST_VAL AND  \ and $_,%rax
;/*	mov	rax,-0x08(rbp)	; 80408A8E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408A92 
	DB 0x48,0x8D,0x5,0xAF,0xCF,0xFF,0xFF
;/*	mov	(rax),rax	; 80408A99 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408A9C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80408AA0 E8 24 B7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408AA5 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FFFF,%rax	; 80408AA9 
	DB 0x48,0xB8,0xFF,0xFF,0x0,0x0,0x0,0x80,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408AB3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408AB7 E8 26 B9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408ABC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2548,eax	; 80408AC0 
	DB 0xB8,0x48,0x25,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408AC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80408AC9 E8 6C B8 FF FF 
;/  M_WL
	test	rax,rax	; 80408ACE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408AD1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408AD5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x55B 	; 80408AD9 
	DB 0xF,0x84,0x48,0x0,0x0,0x0
;/    M\ 54 DTST
;/*	mov	rax,-0x08(rbp)	; 80408ADF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x54,eax	; 80408AE3 
	DB 0xB8,0x54,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408AE8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408AEC E8 B1 D1 FF FF 
;/	OP0 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 80408AF1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80408AF5 
	DB 0x48,0x8D,0x5,0xDC,0xCD,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80408AFC 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 80408B00 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80408B07 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 80408B0B E8 E3 D5 FF FF 
;/    M\ 53 DTST
;/*	mov	rax,-0x08(rbp)	; 80408B10 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x53,eax	; 80408B14 
	DB 0xB8,0x53,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408B19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408B1D E8 80 D1 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408B22 
	DB 0xE9,0xB9,0xFA,0xFF,0xFF
;/
;/  OP1 @ DUP :-SET U< IF DROP BREAK TO OP1@
;/*	mov	rax,-0x08(rbp)	; 80408B27 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80408B2B 
	DB 0x48,0x8D,0x5,0xAE,0xCD,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408B32 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80408B36 E8 8E B6 FF FF 
	call	_DUP	; 80408B3B E8 E8 B9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408B40 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 80408B44 
	DB 0x48,0x8D,0x5,0xB2,0xCE,0xFF,0xFF
;/*	mov	(rax),rax	; 80408B4B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408B4E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 80408B52 E8 65 B8 FF FF 
	test	rax,rax	; 80408B57 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408B5A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408B5E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5A2 	; 80408B62 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 80408B68 E8 C6 B5 FF FF 
	ret		; 80408B6D C3 
;/*	mov	rax,-0x08(rbp)	; 80408B6E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408B72 
	DB 0x48,0x8D,0x5,0xDC,0xCE,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408B79 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80408B7D E8 7E B6 FF FF 
;/
;/  OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80408B82 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408B86 
	DB 0x48,0x8D,0x5,0xC8,0xCE,0xFF,0xFF
;/*	mov	(rax),rax	; 80408B8D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408B90 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408B94 E8 2D B6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408B99 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408B9D 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408BA2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408BA6 E8 37 B8 FF FF 
;/  DUP 058d48 XOR	\ lea	X (%rip),%rax
	call	_DUP	; 80408BAB E8 78 B9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408BB0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D48,eax	; 80408BB4 
	DB 0xB8,0x48,0x8D,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 80408BB9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408BBD E8 32 B8 FF FF 
;/ SWAP 408d48 <> AND	\ lea     -0x08(%rax),%rax 
	call	_SWAP	; 80408BC2 E8 7B B9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408BC7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D48,eax	; 80408BCB 
	DB 0xB8,0x48,0x8D,0x40,0x0
;/*	lea	-0x08(rbp),rbp	; 80408BD0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 80408BD4 E8 C0 B7 FF FF 
	call	_AND	; 80408BD9 E8 4 B8 FF FF 
;/  OP0@ L@ FFFFFF AND 008b48 XOR	\ mov	(%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80408BDE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408BE2 
	DB 0x48,0x8D,0x5,0x5F,0xCE,0xFF,0xFF
;/*	mov	(rax),rax	; 80408BE9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408BEC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408BF0 E8 D1 B5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408BF5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408BF9 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408BFE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408C02 E8 DB B7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408C07 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B48,eax	; 80408C0B 
	DB 0xB8,0x48,0x8B,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408C10 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408C14 E8 DB B7 FF FF 
;/   OR  0=
	call	_OR	; 80408C19 E8 CD B7 FF FF 
	call	_0equ	; 80408C1E E8 1F B7 FF FF 
;/  M_WL  M\ 6 DTST
	test	rax,rax	; 80408C23 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408C26 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408C2A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x6D9 	; 80408C2E 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408C34 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6,eax	; 80408C38 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408C3D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408C41 E8 5C D0 FF FF 
;/       600  OP1@ XOR! \  mov	X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 80408C46 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x600,eax	; 80408C4A 
	DB 0xB8,0x0,0x6,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408C4F 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408C53 
	DB 0x48,0x8D,0x5,0xFB,0xCD,0xFF,0xFF
;/*	mov	(rax),rax	; 80408C5A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80408C5D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 80408C61 E8 F7 B5 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80408C66 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80408C6A 
	DB 0x48,0x8D,0x5,0x6F,0xCC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408C71 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408C75 E8 D9 CE FF FF 
;/       -3 ALLOT M\ 7 DTST
;/*	mov	rax,-0x08(rbp)	; 80408C7A 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80408C7E 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408C85 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80408C89 E8 BF BF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408C8E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7,eax	; 80408C92 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408C97 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408C9B E8 2 D0 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408CA0 
	DB 0xE9,0x3B,0xF9,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 408D48 XOR \       lea     X(%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80408CA5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408CA9 
	DB 0x48,0x8D,0x5,0xA5,0xCD,0xFF,0xFF
;/*	mov	(rax),rax	; 80408CB0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408CB3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408CB7 E8 A B5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408CBC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408CC0 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408CC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408CC9 E8 14 B7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408CCE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D48,eax	; 80408CD2 
	DB 0xB8,0x48,0x8D,0x40,0x0
;/*	lea	-0x08(rbp),rbp	; 80408CD7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408CDB E8 14 B7 FF FF 
;/OP0@ L@ FFFEFF AND 00B60F XOR \         movz<bw>l  (%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80408CE0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408CE4 
	DB 0x48,0x8D,0x5,0x5D,0xCD,0xFF,0xFF
;/*	mov	(rax),rax	; 80408CEB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408CEE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408CF2 E8 CF B4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408CF7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFEFF,eax	; 80408CFB 
	DB 0xB8,0xFF,0xFE,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408D00 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408D04 E8 D9 B6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408D09 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB60F,eax	; 80408D0D 
	DB 0xB8,0xF,0xB6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408D12 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408D16 E8 D9 B6 FF FF 
;/   OR  0=
	call	_OR	; 80408D1B E8 CB B6 FF FF 
	call	_0equ	; 80408D20 E8 1D B6 FF FF 
;/  M_WL  M\ 26 DTST
	test	rax,rax	; 80408D25 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408D28 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408D2C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x7E9 	; 80408D30 
	DB 0xF,0x84,0x7F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408D36 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x26,eax	; 80408D3A 
	DB 0xB8,0x26,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408D3F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408D43 E8 5A CF FF FF 
;/       OP0@ W@  OP1@ W! \  movz<bw>l X(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80408D48 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408D4C 
	DB 0x48,0x8D,0x5,0xF5,0xCC,0xFF,0xFF
;/*	mov	(rax),rax	; 80408D53 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408D56 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 80408D5A E8 72 B4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408D5F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408D63 
	DB 0x48,0x8D,0x5,0xEB,0xCC,0xFF,0xFF
;/*	mov	(rax),rax	; 80408D6A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408D6D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wsave	; 80408D71 E8 6D B4 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80408D76 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80408D7A 
	DB 0x48,0x8D,0x5,0x5F,0xCB,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408D81 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408D85 E8 C9 CD FF FF 
;/       -3 ALLOT M\ 27 DTST
;/*	mov	rax,-0x08(rbp)	; 80408D8A 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80408D8E 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408D95 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80408D99 E8 AF BE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408D9E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x27,eax	; 80408DA2 
	DB 0xB8,0x27,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DA7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408DAB E8 F2 CE FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408DB0 
	DB 0xE9,0x2B,0xF8,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 408D48 XOR \       lea     X(%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80408DB5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408DB9 
	DB 0x48,0x8D,0x5,0x95,0xCC,0xFF,0xFF
;/*	mov	(rax),rax	; 80408DC0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DC3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408DC7 E8 FA B3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408DCC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408DD0 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DD5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408DD9 E8 4 B6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408DDE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D48,eax	; 80408DE2 
	DB 0xB8,0x48,0x8D,0x40,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DE7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408DEB E8 4 B6 FF FF 
;/OP0@ W@ 008B XOR \         movz<bw>l  (%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80408DF0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408DF4 
	DB 0x48,0x8D,0x5,0x4D,0xCC,0xFF,0xFF
;/*	mov	(rax),rax	; 80408DFB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DFE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 80408E02 E8 CA B3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408E07 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B,eax	; 80408E0B 
	DB 0xB8,0x8B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408E10 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408E14 E8 DB B5 FF FF 
;/   OR  0=
	call	_OR	; 80408E19 E8 CD B5 FF FF 
	call	_0equ	; 80408E1E E8 1F B5 FF FF 
;/  M_WL  M\ 96 DTST
	test	rax,rax	; 80408E23 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408E26 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408E2A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x8FE 	; 80408E2E 
	DB 0xF,0x84,0x96,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408E34 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x96,eax	; 80408E38 
	DB 0xB8,0x96,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408E3D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408E41 E8 5C CE FF FF 
;/	OP1@ 1+ L@ 6 XOR  OP1@ L! \  movq	X (%rip),%eax
;/*	mov	rax,-0x08(rbp)	; 80408E46 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408E4A 
	DB 0x48,0x8D,0x5,0x4,0xCC,0xFF,0xFF
;/*	mov	(rax),rax	; 80408E51 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408E54 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 80408E58 E8 1E B6 FF FF 
	call	_Lload	; 80408E5D E8 64 B3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408E62 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6,eax	; 80408E66 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408E6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408E6F E8 80 B5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408E74 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408E78 
	DB 0x48,0x8D,0x5,0xD6,0xCB,0xFF,0xFF
;/*	mov	(rax),rax	; 80408E7F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408E82 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lsave	; 80408E86 E8 67 B3 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80408E8B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80408E8F 
	DB 0x48,0x8D,0x5,0x4A,0xCA,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408E96 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408E9A E8 B4 CC FF FF 
;/       -3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 80408E9F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80408EA3 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408EAA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80408EAE E8 9A BD FF FF 
;/ M\ 97 DTST
;/*	mov	rax,-0x08(rbp)	; 80408EB3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x97,eax	; 80408EB7 
	DB 0xB8,0x97,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408EBC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408EC0 E8 DD CD FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408EC5 
	DB 0xE9,0x16,0xF7,0xFF,0xFF
;/
;/  OP1@ L@ FFFFFF AND D08948 XOR	\ mov	%rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80408ECA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408ECE 
	DB 0x48,0x8D,0x5,0x80,0xCB,0xFF,0xFF
;/*	mov	(rax),rax	; 80408ED5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408ED8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408EDC E8 E5 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408EE1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408EE5 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408EEA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408EEE E8 EF B4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408EF3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 80408EF7 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408EFC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408F00 E8 EF B4 FF FF 
;/  OP0@ L@ FFFFFF AND 00B60F XOR	\ movzbl	(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80408F05 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408F09 
	DB 0x48,0x8D,0x5,0x38,0xCB,0xFF,0xFF
;/*	mov	(rax),rax	; 80408F10 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408F13 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80408F17 E8 AA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408F1C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80408F20 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80408F25 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80408F29 E8 B4 B4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408F2E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB60F,eax	; 80408F32 
	DB 0xB8,0xF,0xB6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408F37 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408F3B E8 B4 B4 FF FF 
;/  OR  0=
	call	_OR	; 80408F40 E8 A6 B4 FF FF 
	call	_0equ	; 80408F45 E8 F8 B3 FF FF 
;/  M_WL  M\ 8 DTST
	test	rax,rax	; 80408F4A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80408F4D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408F51 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xA00 	; 80408F55 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408F5B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80408F5F 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408F64 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408F68 E8 35 CD FF FF 
;/	02b60f  OP1@ L! \           	movzbl (%rdx),%eax
;/*	mov	rax,-0x08(rbp)	; 80408F6D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2B60F,eax	; 80408F71 
	DB 0xB8,0xF,0xB6,0x2,0x0
;/*	mov	rax,-0x10(rbp)	; 80408F76 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408F7A 
	DB 0x48,0x8D,0x5,0xD4,0xCA,0xFF,0xFF
;/*	mov	(rax),rax	; 80408F81 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80408F84 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 80408F88 E8 65 B2 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80408F8D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80408F91 
	DB 0x48,0x8D,0x5,0x48,0xC9,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408F98 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408F9C E8 B2 CB FF FF 
;/       -3 ALLOT M\ 9 DTST
;/*	mov	rax,-0x08(rbp)	; 80408FA1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80408FA5 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80408FAC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80408FB0 E8 98 BC FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408FB5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9,eax	; 80408FB9 
	DB 0xB8,0x9,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408FBE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408FC2 E8 DB CC FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408FC7 
	DB 0xE9,0x14,0xF6,0xFF,0xFF
;/
;/OP1@ W@ 8B XOR		 \	mov     (%rax),%eax     # 42D551 8B 0
;/*	mov	rax,-0x08(rbp)	; 80408FCC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80408FD0 
	DB 0x48,0x8D,0x5,0x7E,0xCA,0xFF,0xFF
;/*	mov	(rax),rax	; 80408FD7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80408FDA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 80408FDE E8 EE B1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80408FE3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B,eax	; 80408FE7 
	DB 0xB8,0x8B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408FEC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80408FF0 E8 FF B3 FF FF 
;/OP0@ L@ FFFFFF AND C06348 XOR \ movslq  %eax,%rax       # 42D553 48 63 C0
;/*	mov	rax,-0x08(rbp)	; 80408FF5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80408FF9 
	DB 0x48,0x8D,0x5,0x48,0xCA,0xFF,0xFF
;/*	mov	(rax),rax	; 80409000 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409003 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409007 E8 BA B1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040900C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80409010 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409015 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409019 E8 C4 B3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040901E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC06348,eax	; 80409022 
	DB 0xB8,0x48,0x63,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409027 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040902B E8 C4 B3 FF FF 
;/  OR  0=
	call	_OR	; 80409030 E8 B6 B3 FF FF 
	call	_0equ	; 80409035 E8 8 B3 FF FF 
;/  M_WL  M\ 12 DTST
	test	rax,rax	; 8040903A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040903D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409041 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xB02 	; 80409045 
	DB 0xF,0x84,0x83,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040904B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x12,eax	; 8040904F 
	DB 0xB8,0x12,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409054 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409058 E8 45 CC FF FF 
;/	OP0 @ W@ OP1 @ L! \ movslq (%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 8040905D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409061 
	DB 0x48,0x8D,0x5,0x70,0xC8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409068 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040906C E8 58 B1 FF FF 
	call	_Wload	; 80409071 E8 5B B1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409076 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040907A 
	DB 0x48,0x8D,0x5,0x5F,0xC8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409081 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80409085 E8 3F B1 FF FF 
	call	_Lsave	; 8040908A E8 63 B1 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040908F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80409093 
	DB 0x48,0x8D,0x5,0x46,0xC8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040909A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040909E E8 B0 CA FF FF 
;/	-2 ALLOT
;/*	mov	rax,-0x08(rbp)	; 804090A3 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x2,rax	; 804090A7 
	DB 0x48,0xC7,0xC0,0xFE,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804090AE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804090B2 E8 96 BB FF FF 
;/	M\ 13 DTST
;/*	mov	rax,-0x08(rbp)	; 804090B7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x13,eax	; 804090BB 
	DB 0xB8,0x13,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804090C0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804090C4 E8 D9 CB FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 804090C9 
	DB 0xE9,0x12,0xF5,0xFF,0xFF
;/
;/ J_COD FE AND 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 804090CE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 804090D2 
	DB 0x48,0x8D,0x5,0x9C,0xC7,0xFF,0xFF
;/*	mov	(rax),rax	; 804090D9 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 804090DC 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xFE,eax	; 804090E0 
	DB 0xB8,0xFE,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 804090E5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_AND	; 804090E9 E8 F4 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804090EE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x84,eax	; 804090F2 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804090F7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804090FB E8 F4 B2 FF FF 
;/  OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80409100 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409104 
	DB 0x48,0x8D,0x5,0x4A,0xC9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040910B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040910E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409112 E8 AF B0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409117 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040911B 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409120 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409124 E8 B9 B2 FF FF 
;/   DUP  F08148  XOR     \  xor	$_,%rax
	call	_DUP	; 80409129 E8 FA B3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040912E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF08148,eax	; 80409132 
	DB 0xB8,0x48,0x81,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409137 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040913B E8 B4 B2 FF FF 
;/  OVER  F08348  <> AND     \  xor	$_,%rax
	call	_OVER	; 80409140 E8 54 B4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409145 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF08348,eax	; 80409149 
	DB 0xB8,0x48,0x83,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040914E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 80409152 E8 42 B2 FF FF 
	call	_AND	; 80409157 E8 86 B2 FF FF 
;/  OVER  E08348  <> AND     \  and	$_,%rax
	call	_OVER	; 8040915C E8 38 B4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409161 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE08348,eax	; 80409165 
	DB 0xB8,0x48,0x83,0xE0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040916A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040916E E8 26 B2 FF FF 
	call	_AND	; 80409173 E8 6A B2 FF FF 
;/  SWAP  F8C148  <> AND     \  and	$_,%rax
	call	_SWAP	; 80409178 E8 C5 B3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040917D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF8C148,eax	; 80409181 
	DB 0xB8,0x48,0xC1,0xF8,0x0
;/*	lea	-0x08(rbp),rbp	; 80409186 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040918A E8 A B2 FF FF 
	call	_AND	; 8040918F E8 4E B2 FF FF 
;/  OR
	call	_OR	; 80409194 E8 52 B2 FF FF 
;/ OP0@ L@ FFFFFF AND c08548 XOR \      test    %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 80409199 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040919D 
	DB 0x48,0x8D,0x5,0xA4,0xC8,0xFF,0xFF
;/*	mov	(rax),rax	; 804091A4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804091A7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804091AB E8 16 B0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804091B0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804091B4 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804091B9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804091BD E8 20 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804091C2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC08548,eax	; 804091C6 
	DB 0xB8,0x48,0x85,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 804091CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804091CF E8 20 B2 FF FF 
;/ OR  0=
	call	_OR	; 804091D4 E8 12 B2 FF FF 
	call	_0equ	; 804091D9 E8 64 B1 FF FF 
;/ M_WL  M\ 14 DTST
	test	rax,rax	; 804091DE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804091E1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804091E5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xC74 	; 804091E9 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804091EF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x14,eax	; 804091F3 
	DB 0xB8,0x14,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804091F8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804091FC E8 A1 CA FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409201 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80409205 
	DB 0x48,0x8D,0x5,0xD4,0xC6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040920C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409210 E8 3E C9 FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 80409215 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80409219 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409220 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80409224 E8 24 BA FF FF 
;/	M\ 15 DTST
;/*	mov	rax,-0x08(rbp)	; 80409229 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x15,eax	; 8040922D 
	DB 0xB8,0x15,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409232 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409236 E8 67 CA FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040923B 
	DB 0xE9,0xA0,0xF3,0xFF,0xFF
;/
;/OP1@ 2+ W@ OP0@ 2+ W@ XOR	\	regs & indexes
;/*	mov	rax,-0x08(rbp)	; 80409240 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409244 
	DB 0x48,0x8D,0x5,0xA,0xC8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040924B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040924E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 80409252 E8 21 B2 FF FF 
	call	_Wload	; 80409257 E8 75 AF FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040925C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409260 
	DB 0x48,0x8D,0x5,0xE1,0xC7,0xFF,0xFF
;/*	mov	(rax),rax	; 80409267 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040926A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040926E E8 5 B2 FF FF 
	call	_Wload	; 80409273 E8 59 AF FF FF 
	call	_XOR	; 80409278 E8 77 B1 FF FF 
;/OP1@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040927D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409281 
	DB 0x48,0x8D,0x5,0xCD,0xC7,0xFF,0xFF
;/*	mov	(rax),rax	; 80409288 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040928B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040928F E8 32 AF FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409294 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xEFFDFF,eax	; 80409298 
	DB 0xB8,0xFF,0xFD,0xEF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040929D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804092A1 E8 3C B1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804092A6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 804092AA 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 804092AF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804092B3 E8 3C B1 FF FF 
	call	_OR	; 804092B8 E8 2E B1 FF FF 
;/OP0@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	rax,-0x08(rbp)	; 804092BD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804092C1 
	DB 0x48,0x8D,0x5,0x80,0xC7,0xFF,0xFF
;/*	mov	(rax),rax	; 804092C8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804092CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804092CF E8 F2 AE FF FF 
;/*	mov	rax,-0x08(rbp)	; 804092D4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xEFFDFF,eax	; 804092D8 
	DB 0xB8,0xFF,0xFD,0xEF,0x0
;/*	lea	-0x08(rbp),rbp	; 804092DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804092E1 E8 FC B0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804092E6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 804092EA 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 804092EF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804092F3 E8 FC B0 FF FF 
	call	_OR	; 804092F8 E8 EE B0 FF FF 
;/  0=
	call	_0equ	; 804092FD E8 40 B0 FF FF 
;/ M_WL  M\ 18 DTST
	test	rax,rax	; 80409302 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409305 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409309 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xD98 	; 8040930D 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409313 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x18,eax	; 80409317 
	DB 0xB8,0x18,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040931C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409320 E8 7D C9 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409325 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80409329 
	DB 0x48,0x8D,0x5,0xB0,0xC5,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409330 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409334 E8 1A C8 FF FF 
;/	-4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 80409339 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040933D 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409344 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80409348 E8 0 B9 FF FF 
;/	M\ 19 DTST
;/*	mov	rax,-0x08(rbp)	; 8040934D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x19,eax	; 80409351 
	DB 0xB8,0x19,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409356 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040935A E8 43 C9 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040935F 
	DB 0xE9,0x7C,0xF2,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND f0894c XOR \	mov     %r14,%rax
;/*	mov	rax,-0x08(rbp)	; 80409364 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409368 
	DB 0x48,0x8D,0x5,0xE6,0xC6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040936F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409372 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409376 E8 4B AE FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040937B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040937F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409384 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409388 E8 55 B0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040938D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0894C,eax	; 80409391 
	DB 0xB8,0x4C,0x89,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409396 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040939A E8 55 B0 FF FF 
;/OP0@ L@ FFFFFF AND 008b48 XOR \	mov     (%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 8040939F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804093A3 
	DB 0x48,0x8D,0x5,0x9E,0xC6,0xFF,0xFF
;/*	mov	(rax),rax	; 804093AA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804093AD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804093B1 E8 10 AE FF FF 
;/*	mov	rax,-0x08(rbp)	; 804093B6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804093BA 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804093BF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804093C3 E8 1A B0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804093C8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B48,eax	; 804093CC 
	DB 0xB8,0x48,0x8B,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804093D1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804093D5 E8 1A B0 FF FF 
;/ OR 0=
	call	_OR	; 804093DA E8 C B0 FF FF 
	call	_0equ	; 804093DF E8 5E AF FF FF 
;/ M_WL  M\ 1A DTST
	test	rax,rax	; 804093E4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804093E7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804093EB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xE9A 	; 804093EF 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804093F5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1A,eax	; 804093F9 
	DB 0xB8,0x1A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804093FE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409402 E8 9B C8 FF FF 
;/	068b49 OP1@ L! \ mov    (%r14),%rax
;/*	mov	rax,-0x08(rbp)	; 80409407 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x68B49,eax	; 8040940B 
	DB 0xB8,0x49,0x8B,0x6,0x0
;/*	mov	rax,-0x10(rbp)	; 80409410 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409414 
	DB 0x48,0x8D,0x5,0x3A,0xC6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040941B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040941E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 80409422 E8 CB AD FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409427 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040942B 
	DB 0x48,0x8D,0x5,0xAE,0xC4,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409432 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409436 E8 18 C7 FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040943B 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 8040943F 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409446 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040944A E8 FE B7 FF FF 
;/	M\ 1B DTST
;/*	mov	rax,-0x08(rbp)	; 8040944F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1B,eax	; 80409453 
	DB 0xB8,0x1B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409458 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040945C E8 41 C8 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409461 
	DB 0xE9,0x7A,0xF1,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND d08948 XOR \ mov     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80409466 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040946A 
	DB 0x48,0x8D,0x5,0xE4,0xC5,0xFF,0xFF
;/*	mov	(rax),rax	; 80409471 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409474 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409478 E8 49 AD FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040947D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80409481 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409486 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040948A E8 53 AF FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040948F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 80409493 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409498 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040949C E8 53 AF FF FF 
;/OP0@ L@ FFFFFF AND 008b48 XOR \ mov     (%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 804094A1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804094A5 
	DB 0x48,0x8D,0x5,0x9C,0xC5,0xFF,0xFF
;/*	mov	(rax),rax	; 804094AC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804094AF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804094B3 E8 E AD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804094B8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804094BC 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804094C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804094C5 E8 18 AF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804094CA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B48,eax	; 804094CE 
	DB 0xB8,0x48,0x8B,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804094D3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804094D7 E8 18 AF FF FF 
;/ OR 0=
	call	_OR	; 804094DC E8 A AF FF FF 
	call	_0equ	; 804094E1 E8 5C AE FF FF 
;/ M_WL  M\ 1C DTST
	test	rax,rax	; 804094E6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804094E9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804094ED 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xF9C 	; 804094F1 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804094F7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1C,eax	; 804094FB 
	DB 0xB8,0x1C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409500 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409504 E8 99 C7 FF FF 
;/	028b48 OP1@ L! \ mov    (%rdx),%rax
;/*	mov	rax,-0x08(rbp)	; 80409509 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x28B48,eax	; 8040950D 
	DB 0xB8,0x48,0x8B,0x2,0x0
;/*	mov	rax,-0x10(rbp)	; 80409512 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409516 
	DB 0x48,0x8D,0x5,0x38,0xC5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040951D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80409520 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 80409524 E8 C9 AC FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409529 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040952D 
	DB 0x48,0x8D,0x5,0xAC,0xC3,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409534 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409538 E8 16 C6 FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040953D 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80409541 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409548 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040954C E8 FC B6 FF FF 
;/	M\ 1D DTST
;/*	mov	rax,-0x08(rbp)	; 80409551 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1D,eax	; 80409555 
	DB 0xB8,0x1D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040955A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040955E E8 3F C7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409563 
	DB 0xE9,0x78,0xF0,0xFF,0xFF
;/J_COD F0 AND 0x80 XOR
;/*	mov	rax,-0x08(rbp)	; 80409568 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040956C 
	DB 0x48,0x8D,0x5,0x2,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 80409573 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80409576 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xF0,eax	; 8040957A 
	DB 0xB8,0xF0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040957F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_AND	; 80409583 E8 5A AE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409588 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 8040958C 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409591 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409595 E8 5A AE FF FF 
;/OP1@ L@ 1e88348 XOR OR		\ sub     $0x01,%rax      # 80406522      */
;/*	mov	rax,-0x08(rbp)	; 8040959A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040959E 
	DB 0x48,0x8D,0x5,0xB0,0xC4,0xFF,0xFF
;/*	mov	(rax),rax	; 804095A5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804095A8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804095AC E8 15 AC FF FF 
;/*	mov	rax,-0x08(rbp)	; 804095B1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1E88348,eax	; 804095B5 
	DB 0xB8,0x48,0x83,0xE8,0x1
;/*	lea	-0x08(rbp),rbp	; 804095BA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804095BE E8 31 AE FF FF 
	call	_OR	; 804095C3 E8 23 AE FF FF 
;/OP0@ L@ FFFFFF AND c01948 XOR OR \ sbb     %rax,%rax       # 80406526
;/*	mov	rax,-0x08(rbp)	; 804095C8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804095CC 
	DB 0x48,0x8D,0x5,0x75,0xC4,0xFF,0xFF
;/*	mov	(rax),rax	; 804095D3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804095D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804095DA E8 E7 AB FF FF 
;/*	mov	rax,-0x08(rbp)	; 804095DF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804095E3 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804095E8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804095EC E8 F1 AD FF FF 
;/*	mov	rax,-0x08(rbp)	; 804095F1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC01948,eax	; 804095F5 
	DB 0xB8,0x48,0x19,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 804095FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804095FE E8 F1 AD FF FF 
	call	_OR	; 80409603 E8 E3 AD FF FF 
;/  0=
	call	_0equ	; 80409608 E8 35 AD FF FF 
;/ M_WL  M\ 20 DTST
	test	rax,rax	; 8040960D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409610 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409614 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x10FC 	; 80409618 
	DB 0xF,0x84,0xAA,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040961E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20,eax	; 80409622 
	DB 0xB8,0x20,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409627 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040962B E8 72 C6 FF FF 
;/	C085 OP1@ 1+ W! \ test   %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 80409630 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC085,eax	; 80409634 
	DB 0xB8,0x85,0xC0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409639 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040963D 
	DB 0x48,0x8D,0x5,0x11,0xC4,0xFF,0xFF
;/*	mov	(rax),rax	; 80409644 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80409647 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040964B E8 2B AE FF FF 
	call	_Wsave	; 80409650 E8 8E AB FF FF 
;/	J_COD 1 XOR TO J_COD
;/*	mov	rax,-0x08(rbp)	; 80409655 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 80409659 
	DB 0x48,0x8D,0x5,0x15,0xC2,0xFF,0xFF
;/*	mov	(rax),rax	; 80409660 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80409663 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x1,eax	; 80409667 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040966C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XOR	; 80409670 E8 7F AD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409675 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 80409679 
	DB 0x48,0x8D,0x5,0xF5,0xC1,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409680 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80409684 E8 77 AB FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409689 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040968D 
	DB 0x48,0x8D,0x5,0x4C,0xC2,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409694 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409698 E8 B6 C4 FF FF 
;/	-4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040969D 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 804096A1 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804096A8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804096AC E8 9C B5 FF FF 
;/	M\ 21 DTST
;/*	mov	rax,-0x08(rbp)	; 804096B1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x21,eax	; 804096B5 
	DB 0xB8,0x21,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804096BA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804096BE E8 DF C5 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 804096C3 
	DB 0xE9,0x18,0xEF,0xFF,0xFF
;/
;/OP1@ W@ 9248 XOR	\ xchg    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 804096C8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 804096CC 
	DB 0x48,0x8D,0x5,0x82,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 804096D3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804096D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 804096DA E8 F2 AA FF FF 
;/*	mov	rax,-0x08(rbp)	; 804096DF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9248,eax	; 804096E3 
	DB 0xB8,0x48,0x92,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804096E8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804096EC E8 3 AD FF FF 
;/OP0@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 804096F1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804096F5 
	DB 0x48,0x8D,0x5,0x4C,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 804096FC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804096FF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409703 E8 BE AA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409708 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040970C 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409711 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409715 E8 C8 AC FF FF 
;/DUP	458948 XOR	\ mov     %rax,-0x08(%rbp)
	call	_DUP	; 8040971A E8 9 AE FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040971F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 80409723 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 80409728 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040972C E8 C3 AC FF FF 
;/OVER	108948 <> AND	\ mov     %rdx,(%rax)
	call	_OVER	; 80409731 E8 63 AE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409736 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x108948,eax	; 8040973A 
	DB 0xB8,0x48,0x89,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040973F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 80409743 E8 51 AC FF FF 
	call	_AND	; 80409748 E8 95 AC FF FF 
;/SWAP	100148 <> AND	\ add     %rdx,(%rax)
	call	_SWAP	; 8040974D E8 F0 AD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409752 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x100148,eax	; 80409756 
	DB 0xB8,0x48,0x1,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040975B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040975F E8 35 AC FF FF 
	call	_AND	; 80409764 E8 79 AC FF FF 
;/ OR   0=
	call	_OR	; 80409769 E8 7D AC FF FF 
	call	_0equ	; 8040976E E8 CF AB FF FF 
;/ M_WL  M\ 2E DTST
	test	rax,rax	; 80409773 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409776 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040977A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x12EA 	; 8040977E 
	DB 0xF,0x84,0x32,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409784 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E,eax	; 80409788 
	DB 0xB8,0x2E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040978D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409791 E8 C C5 FF FF 
;/	OP0@ 2+ C@ 45 XOR
;/*	mov	rax,-0x08(rbp)	; 80409796 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040979A 
	DB 0x48,0x8D,0x5,0xA7,0xC2,0xFF,0xFF
;/*	mov	(rax),rax	; 804097A1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804097A4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 804097A8 E8 CB AC FF FF 
	call	_Cload	; 804097AD E8 1B AA FF FF 
;/*	mov	rax,-0x08(rbp)	; 804097B2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45,eax	; 804097B6 
	DB 0xB8,0x45,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804097BB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804097BF E8 30 AC FF FF 
;/	IF	OP0@ W@ 020000 OR \ %rax,(%rdx)
	test	rax,rax	; 804097C4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804097C7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804097CB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1254 	; 804097CF 
	DB 0xF,0x84,0x4B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804097D5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804097D9 
	DB 0x48,0x8D,0x5,0x68,0xC2,0xFF,0xFF
;/*	mov	(rax),rax	; 804097E0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804097E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 804097E7 E8 E5 A9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804097EC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20000,eax	; 804097F0 
	DB 0xB8,0x0,0x0,0x2,0x0
;/*	lea	-0x08(rbp),rbp	; 804097F5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OR	; 804097F9 E8 ED AB FF FF 
;/		1 OP0 +!
;/*	mov	rax,-0x08(rbp)	; 804097FE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1,eax	; 80409802 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409807 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040980B 
	DB 0x48,0x8D,0x5,0xC6,0xC0,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409812 
	DB 0x48,0x8D,0x6D,0xF0
	call	_addsave	; 80409816 E8 F5 A9 FF FF 
;/	ELSE	OP0@ L@ 500000 OR \ %rax,(%rdx)
;/*	jmp	_OPTsubRULES+0x129A 	; 8040981B 
	DB 0xE9,0x46,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409820 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409824 
	DB 0x48,0x8D,0x5,0x1D,0xC2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040982B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040982E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409832 E8 8F A9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409837 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x500000,eax	; 8040983B 
	DB 0xB8,0x0,0x0,0x50,0x0
;/*	lea	-0x08(rbp),rbp	; 80409840 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OR	; 80409844 E8 A2 AB FF FF 
;/		2 OP0 +!
;/*	mov	rax,-0x08(rbp)	; 80409849 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040984D 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409852 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409856 
	DB 0x48,0x8D,0x5,0x7B,0xC0,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040985D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_addsave	; 80409861 E8 AA A9 FF FF 
;/	THEN OP1@ L!	\ __	%rax,(%rdx)
;/*	mov	rax,-0x08(rbp)	; 80409866 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040986A 
	DB 0x48,0x8D,0x5,0xE4,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 80409871 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409874 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lsave	; 80409878 E8 75 A9 FF FF 
;/        9248 OP0 @ W!	\ xchg    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040987D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9248,eax	; 80409881 
	DB 0xB8,0x48,0x92,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409886 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040988A 
	DB 0x48,0x8D,0x5,0x47,0xC0,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409891 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 80409895 E8 2F A9 FF FF 
	call	_Wsave	; 8040989A E8 44 A9 FF FF 
;/	M\ 2F DTST
;/*	mov	rax,-0x08(rbp)	; 8040989F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2F,eax	; 804098A3 
	DB 0xB8,0x2F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804098A8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804098AC E8 F1 C3 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 804098B1 
	DB 0xE9,0x2A,0xED,0xFF,0xFF
;/
;/OP1@ C@ B8 XOR \ movq    $0x108,%rax
;/*	mov	rax,-0x08(rbp)	; 804098B6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 804098BA 
	DB 0x48,0x8D,0x5,0x94,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 804098C1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804098C4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 804098C8 E8 0 A9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804098CD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 804098D1 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804098D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 804098DA E8 15 AB FF FF 
;/OP0@ L@ F7FFFF AND d0f748 XOR \ negq|notq    %rax
;/*	mov	rax,-0x08(rbp)	; 804098DF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 804098E3 
	DB 0x48,0x8D,0x5,0x5E,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 804098EA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 804098ED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 804098F1 E8 D0 A8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804098F6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF7FFFF,eax	; 804098FA 
	DB 0xB8,0xFF,0xFF,0xF7,0x0
;/*	lea	-0x08(rbp),rbp	; 804098FF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409903 E8 DA AA FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409908 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD0F748,eax	; 8040990C 
	DB 0xB8,0x48,0xF7,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409911 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409915 E8 DA AA FF FF 
;/ OR 0=
	call	_OR	; 8040991A E8 CC AA FF FF 
	call	_0equ	; 8040991F E8 1E AA FF FF 
;/ M_WL  M\ 48 DTST
	test	rax,rax	; 80409924 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409927 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040992B 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x147F 	; 8040992F 
	DB 0xF,0x84,0x16,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409935 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80409939 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040993E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409942 E8 5B C3 FF FF 
;/	OP1@ 1+ L@ OP0@ L@ 80000 AND IF NEGATE ELSE INVERT THEN
;/*	mov	rax,-0x08(rbp)	; 80409947 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040994B 
	DB 0x48,0x8D,0x5,0x3,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 80409952 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409955 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 80409959 E8 1D AB FF FF 
	call	_Lload	; 8040995E E8 63 A8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409963 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409967 
	DB 0x48,0x8D,0x5,0xDA,0xC0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040996E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409971 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409975 E8 4C A8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040997A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80000,eax	; 8040997E 
	DB 0xB8,0x0,0x0,0x8,0x0
;/*	lea	-0x08(rbp),rbp	; 80409983 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409987 E8 56 AA FF FF 
	test	rax,rax	; 8040998C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040998F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409993 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x13DB 	; 80409997 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_NEGATE	; 8040999D E8 5F AA FF FF 
;/*	jmp	_OPTsubRULES+0x13E0 	; 804099A2 
	DB 0xE9,0x5,0x0,0x0,0x0
	call	_NOT	; 804099A7 E8 51 AA FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804099AC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 804099B0 
	DB 0x48,0x8D,0x5,0x29,0xBF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804099B7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804099BB E8 93 C1 FF FF 
;/	-8 ALLOT 48 C,
;/*	mov	rax,-0x08(rbp)	; 804099C0 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x8,rax	; 804099C4 
	DB 0x48,0xC7,0xC0,0xF8,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804099CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 804099CF E8 79 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804099D4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 804099D8 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804099DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 804099E1 E8 E8 B2 FF FF 
;/	DUP LONG?
	call	_DUP	; 804099E6 E8 3D AB FF FF 
	call	_LONGque	; 804099EB E8 FD BB FF FF 
;/	IF      c0c7 W, L,
	test	rax,rax	; 804099F0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804099F3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804099F7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1451 	; 804099FB 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409A01 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C7,eax	; 80409A05 
	DB 0xB8,0xC7,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A0A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 80409A0E E8 9E B2 FF FF 
	call	_Lcom	; 80409A13 E8 7C B2 FF FF 
;/	ELSE   $B8 C,  ,	\  movabs $X,%rax
;/*	jmp	_OPTsubRULES+0x1468 	; 80409A18 
	DB 0xE9,0x17,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409A1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 80409A21 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A26 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80409A2A E8 9F B2 FF FF 
	call	_com	; 80409A2F E8 43 B2 FF FF 
;/	THEN
;/	M\ 49 DTST
;/*	mov	rax,-0x08(rbp)	; 80409A34 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x49,eax	; 80409A38 
	DB 0xB8,0x49,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A3D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409A41 E8 5C C2 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409A46 
	DB 0xE9,0x95,0xEB,0xFF,0xFF
;/OP1@ C@ B8 XOR \ movq    $0x108,%rax
;/*	mov	rax,-0x08(rbp)	; 80409A4B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409A4F 
	DB 0x48,0x8D,0x5,0xFF,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409A56 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A59 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 80409A5D E8 6B A7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409A62 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 80409A66 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409A6F E8 80 A9 FF FF 
;/OP0@ W@ C188 XOR \ mov     %al,%cl
;/*	mov	rax,-0x08(rbp)	; 80409A74 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409A78 
	DB 0x48,0x8D,0x5,0xC9,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409A7F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A82 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 80409A86 E8 46 A7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409A8B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC188,eax	; 80409A8F 
	DB 0xB8,0x88,0xC1,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409A94 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409A98 E8 57 A9 FF FF 
;/ OR 0=
	call	_OR	; 80409A9D E8 49 A9 FF FF 
	call	_0equ	; 80409AA2 E8 9B A8 FF FF 
;/ M_WL	M\ 5E DTST
	test	rax,rax	; 80409AA7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409AAA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409AAE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x156D 	; 80409AB2 
	DB 0xF,0x84,0x81,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409AB8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5E,eax	; 80409ABC 
	DB 0xB8,0x5E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409AC1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409AC5 E8 D8 C1 FF FF 
;/  B1 OP0@ C! OP1@ 1+ C@ OP0@ 1+ C!   \ mov    $8,%cl
;/*	mov	rax,-0x08(rbp)	; 80409ACA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB1,eax	; 80409ACE 
	DB 0xB8,0xB1,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409AD3 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409AD7 
	DB 0x48,0x8D,0x5,0x6A,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409ADE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80409AE1 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Csave	; 80409AE5 E8 EB A6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409AEA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409AEE 
	DB 0x48,0x8D,0x5,0x60,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409AF5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409AF8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 80409AFC E8 7A A9 FF FF 
	call	_Cload	; 80409B01 E8 C7 A6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409B06 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409B0A 
	DB 0x48,0x8D,0x5,0x37,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409B11 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B14 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 80409B18 E8 5E A9 FF FF 
	call	_Csave	; 80409B1D E8 B3 A6 FF FF 
;/	M\ 5F DTST
;/*	mov	rax,-0x08(rbp)	; 80409B22 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5F,eax	; 80409B26 
	DB 0xB8,0x5F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B2B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409B2F E8 6E C1 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409B34 
	DB 0xE9,0xA7,0xEA,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND c0c748 XOR \ movq    $0x108,%rax
;/*	mov	rax,-0x08(rbp)	; 80409B39 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409B3D 
	DB 0x48,0x8D,0x5,0x11,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409B44 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B47 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409B4B E8 76 A6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409B50 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80409B54 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B59 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409B5D E8 80 A8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409B62 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C748,eax	; 80409B66 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409B6F E8 80 A8 FF FF 
;/OP0@ L@ FFFFFF AND d8f748 XOR \ negq    %rax
;/*	mov	rax,-0x08(rbp)	; 80409B74 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409B78 
	DB 0x48,0x8D,0x5,0xC9,0xBE,0xFF,0xFF
;/*	mov	(rax),rax	; 80409B7F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B82 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409B86 E8 3B A6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409B8B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80409B8F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409B94 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409B98 E8 45 A8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409B9D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD8F748,eax	; 80409BA1 
	DB 0xB8,0x48,0xF7,0xD8,0x0
;/*	lea	-0x08(rbp),rbp	; 80409BA6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409BAA E8 45 A8 FF FF 
;/ OR 0=
	call	_OR	; 80409BAF E8 37 A8 FF FF 
	call	_0equ	; 80409BB4 E8 89 A7 FF FF 
;/ M_WL  M\ 36 DTST
	test	rax,rax	; 80409BB9 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409BBC 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409BC0 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x169E 	; 80409BC4 
	DB 0xF,0x84,0xA0,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409BCA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x36,eax	; 80409BCE 
	DB 0xB8,0x36,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409BD3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409BD7 E8 C6 C0 FF FF 
;/	OP1@ 3 + SL@  NEGATE OP1@ 3 + L!
;/*	mov	rax,-0x08(rbp)	; 80409BDC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409BE0 
	DB 0x48,0x8D,0x5,0x6E,0xBE,0xFF,0xFF
;/*	mov	(rax),rax	; 80409BE7 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80409BEA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 80409BEE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80409BF3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 80409BF7 E8 1F A8 FF FF 
	call	_SLload	; 80409BFC E8 C0 A5 FF FF 
	call	_NEGATE	; 80409C01 E8 FB A7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409C06 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409C0A 
	DB 0x48,0x8D,0x5,0x44,0xBE,0xFF,0xFF
;/*	mov	(rax),rax	; 80409C11 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80409C14 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 80409C18 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80409C1D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 80409C21 E8 F5 A7 FF FF 
	call	_Lsave	; 80409C26 E8 C7 A5 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409C2B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 80409C2F 
	DB 0x48,0x8D,0x5,0xAA,0xBC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409C36 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409C3A E8 14 BF FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 80409C3F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80409C43 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409C4A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80409C4E E8 FA AF FF FF 
;/	M\ 37 DTST
;/*	mov	rax,-0x08(rbp)	; 80409C53 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x37,eax	; 80409C57 
	DB 0xB8,0x37,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409C5C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409C60 E8 3D C0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409C65 
	DB 0xE9,0x76,0xE9,0xFF,0xFF
;/
;/OP1@ W@ 9248 XOR		\ xchg    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80409C6A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409C6E 
	DB 0x48,0x8D,0x5,0xE0,0xBD,0xFF,0xFF
;/*	mov	(rax),rax	; 80409C75 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409C78 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 80409C7C E8 50 A5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409C81 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9248,eax	; 80409C85 
	DB 0xB8,0x48,0x92,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409C8A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409C8E E8 61 A7 FF FF 
;/OP0@ L@ FFFFFF AND d08948 XOR	\ mov     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80409C93 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409C97 
	DB 0x48,0x8D,0x5,0xAA,0xBD,0xFF,0xFF
;/*	mov	(rax),rax	; 80409C9E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409CA1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409CA5 E8 1C A5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409CAA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80409CAE 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409CB3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409CB7 E8 26 A7 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409CBC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 80409CC0 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409CC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409CC9 E8 26 A7 FF FF 
;/ OR 0=
	call	_OR	; 80409CCE E8 18 A7 FF FF 
	call	_0equ	; 80409CD3 E8 6A A6 FF FF 
;/ M_WL  M\ 3A DTST
	test	rax,rax	; 80409CD8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409CDB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409CDF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x176E 	; 80409CE3 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409CE9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3A,eax	; 80409CED 
	DB 0xB8,0x3A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409CF2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409CF6 E8 A7 BF FF FF 
;/       OP2 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409CFB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 80409CFF 
	DB 0x48,0x8D,0x5,0xE2,0xBB,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409D06 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409D0A E8 44 BE FF FF 
;/	-5 ALLOT
;/*	mov	rax,-0x08(rbp)	; 80409D0F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x5,rax	; 80409D13 
	DB 0x48,0xC7,0xC0,0xFB,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409D1A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80409D1E E8 2A AF FF FF 
;/	M\ 3B DTST
;/*	mov	rax,-0x08(rbp)	; 80409D23 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3B,eax	; 80409D27 
	DB 0xB8,0x3B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D2C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409D30 E8 6D BF FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409D35 
	DB 0xE9,0xA6,0xE8,0xFF,0xFF
;/
;/OP1@ @ 80000000FF AND 25 XOR \ and $_,%rax
;/*	mov	rax,-0x08(rbp)	; 80409D3A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409D3E 
	DB 0x48,0x8D,0x5,0x10,0xBD,0xFF,0xFF
;/*	mov	(rax),rax	; 80409D45 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D48 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80409D4C E8 78 A4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409D51 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FF,%rax	; 80409D55 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D5F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409D63 E8 7A A6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409D68 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x25,eax	; 80409D6C 
	DB 0xB8,0x25,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D71 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409D75 E8 7A A6 FF FF 
;/OP0@ @ 80000000FFFF AND 3548 XOR \ XOR $_,%rax
;/*	mov	rax,-0x08(rbp)	; 80409D7A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409D7E 
	DB 0x48,0x8D,0x5,0xC3,0xBC,0xFF,0xFF
;/*	mov	(rax),rax	; 80409D85 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D88 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80409D8C E8 38 A4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409D91 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FFFF,%rax	; 80409D95 
	DB 0x48,0xB8,0xFF,0xFF,0x0,0x0,0x0,0x80,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409DA3 E8 3A A6 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409DA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3548,eax	; 80409DAC 
	DB 0xB8,0x48,0x35,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409DB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409DB5 E8 3A A6 FF FF 
;/ OR 0=
	call	_OR	; 80409DBA E8 2C A6 FF FF 
	call	_0equ	; 80409DBF E8 7E A5 FF FF 
;/ M_WL  M\ 4E DTST
	test	rax,rax	; 80409DC4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409DC7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409DCB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x18CD 	; 80409DCF 
	DB 0xF,0x84,0xC4,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409DD5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4E,eax	; 80409DD9 
	DB 0xB8,0x4E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409DDE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409DE2 E8 BB BE FF FF 
;/	OP0 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 80409DE7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409DEB 
	DB 0x48,0x8D,0x5,0xE6,0xBA,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80409DF2 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 80409DF6 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409DFD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 80409E01 E8 ED C2 FF FF 
;/	OP0 @ 1+ L@ FF ANDC 0= IF 34 OP0 @ C! -3 ALLOT THEN
;/*	mov	rax,-0x08(rbp)	; 80409E06 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409E0A 
	DB 0x48,0x8D,0x5,0xC7,0xBA,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409E11 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80409E15 E8 AF A3 FF FF 
	call	_CHARadd	; 80409E1A E8 5C A6 FF FF 
	call	_Lload	; 80409E1F E8 A2 A3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409E24 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80409E28 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409E2D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ANDC	; 80409E31 E8 A9 A5 FF FF 
	call	_0equ	; 80409E36 E8 7 A5 FF FF 
	test	rax,rax	; 80409E3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409E3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409E42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x18B6 	; 80409E46 
	DB 0xF,0x84,0x36,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409E4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x34,eax	; 80409E50 
	DB 0xB8,0x34,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409E55 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409E59 
	DB 0x48,0x8D,0x5,0x78,0xBA,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409E60 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 80409E64 E8 60 A3 FF FF 
	call	_Csave	; 80409E69 E8 67 A3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409E6E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80409E72 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409E79 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80409E7D E8 CB AD FF FF 
;/	
;/	M\ 4F DTST
;/*	mov	rax,-0x08(rbp)	; 80409E82 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4F,eax	; 80409E86 
	DB 0xB8,0x4F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409E8B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409E8F E8 E BE FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409E94 
	DB 0xE9,0x47,0xE7,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 00B60F  XOR \ movzb	(%rax),%eax	# 80406746 	*/.byte 
;/*	mov	rax,-0x08(rbp)	; 80409E99 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409E9D 
	DB 0x48,0x8D,0x5,0xB1,0xBB,0xFF,0xFF
;/*	mov	(rax),rax	; 80409EA4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409EA7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 80409EAB E8 16 A3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409EB0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 80409EB4 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 80409EB9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409EBD E8 20 A5 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409EC2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB60F,eax	; 80409EC6 
	DB 0xB8,0xF,0xB6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409ECB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409ECF E8 20 A5 FF FF 
;/OP0@ @ 80000000FFFF AND 3548 XOR \ XOR $_,%rax
;/*	mov	rax,-0x08(rbp)	; 80409ED4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 80409ED8 
	DB 0x48,0x8D,0x5,0x69,0xBB,0xFF,0xFF
;/*	mov	(rax),rax	; 80409EDF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 80409EE2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80409EE6 E8 DE A2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409EEB 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FFFF,%rax	; 80409EEF 
	DB 0x48,0xB8,0xFF,0xFF,0x0,0x0,0x0,0x80,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409EF9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80409EFD E8 E0 A4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409F02 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3548,eax	; 80409F06 
	DB 0xB8,0x48,0x35,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409F0B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 80409F0F E8 E0 A4 FF FF 
;/ OR 0=
	call	_OR	; 80409F14 E8 D2 A4 FF FF 
	call	_0equ	; 80409F19 E8 24 A4 FF FF 
;/ M_WL  M\ 50 DTST
	test	rax,rax	; 80409F1E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409F21 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409F25 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1A27 	; 80409F29 
	DB 0xF,0x84,0xC4,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409F2F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x50,eax	; 80409F33 
	DB 0xB8,0x50,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409F38 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409F3C E8 61 BD FF FF 
;/	OP0 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 80409F41 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409F45 
	DB 0x48,0x8D,0x5,0x8C,0xB9,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80409F4C 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 80409F50 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409F57 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 80409F5B E8 93 C1 FF FF 
;/	OP0 @ 1+ L@ FF ANDC 0= IF 34 OP0 @ C! -3 ALLOT THEN
;/*	mov	rax,-0x08(rbp)	; 80409F60 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409F64 
	DB 0x48,0x8D,0x5,0x6D,0xB9,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409F6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80409F6F E8 55 A2 FF FF 
	call	_CHARadd	; 80409F74 E8 2 A5 FF FF 
	call	_Lload	; 80409F79 E8 48 A2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409F7E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 80409F82 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409F87 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ANDC	; 80409F8B E8 4F A4 FF FF 
	call	_0equ	; 80409F90 E8 AD A3 FF FF 
	test	rax,rax	; 80409F95 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80409F98 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409F9C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1A10 	; 80409FA0 
	DB 0xF,0x84,0x36,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409FA6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x34,eax	; 80409FAA 
	DB 0xB8,0x34,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409FAF 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80409FB3 
	DB 0x48,0x8D,0x5,0x1E,0xB9,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409FBA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 80409FBE E8 6 A2 FF FF 
	call	_Csave	; 80409FC3 E8 D A2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80409FC8 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 80409FCC 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80409FD3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 80409FD7 E8 71 AC FF FF 
;/	
;/	M\ 51 DTST
;/*	mov	rax,-0x08(rbp)	; 80409FDC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x51,eax	; 80409FE0 
	DB 0xB8,0x51,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409FE5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409FE9 E8 B4 BC FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409FEE 
	DB 0xE9,0xED,0xE5,0xFF,0xFF
;/
;/OP1@ @ FFFFFF80FF AND B8 XOR \ mov $X,%rax
;/*	mov	rax,-0x08(rbp)	; 80409FF3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 80409FF7 
	DB 0x48,0x8D,0x5,0x57,0xBA,0xFF,0xFF
;/*	mov	(rax),rax	; 80409FFE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A001 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040A005 E8 BF A1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A00A 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0xFFFFFF80FF,%rax	; 8040A00E 
	DB 0x48,0xB8,0xFF,0x80,0xFF,0xFF,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A018 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A01C E8 C1 A3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A021 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040A025 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A02A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A02E E8 C1 A3 FF FF 
;/OP0@ L@ FEFFFF AND C60149 XOR \ add     %rax,%r14|15
;/*	mov	rax,-0x08(rbp)	; 8040A033 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A037 
	DB 0x48,0x8D,0x5,0xA,0xBA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A03E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A041 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A045 E8 7C A1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A04A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFEFFFF,eax	; 8040A04E 
	DB 0xB8,0xFF,0xFF,0xFE,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A053 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A057 E8 86 A3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A05C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC60149,eax	; 8040A060 
	DB 0xB8,0x49,0x1,0xC6,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A065 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A069 E8 86 A3 FF FF 
;/ OR 0=
	call	_OR	; 8040A06E E8 78 A3 FF FF 
	call	_0equ	; 8040A073 E8 CA A2 FF FF 
;/ M_WL  M\ 8E DTST
	test	rax,rax	; 8040A078 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A07B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A07F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1BBB 	; 8040A083 
	DB 0xF,0x84,0xFE,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A089 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8E,eax	; 8040A08D 
	DB 0xB8,0x8E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A092 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A096 E8 7 BC FF FF 
;/	OP1@ 1+ C@ OP0@ 2+ C@
;/*	mov	rax,-0x08(rbp)	; 8040A09B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A09F 
	DB 0x48,0x8D,0x5,0xAF,0xB9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A0A6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A0A9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A0AD E8 C9 A3 FF FF 
	call	_Cload	; 8040A0B2 E8 16 A1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A0B7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A0BB 
	DB 0x48,0x8D,0x5,0x86,0xB9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A0C2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A0C5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040A0C9 E8 AA A3 FF FF 
	call	_Cload	; 8040A0CE E8 FA A0 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040A0D3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040A0D7 
	DB 0x48,0x8D,0x5,0x2,0xB8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A0DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040A0E2 E8 6C BA FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040A0E7 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 8040A0EB 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A0F2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040A0F6 E8 52 AB FF FF 
;/       OP0 4 OPinsert
;/*	mov	rax,-0x08(rbp)	; 8040A0FB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040A0FF 
	DB 0x48,0x8D,0x5,0xD2,0xB7,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040A106 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040A10A 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A10F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 8040A113 E8 A8 C0 FF FF 
;/	OP1@ 2+ C!
;/*	mov	rax,-0x08(rbp)	; 8040A118 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A11C 
	DB 0x48,0x8D,0x5,0x32,0xB9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A123 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A126 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040A12A E8 49 A3 FF FF 
	call	_Csave	; 8040A12F E8 A1 A0 FF FF 
;/	OP1@ 3+ C!
;/*	mov	rax,-0x08(rbp)	; 8040A134 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A138 
	DB 0x48,0x8D,0x5,0x16,0xB9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A13F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A142 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040A146 E8 2A A3 FF FF 
	call	_Csave	; 8040A14B E8 85 A0 FF FF 
;/         8349 OP1@ W! \ add    $X,%r14		
;/*	mov	rax,-0x08(rbp)	; 8040A150 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8349,eax	; 8040A154 
	DB 0xB8,0x49,0x83,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A159 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A15D 
	DB 0x48,0x8D,0x5,0xF1,0xB8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A164 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A167 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Wsave	; 8040A16B E8 73 A0 FF FF 
;/	M\ 8F DTST
;/*	mov	rax,-0x08(rbp)	; 8040A170 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8F,eax	; 8040A174 
	DB 0xB8,0x8F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A179 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A17D E8 20 BB FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A182 
	DB 0xE9,0x59,0xE4,0xFF,0xFF
;/
;/OP1@ 1+ L@  OP0@ 3+ C@ << FFFFFFFF ANDC  
;/*	mov	rax,-0x08(rbp)	; 8040A187 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A18B 
	DB 0x48,0x8D,0x5,0xC3,0xB8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A192 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A195 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A199 E8 DD A2 FF FF 
	call	_Lload	; 8040A19E E8 23 A0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A1A3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A1A7 
	DB 0x48,0x8D,0x5,0x9A,0xB8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A1AE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A1B1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040A1B5 E8 BB A2 FF FF 
	call	_Cload	; 8040A1BA E8 E A0 FF FF 
	call	_lessless	; 8040A1BF E8 8B A4 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A1C4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFFFF,eax	; 8040A1C8 
	DB 0xB8,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A1CD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ANDC	; 8040A1D1 E8 9 A2 FF FF 
;/OP1@ C@  B8 XOR OR \ mov $X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A1D6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A1DA 
	DB 0x48,0x8D,0x5,0x74,0xB8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A1E1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A1E4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040A1E8 E8 E0 9F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A1ED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040A1F1 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A1F6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A1FA E8 F5 A1 FF FF 
	call	_OR	; 8040A1FF E8 E7 A1 FF FF 
;/OP0@ L@ FFFFFF AND E0C148 XOR OR \ shl     $0x03,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A204 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A208 
	DB 0x48,0x8D,0x5,0x39,0xB8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A20F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A212 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A216 E8 AB 9F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A21B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A21F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A224 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A228 E8 B5 A1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A22D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE0C148,eax	; 8040A231 
	DB 0xB8,0x48,0xC1,0xE0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A236 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A23A E8 B5 A1 FF FF 
	call	_OR	; 8040A23F E8 A7 A1 FF FF 
;/ 0= M_WL  M\ 92 DTST
	call	_0equ	; 8040A244 E8 F9 A0 FF FF 
	test	rax,rax	; 8040A249 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A24C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A250 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1D38 	; 8040A254 
	DB 0xF,0x84,0xAA,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A25A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x92,eax	; 8040A25E 
	DB 0xB8,0x92,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A263 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A267 E8 36 BA FF FF 
;/	OP1@ 1+ L@  OP0@ 3+ C@ << OP1@ 1+ L!
;/*	mov	rax,-0x08(rbp)	; 8040A26C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A270 
	DB 0x48,0x8D,0x5,0xDE,0xB7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A277 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A27A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A27E E8 F8 A1 FF FF 
	call	_Lload	; 8040A283 E8 3E 9F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A288 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A28C 
	DB 0x48,0x8D,0x5,0xB5,0xB7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A293 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A296 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040A29A E8 D6 A1 FF FF 
	call	_Cload	; 8040A29F E8 29 9F FF FF 
	call	_lessless	; 8040A2A4 E8 A6 A3 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A2A9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A2AD 
	DB 0x48,0x8D,0x5,0xA1,0xB7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A2B4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A2B7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A2BB E8 BB A1 FF FF 
	call	_Lsave	; 8040A2C0 E8 2D 9F FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040A2C5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040A2C9 
	DB 0x48,0x8D,0x5,0x10,0xB6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A2D0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040A2D4 E8 7A B8 FF FF 
;/        -4 ALLOT	
;/*	mov	rax,-0x08(rbp)	; 8040A2D9 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040A2DD 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A2E4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040A2E8 E8 60 A9 FF FF 
;/	M\ 93 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A2ED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x93,eax	; 8040A2F1 
	DB 0xB8,0x93,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A2F6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A2FA E8 A3 B9 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A2FF 
	DB 0xE9,0xDC,0xE2,0xFF,0xFF
;/
;/OP1@ 1+ L@ 2* FFFFFFFF ANDC  
;/*	mov	rax,-0x08(rbp)	; 8040A304 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A308 
	DB 0x48,0x8D,0x5,0x46,0xB7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A30F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A312 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A316 E8 60 A1 FF FF 
	call	_Lload	; 8040A31B E8 A6 9E FF FF 
	call	_2mul	; 8040A320 E8 71 A1 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A325 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFFFF,eax	; 8040A329 
	DB 0xB8,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A32E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ANDC	; 8040A332 E8 A8 A0 FF FF 
;/OP1@ C@  B8 XOR OR \ mov $X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A337 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A33B 
	DB 0x48,0x8D,0x5,0x13,0xB7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A342 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A345 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040A349 E8 7F 9E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A34E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040A352 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A357 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A35B E8 94 A0 FF FF 
	call	_OR	; 8040A360 E8 86 A0 FF FF 
;/OP0@ L@ 00048D48 XOR OR \ lea     (%rax,%rax,1),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A365 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A369 
	DB 0x48,0x8D,0x5,0xD8,0xB6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A370 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A373 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A377 E8 4A 9E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A37C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48D48,eax	; 8040A380 
	DB 0xB8,0x48,0x8D,0x4,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A385 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A389 E8 66 A0 FF FF 
	call	_OR	; 8040A38E E8 58 A0 FF FF 
;/ 0= M_WL  M\ 94 DTST
	call	_0equ	; 8040A393 E8 AA 9F FF FF 
	test	rax,rax	; 8040A398 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A39B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A39F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1E6B 	; 8040A3A3 
	DB 0xF,0x84,0x8E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A3A9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x94,eax	; 8040A3AD 
	DB 0xB8,0x94,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A3B2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A3B6 E8 E7 B8 FF FF 
;/	OP1@ 1+ L@  2* OP1@ 1+ L!
;/*	mov	rax,-0x08(rbp)	; 8040A3BB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A3BF 
	DB 0x48,0x8D,0x5,0x8F,0xB6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A3C6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A3C9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A3CD E8 A9 A0 FF FF 
	call	_Lload	; 8040A3D2 E8 EF 9D FF FF 
	call	_2mul	; 8040A3D7 E8 BA A0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A3DC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A3E0 
	DB 0x48,0x8D,0x5,0x6E,0xB6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A3E7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A3EA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A3EE E8 88 A0 FF FF 
	call	_Lsave	; 8040A3F3 E8 FA 9D FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040A3F8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040A3FC 
	DB 0x48,0x8D,0x5,0xDD,0xB4,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A403 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040A407 E8 47 B7 FF FF 
;/        -4 ALLOT	
;/*	mov	rax,-0x08(rbp)	; 8040A40C 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040A410 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A417 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040A41B E8 2D A8 FF FF 
;/	M\ 95 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A420 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x95,eax	; 8040A424 
	DB 0xB8,0x95,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A429 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A42D E8 70 B8 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A432 
	DB 0xE9,0xA9,0xE1,0xFF,0xFF
;/
;/ OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040A437 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A43B 
	DB 0x48,0x8D,0x5,0x13,0xB6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A442 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A445 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A449 E8 78 9D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A44E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A452 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A457 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A45B E8 82 9F FF FF 
;/ DUP  f08148 XOR		\ xor     $X,%rax
	call	_DUP	; 8040A460 E8 C3 A0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A465 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF08148,eax	; 8040A469 
	DB 0xB8,0x48,0x81,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A46E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A472 E8 7D 9F FF FF 
;/ SWAP 053348 <> AND	\ xor     X(%rip),%rax
	call	_SWAP	; 8040A477 E8 C6 A0 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A47C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x53348,eax	; 8040A480 
	DB 0xB8,0x48,0x33,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A485 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040A489 E8 B 9F FF FF 
	call	_AND	; 8040A48E E8 4F 9F FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A493 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A497 
	DB 0x48,0x8D,0x5,0xAA,0xB5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A49E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A4A1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A4A5 E8 1C 9D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A4AA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A4AE 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A4B3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A4B7 E8 26 9F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A4BC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040A4C0 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A4C5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A4C9 E8 26 9F FF FF 
	call	_OR	; 8040A4CE E8 18 9F FF FF 
;/  0=
	call	_0equ	; 8040A4D3 E8 6A 9E FF FF 
;/ M_WL  M\ 16 DTST
	test	rax,rax	; 8040A4D8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A4DB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A4DF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1FD4 	; 8040A4E3 
	DB 0xF,0x84,0xB7,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A4E9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x16,eax	; 8040A4ED 
	DB 0xB8,0x16,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A4F2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A4F6 E8 A7 B7 FF FF 
;/	OP1@ 1+ C@ 33 XOR
;/*	mov	rax,-0x08(rbp)	; 8040A4FB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A4FF 
	DB 0x48,0x8D,0x5,0x4F,0xB5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A506 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A509 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040A50D E8 69 9F FF FF 
	call	_Cload	; 8040A512 E8 B6 9C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A517 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x33,eax	; 8040A51B 
	DB 0xB8,0x33,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A520 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A524 E8 CB 9E FF FF 
;/	IF  	F8 OP1@ 2+ C!  \ cmp    $X,%rax
	test	rax,rax	; 8040A529 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A52C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A530 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1F98 	; 8040A534 
	DB 0xF,0x84,0x2A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A53A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF8,eax	; 8040A53E 
	DB 0xB8,0xF8,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A543 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A547 
	DB 0x48,0x8D,0x5,0x7,0xB5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A54E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A551 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040A555 E8 1E 9F FF FF 
	call	_Csave	; 8040A55A E8 76 9C FF FF 
;/	ELSE 	3B OP1@ 1+ C!  \ cmp    X(%rip),%rax
;/*	jmp	_OPTsubRULES+0x1FBD 	; 8040A55F 
	DB 0xE9,0x25,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A564 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3B,eax	; 8040A568 
	DB 0xB8,0x3B,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A56D 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A571 
	DB 0x48,0x8D,0x5,0xDD,0xB4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A578 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A57B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040A57F E8 F7 9E FF FF 
	call	_Csave	; 8040A584 E8 4C 9C FF FF 
;/	THEN
;/	M\ 17 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A589 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x17,eax	; 8040A58D 
	DB 0xB8,0x17,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A592 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A596 E8 7 B7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A59B 
	DB 0xE9,0x40,0xE0,0xFF,0xFF
;/
;/OP1@ W@		3548	XOR	\ xor     $X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A5A0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A5A4 
	DB 0x48,0x8D,0x5,0xAA,0xB4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A5AB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A5AE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040A5B2 E8 1A 9C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A5B7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3548,eax	; 8040A5BB 
	DB 0xB8,0x48,0x35,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A5C0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A5C4 E8 2B 9E FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR	OR \ mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A5C9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A5CD 
	DB 0x48,0x8D,0x5,0x74,0xB4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A5D4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A5D7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A5DB E8 E6 9B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A5E0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A5E4 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A5E9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A5ED E8 F0 9D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A5F2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040A5F6 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A5FB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A5FF E8 F0 9D FF FF 
	call	_OR	; 8040A604 E8 E2 9D FF FF 
;/  0=
	call	_0equ	; 8040A609 E8 34 9D FF FF 
;/ M_WL  M\ 4C DTST
	test	rax,rax	; 8040A60E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A611 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A615 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x20A1 	; 8040A619 
	DB 0xF,0x84,0x4E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A61F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4C,eax	; 8040A623 
	DB 0xB8,0x4C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A628 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A62C E8 71 B6 FF FF 
;/	3D OP1@	1+ C!  \ cmp	$X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A631 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3D,eax	; 8040A635 
	DB 0xB8,0x3D,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A63A 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A63E 
	DB 0x48,0x8D,0x5,0x10,0xB4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A645 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A648 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040A64C E8 2A 9E FF FF 
	call	_Csave	; 8040A651 E8 7F 9B FF FF 
;/	M\ 4D DTST
;/*	mov	rax,-0x08(rbp)	; 8040A656 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4D,eax	; 8040A65A 
	DB 0xB8,0x4D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A65F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A663 E8 3A B6 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A668 
	DB 0xE9,0x73,0xDF,0xFF,0xFF
;/
;/OP1@ C@ FE AND 34 XOR    \ xor $0x48,%al|eax
;/*	mov	rax,-0x08(rbp)	; 8040A66D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A671 
	DB 0x48,0x8D,0x5,0xDD,0xB3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A678 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A67B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040A67F E8 49 9B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A684 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFE,eax	; 8040A688 
	DB 0xB8,0xFE,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A68D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A691 E8 4C 9D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A696 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x34,eax	; 8040A69A 
	DB 0xB8,0x34,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A69F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A6A3 E8 4C 9D FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR \ mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A6A8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A6AC 
	DB 0x48,0x8D,0x5,0x95,0xB3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A6B3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A6B6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A6BA E8 7 9B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A6BF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A6C3 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A6C8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A6CC E8 11 9D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A6D1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040A6D5 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A6DA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A6DE E8 11 9D FF FF 
;/ OR  0=
	call	_OR	; 8040A6E3 E8 3 9D FF FF 
	call	_0equ	; 8040A6E8 E8 55 9C FF FF 
;/ M_WL  M\ 56 DTST
	test	rax,rax	; 8040A6ED 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A6F0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A6F4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x217B 	; 8040A6F8 
	DB 0xF,0x84,0x49,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A6FE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x56,eax	; 8040A702 
	DB 0xB8,0x56,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A707 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A70B E8 92 B5 FF FF 
;/	08 OP1@	XOR! \ cmp    $0x48,%al|eax	
;/*	mov	rax,-0x08(rbp)	; 8040A710 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 8040A714 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A719 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A71D 
	DB 0x48,0x8D,0x5,0x31,0xB3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A724 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A727 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040A72B E8 2D 9B FF FF 
;/	M\ 57 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A730 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x57,eax	; 8040A734 
	DB 0xB8,0x57,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A739 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A73D E8 60 B5 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A742 
	DB 0xE9,0x99,0xDE,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND F08348 XOR \ xor	$-0x02,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A747 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A74B 
	DB 0x48,0x8D,0x5,0x3,0xB3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A752 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A755 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A759 E8 68 9A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A75E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A762 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A767 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A76B E8 72 9C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A770 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF08348,eax	; 8040A774 
	DB 0xB8,0x48,0x83,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A779 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A77D E8 72 9C FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR \ mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A782 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A786 
	DB 0x48,0x8D,0x5,0xBB,0xB2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A78D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A790 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A794 E8 2D 9A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A799 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A79D 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A7A2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A7A6 E8 37 9C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A7AB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040A7AF 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A7B4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A7B8 E8 37 9C FF FF 
;/ OR  0=
	call	_OR	; 8040A7BD E8 29 9C FF FF 
	call	_0equ	; 8040A7C2 E8 7B 9B FF FF 
;/ M_WL  M\ 56 DTST
	test	rax,rax	; 8040A7C7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A7CA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A7CE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x225A 	; 8040A7D2 
	DB 0xF,0x84,0x4E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A7D8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x56,eax	; 8040A7DC 
	DB 0xB8,0x56,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A7E1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A7E5 E8 B8 B4 FF FF 
;/	F8 OP1@ 2+ C! \ cmp    $-0x02,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A7EA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF8,eax	; 8040A7EE 
	DB 0xB8,0xF8,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A7F3 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A7F7 
	DB 0x48,0x8D,0x5,0x57,0xB2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A7FE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A801 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040A805 E8 6E 9C FF FF 
	call	_Csave	; 8040A80A E8 C6 99 FF FF 
;/	M\ 57 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A80F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x57,eax	; 8040A813 
	DB 0xB8,0x57,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A818 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A81C E8 81 B4 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A821 
	DB 0xE9,0xBA,0xDD,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 453348 XOR \ xor	-0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A826 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A82A 
	DB 0x48,0x8D,0x5,0x24,0xB2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A831 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A834 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A838 E8 89 99 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A83D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A841 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A846 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A84A E8 93 9B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A84F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453348,eax	; 8040A853 
	DB 0xB8,0x48,0x33,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A858 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A85C E8 93 9B FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR \ mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A861 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A865 
	DB 0x48,0x8D,0x5,0xDC,0xB1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A86C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A86F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A873 E8 4E 99 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A878 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A87C 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A881 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A885 E8 58 9B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A88A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040A88E 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A893 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A897 E8 58 9B FF FF 
;/ OR  0=
	call	_OR	; 8040A89C E8 4A 9B FF FF 
	call	_0equ	; 8040A8A1 E8 9C 9A FF FF 
;/ M_WL  M\ 58 DTST
	test	rax,rax	; 8040A8A6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A8A9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A8AD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2339 	; 8040A8B1 
	DB 0xF,0x84,0x4E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A8B7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58,eax	; 8040A8BB 
	DB 0xB8,0x58,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A8C0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A8C4 E8 D9 B3 FF FF 
;/	3B OP1@ 1+ C! \ cmp    -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A8C9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3B,eax	; 8040A8CD 
	DB 0xB8,0x3B,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A8D2 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A8D6 
	DB 0x48,0x8D,0x5,0x78,0xB1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A8DD 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A8E0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040A8E4 E8 92 9B FF FF 
	call	_Csave	; 8040A8E9 E8 E7 98 FF FF 
;/	
;/	M\ 59 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A8EE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x59,eax	; 8040A8F2 
	DB 0xB8,0x59,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A8F7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A8FB E8 A2 B3 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A900 
	DB 0xE9,0xDB,0xDC,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND F0894C XOR \ mov	%r14,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A905 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A909 
	DB 0x48,0x8D,0x5,0x45,0xB1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A910 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A913 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A917 E8 AA 98 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A91C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A920 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A925 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A929 E8 B4 9A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A92E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0894C,eax	; 8040A932 
	DB 0xB8,0x4C,0x89,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A937 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A93B E8 B4 9A FF FF 
;/OP0@ L@ FFFFFF AND 458948 XOR \ mov	%rax,-8(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040A940 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A944 
	DB 0x48,0x8D,0x5,0xFD,0xB0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A94B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A94E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040A952 E8 6F 98 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A957 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040A95B 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A960 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040A964 E8 79 9A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040A969 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040A96D 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A972 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040A976 E8 79 9A FF FF 
;/ OR  0=
	call	_OR	; 8040A97B E8 6B 9A FF FF 
	call	_0equ	; 8040A980 E8 BD 99 FF FF 
;/ M_WL  M\ 74 DTST
	test	rax,rax	; 8040A985 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A988 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A98C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2413 	; 8040A990 
	DB 0xF,0x84,0x49,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A996 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x74,eax	; 8040A99A 
	DB 0xB8,0x74,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A99F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A9A3 E8 FA B2 FF FF 
;/	300004 OP0@ XOR! \ mov	%r14,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040A9A8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x300004,eax	; 8040A9AC 
	DB 0xB8,0x4,0x0,0x30,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A9B1 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040A9B5 
	DB 0x48,0x8D,0x5,0x8C,0xB0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A9BC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A9BF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040A9C3 E8 95 98 FF FF 
;/	M\ 75 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A9C8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x75,eax	; 8040A9CC 
	DB 0xB8,0x75,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A9D1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A9D5 E8 C8 B2 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A9DA 
	DB 0xE9,0x1,0xDC,0xFF,0xFF
;/
;/OP1@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040A9DF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040A9E3 
	DB 0x48,0x8D,0x5,0x6B,0xB0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A9EA 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A9ED 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040A9F1 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A9F6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040A9FA E8 1C 9A FF FF 
	call	_Cload	; 8040A9FF E8 C9 97 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AA04 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AA08 
	DB 0x48,0x8D,0x5,0x39,0xB0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AA0F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AA12 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040AA16 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AA1B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040AA1F E8 F7 99 FF FF 
	call	_Cload	; 8040AA24 E8 A4 97 FF FF 
	call	_XOR	; 8040AA29 E8 C6 99 FF FF 
;/OP1@ L@ FFFFFF AND 558948 XOR OR \      mov     %rdx,X(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040AA2E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AA32 
	DB 0x48,0x8D,0x5,0x1C,0xB0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AA39 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AA3C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AA40 E8 81 97 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AA45 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040AA49 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AA4E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040AA52 E8 8B 99 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AA57 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558948,eax	; 8040AA5B 
	DB 0xB8,0x48,0x89,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AA60 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AA64 E8 8B 99 FF FF 
	call	_OR	; 8040AA69 E8 7D 99 FF FF 
;/OP0@ L@ ADD|OR|AND|XOR<> OR \     __  X(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AA6E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AA72 
	DB 0x48,0x8D,0x5,0xCF,0xAF,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AA79 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AA7C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AA80 E8 41 97 FF FF 
	call	_ADDlORlANDlXORlessgreat	; 8040AA85 E8 90 BA FF FF 
	call	_OR	; 8040AA8A E8 5C 99 FF FF 
;/0= M_WL  M\ 5A DTST
	call	_0equ	; 8040AA8F E8 AE 98 FF FF 
	test	rax,rax	; 8040AA94 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040AA97 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040AA9B 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2560 	; 8040AA9F 
	DB 0xF,0x84,0x87,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AAA5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5A,eax	; 8040AAA9 
	DB 0xB8,0x5A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AAAE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AAB2 E8 EB B1 FF FF 
;/	2 OP0@ 1+ XOR!
;/*	mov	rax,-0x08(rbp)	; 8040AAB7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040AABB 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AAC0 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AAC4 
	DB 0x48,0x8D,0x5,0x7D,0xAF,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AACB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AACE 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040AAD2 E8 A4 99 FF FF 
	call	_XORsave	; 8040AAD7 E8 81 97 FF FF 
;/	D0 OP0@ 2+ C!	\ add    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AADC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD0,eax	; 8040AAE0 
	DB 0xB8,0xD0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AAE5 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AAE9 
	DB 0x48,0x8D,0x5,0x58,0xAF,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AAF0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AAF3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040AAF7 E8 7C 99 FF FF 
	call	_Csave	; 8040AAFC E8 D4 96 FF FF 
;/        -1 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040AB01 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040AB05 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040AB0C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040AB10 E8 38 A1 FF FF 
;/	M\ 5B DTST
;/*	mov	rax,-0x08(rbp)	; 8040AB15 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5B,eax	; 8040AB19 
	DB 0xB8,0x5B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB1E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AB22 E8 7B B1 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AB27 
	DB 0xE9,0xB4,0xDA,0xFF,0xFF
;/
;/OP1@ NEWRAX0
;/*	mov	rax,-0x08(rbp)	; 8040AB2C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AB30 
	DB 0x48,0x8D,0x5,0x1E,0xAF,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AB37 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB3A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0	; 8040AB3E E8 49 C7 FF FF 
;/OP1@ L@ C0BE0F48 <> AND \  movsbq	%al,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AB43 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AB47 
	DB 0x48,0x8D,0x5,0x7,0xAF,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AB4E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB51 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AB55 E8 6C 96 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AB5A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0BE0F48,eax	; 8040AB5E 
	DB 0xB8,0x48,0xF,0xBE,0xC0
;/*	lea	-0x08(rbp),rbp	; 8040AB63 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040AB67 E8 2D 98 FF FF 
	call	_AND	; 8040AB6C E8 71 98 FF FF 
;/OP0@ NEWRAX0+
;/*	mov	rax,-0x08(rbp)	; 8040AB71 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AB75 
	DB 0x48,0x8D,0x5,0xCC,0xAE,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AB7C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB7F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040AB83 E8 F3 C8 FF FF 
;/OP0@ L@ FFFFFF AND C01948 <> AND OR \  sbb     %rax,%rax        
;/*	mov	rax,-0x08(rbp)	; 8040AB88 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AB8C 
	DB 0x48,0x8D,0x5,0xB5,0xAE,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AB93 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB96 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AB9A E8 27 96 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AB9F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040ABA3 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ABA8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040ABAC E8 31 98 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040ABB1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC01948,eax	; 8040ABB5 
	DB 0xB8,0x48,0x19,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ABBA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040ABBE E8 D6 97 FF FF 
	call	_AND	; 8040ABC3 E8 1A 98 FF FF 
	call	_OR	; 8040ABC8 E8 1E 98 FF FF 
;/0= M_WL  M\ 68 DTST
	call	_0equ	; 8040ABCD E8 70 97 FF FF 
	test	rax,rax	; 8040ABD2 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040ABD5 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040ABD9 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2654 	; 8040ABDD 
	DB 0xF,0x84,0x3D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040ABE3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x68,eax	; 8040ABE7 
	DB 0xB8,0x68,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ABEC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040ABF0 E8 AD B0 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040ABF5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040ABF9 
	DB 0x48,0x8D,0x5,0xE0,0xAC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040AC00 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040AC04 E8 8C B6 FF FF 
;/	M\ 69 DTST
;/*	mov	rax,-0x08(rbp)	; 8040AC09 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x69,eax	; 8040AC0D 
	DB 0xB8,0x69,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AC12 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AC16 E8 87 B0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AC1B 
	DB 0xE9,0xC0,0xD9,0xFF,0xFF
;/
;/OP1@ L@ 00048d48 XOR \      lea     (%rax,%rax,1),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AC20 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AC24 
	DB 0x48,0x8D,0x5,0x2A,0xAE,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AC2B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AC32 E8 8F 95 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AC37 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48D48,eax	; 8040AC3B 
	DB 0xB8,0x48,0x8D,0x4,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AC40 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AC44 E8 AB 97 FF FF 
;/OP0@ L@ 00048d48 XOR \      lea     (%rax,%rax,1),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AC49 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AC4D 
	DB 0x48,0x8D,0x5,0xF4,0xAD,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AC54 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AC57 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AC5B E8 66 95 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AC60 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48D48,eax	; 8040AC64 
	DB 0xB8,0x48,0x8D,0x4,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AC69 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AC6D E8 82 97 FF FF 
;/OR 0= M_WL  M\ 6A DTST
	call	_OR	; 8040AC72 E8 74 97 FF FF 
	call	_0equ	; 8040AC77 E8 C6 96 FF FF 
	test	rax,rax	; 8040AC7C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040AC7F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040AC83 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2732 	; 8040AC87 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AC8D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6A,eax	; 8040AC91 
	DB 0xB8,0x6A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AC96 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AC9A E8 3 B0 FF FF 
;/        02e0c148 OP1@ L! \ shl    $0x2,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AC9F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E0C148,eax	; 8040ACA3 
	DB 0xB8,0x48,0xC1,0xE0,0x2
;/*	mov	rax,-0x10(rbp)	; 8040ACA8 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040ACAC 
	DB 0x48,0x8D,0x5,0xA2,0xAD,0xFF,0xFF
;/*	mov	(rax),rax	; 8040ACB3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040ACB6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 8040ACBA E8 33 95 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040ACBF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040ACC3 
	DB 0x48,0x8D,0x5,0x16,0xAC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ACCA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040ACCE E8 80 AE FF FF 
;/        -4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040ACD3 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040ACD7 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ACDE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040ACE2 E8 66 9F FF FF 
;/	M\ 6B DTST
;/*	mov	rax,-0x08(rbp)	; 8040ACE7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6B,eax	; 8040ACEB 
	DB 0xB8,0x6B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ACF0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040ACF4 E8 A9 AF FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040ACF9 
	DB 0xE9,0xE2,0xD8,0xFF,0xFF
;/
;/OP1@ L@ 02e0c148 XOR \       shl    $0x2,%rax
;/*	mov	rax,-0x08(rbp)	; 8040ACFE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AD02 
	DB 0x48,0x8D,0x5,0x4C,0xAD,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AD09 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD0C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AD10 E8 B1 94 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AD15 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E0C148,eax	; 8040AD19 
	DB 0xB8,0x48,0xC1,0xE0,0x2
;/*	lea	-0x08(rbp),rbp	; 8040AD1E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AD22 E8 CD 96 FF FF 
;/OP0@ L@ 00048d48 XOR \      lea     (%rax,%rax,1),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AD27 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AD2B 
	DB 0x48,0x8D,0x5,0x16,0xAD,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AD32 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD35 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AD39 E8 88 94 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AD3E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48D48,eax	; 8040AD42 
	DB 0xB8,0x48,0x8D,0x4,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD47 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AD4B E8 A4 96 FF FF 
;/OR 0= M_WL  M\ 6C DTST
	call	_OR	; 8040AD50 E8 96 96 FF FF 
	call	_0equ	; 8040AD55 E8 E8 95 FF FF 
	test	rax,rax	; 8040AD5A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040AD5D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040AD61 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2810 	; 8040AD65 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AD6B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6C,eax	; 8040AD6F 
	DB 0xB8,0x6C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD74 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AD78 E8 25 AF FF FF 
;/        03e0c148 OP1@ L! \ shl    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AD7D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3E0C148,eax	; 8040AD81 
	DB 0xB8,0x48,0xC1,0xE0,0x3
;/*	mov	rax,-0x10(rbp)	; 8040AD86 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AD8A 
	DB 0x48,0x8D,0x5,0xC4,0xAC,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AD91 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AD94 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 8040AD98 E8 55 94 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040AD9D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040ADA1 
	DB 0x48,0x8D,0x5,0x38,0xAB,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ADA8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040ADAC E8 A2 AD FF FF 
;/        -4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040ADB1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040ADB5 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ADBC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040ADC0 E8 88 9E FF FF 
;/	M\ 6D DTST
;/*	mov	rax,-0x08(rbp)	; 8040ADC5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D,eax	; 8040ADC9 
	DB 0xB8,0x6D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ADCE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040ADD2 E8 CB AE FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040ADD7 
	DB 0xE9,0x4,0xD8,0xFF,0xFF
;/OP1@ 3 + C@ OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040ADDC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040ADE0 
	DB 0x48,0x8D,0x5,0x6E,0xAC,0xFF,0xFF
;/*	mov	(rax),rax	; 8040ADE7 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040ADEA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040ADEE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040ADF3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040ADF7 E8 1F 96 FF FF 
	call	_Cload	; 8040ADFC E8 CC 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AE01 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AE05 
	DB 0x48,0x8D,0x5,0x3C,0xAC,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AE0C 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AE0F 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040AE13 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AE18 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040AE1C E8 FA 95 FF FF 
	call	_Cload	; 8040AE21 E8 A7 93 FF FF 
	call	_XOR	; 8040AE26 E8 C9 95 FF FF 
;/OP1@ @ FFFFFF AND 45c748 XOR OR \ movq    $X,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040AE2B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AE2F 
	DB 0x48,0x8D,0x5,0x1F,0xAC,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AE36 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE39 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040AE3D E8 87 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AE42 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040AE46 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE4B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040AE4F E8 8E 95 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AE54 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C748,eax	; 8040AE58 
	DB 0xB8,0x48,0xC7,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE5D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AE61 E8 8E 95 FF FF 
	call	_OR	; 8040AE66 E8 80 95 FF FF 
;/OP0@ @ FFFFFF AND 453348 XOR OR \ xor     -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AE6B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AE6F 
	DB 0x48,0x8D,0x5,0xD2,0xAB,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AE76 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE79 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040AE7D E8 47 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AE82 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040AE86 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE8B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040AE8F E8 4E 95 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AE94 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453348,eax	; 8040AE98 
	DB 0xB8,0x48,0x33,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE9D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AEA1 E8 4E 95 FF FF 
	call	_OR	; 8040AEA6 E8 40 95 FF FF 
;/0= M_WL  M\ 80 DTST
	call	_0equ	; 8040AEAB E8 92 94 FF FF 
	test	rax,rax	; 8040AEB0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040AEB3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040AEB7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2996 	; 8040AEBB 
	DB 0xF,0x84,0xA1,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AEC1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 8040AEC5 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AECA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AECE E8 CF AD FF FF 
;/	35 OP0@	1+ C! \  xor    $X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AED3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x35,eax	; 8040AED7 
	DB 0xB8,0x35,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AEDC 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AEE0 
	DB 0x48,0x8D,0x5,0x61,0xAB,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AEE7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AEEA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040AEEE E8 88 95 FF FF 
	call	_Csave	; 8040AEF3 E8 DD 92 FF FF 
;/	OP1@ 4 + L@ OP0@ 2+ L! \  xor    $X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AEF8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AEFC 
	DB 0x48,0x8D,0x5,0x52,0xAB,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AF03 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AF06 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040AF0A 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AF0F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040AF13 E8 3 95 FF FF 
	call	_Lload	; 8040AF18 E8 A9 92 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AF1D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040AF21 
	DB 0x48,0x8D,0x5,0x20,0xAB,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AF28 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AF2B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040AF2F E8 44 95 FF FF 
	call	_Lsave	; 8040AF34 E8 B9 92 FF FF 
;/	2 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040AF39 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040AF3D 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AF42 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040AF46 E8 2 9D FF FF 
;/	M\ 81 DTST
;/*	mov	rax,-0x08(rbp)	; 8040AF4B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x81,eax	; 8040AF4F 
	DB 0xB8,0x81,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AF54 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AF58 E8 45 AD FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AF5D 
	DB 0xE9,0x7E,0xD6,0xFF,0xFF
;/
;/  OP2 @ DUP :-SET U< IF DROP BREAK TO OP2@
;/*	mov	rax,-0x08(rbp)	; 8040AF62 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040AF66 
	DB 0x48,0x8D,0x5,0x7B,0xA9,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040AF6D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040AF71 E8 53 92 FF FF 
	call	_DUP	; 8040AF76 E8 AD 95 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AF7B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 8040AF7F 
	DB 0x48,0x8D,0x5,0x77,0xAA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AF86 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AF89 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8040AF8D E8 2A 94 FF FF 
	test	rax,rax	; 8040AF92 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040AF95 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040AF99 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x29DD 	; 8040AF9D 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 8040AFA3 E8 8B 91 FF FF 
	ret		; 8040AFA8 C3 
;/*	mov	rax,-0x08(rbp)	; 8040AFA9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040AFAD 
	DB 0x48,0x8D,0x5,0xAE,0xAA,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040AFB4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040AFB8 E8 43 92 FF FF 
;/
;/OP2@ L@ FFFFFF AND d8f748 XOR	\ negq    %rax
;/*	mov	rax,-0x08(rbp)	; 8040AFBD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040AFC1 
	DB 0x48,0x8D,0x5,0x9A,0xAA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AFC8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AFCB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040AFCF E8 F2 91 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AFD4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040AFD8 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AFDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040AFE1 E8 FC 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040AFE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD8F748,eax	; 8040AFEA 
	DB 0xB8,0x48,0xF7,0xD8,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AFEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040AFF3 E8 FC 93 FF FF 
;/OP1@ L@ FFFFFF AND 450348 XOR OR \ add     -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AFF8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040AFFC 
	DB 0x48,0x8D,0x5,0x52,0xAA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B003 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B006 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B00A E8 B7 91 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B00F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B013 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B018 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B01C E8 C1 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B021 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x450348,eax	; 8040B025 
	DB 0xB8,0x48,0x3,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B02A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B02E E8 C1 93 FF FF 
	call	_OR	; 8040B033 E8 B3 93 FF FF 
;/OP0@ L@ FFFFFF AND d8f748 XOR OR \ negq    %rax
;/*	mov	rax,-0x08(rbp)	; 8040B038 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B03C 
	DB 0x48,0x8D,0x5,0x5,0xAA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B043 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B046 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B04A E8 77 91 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B04F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B053 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B058 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B05C E8 81 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B061 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD8F748,eax	; 8040B065 
	DB 0xB8,0x48,0xF7,0xD8,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B06A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B06E E8 81 93 FF FF 
	call	_OR	; 8040B073 E8 73 93 FF FF 
;/  0=
	call	_0equ	; 8040B078 E8 C5 92 FF FF 
;/ M_WL  M\ 1E DTST
	test	rax,rax	; 8040B07D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B080 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B084 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2B4C 	; 8040B088 
	DB 0xF,0x84,0x8A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B08E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1E,eax	; 8040B092 
	DB 0xB8,0x1E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B097 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B09B E8 2 AC FF FF 
;/	28 OP1@ 1+ XOR!  \	sub    -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B0A0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x28,eax	; 8040B0A4 
	DB 0xB8,0x28,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B0A9 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B0AD 
	DB 0x48,0x8D,0x5,0xA1,0xA9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B0B4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B0B7 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040B0BB E8 BB 93 FF FF 
	call	_XORsave	; 8040B0C0 E8 98 91 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040B0C5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040B0C9 
	DB 0x48,0x8D,0x5,0x18,0xA8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B0D0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B0D4 E8 BC B1 FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040B0D9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040B0DD 
	DB 0x48,0x8D,0x5,0xFC,0xA7,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B0E4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040B0E8 E8 66 AA FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040B0ED 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 8040B0F1 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B0F8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040B0FC E8 4C 9B FF FF 
;/	M\ 1F DTST
;/*	mov	rax,-0x08(rbp)	; 8040B101 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1F,eax	; 8040B105 
	DB 0xB8,0x1F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B10A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B10E E8 8F AB FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B113 
	DB 0xE9,0xC8,0xD4,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND 058d48 XOR	\ lea     X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B118 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B11C 
	DB 0x48,0x8D,0x5,0x3F,0xA9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B123 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B126 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B12A E8 97 90 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B12F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B133 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B138 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B13C E8 A1 92 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B141 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D48,eax	; 8040B145 
	DB 0xB8,0x48,0x8D,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B14A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B14E E8 A1 92 FF FF 
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040B153 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B157 
	DB 0x48,0x8D,0x5,0xF7,0xA8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B15E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B161 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B165 E8 5C 90 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B16A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B16E 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B173 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B177 E8 66 92 FF FF 
;/DUP	108948 XOR		\ mov     %rdx,(%rax)
	call	_DUP	; 8040B17C E8 A7 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B181 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x108948,eax	; 8040B185 
	DB 0xB8,0x48,0x89,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B18A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B18E E8 61 92 FF FF 
;/SWAP	100148 <> AND OR	\ add     %rdx,(%rax)
	call	_SWAP	; 8040B193 E8 AA 93 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B198 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x100148,eax	; 8040B19C 
	DB 0xB8,0x48,0x1,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B1A1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040B1A5 E8 EF 91 FF FF 
	call	_AND	; 8040B1AA E8 33 92 FF FF 
	call	_OR	; 8040B1AF E8 37 92 FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B1B4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B1B8 
	DB 0x48,0x8D,0x5,0x89,0xA8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B1BF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B1C2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B1C6 E8 FB 8F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B1CB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B1CF 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B1D4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B1D8 E8 5 92 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B1DD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040B1E1 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B1E6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B1EA E8 5 92 FF FF 
	call	_OR	; 8040B1EF E8 F7 91 FF FF 
;/  0=
	call	_0equ	; 8040B1F4 E8 49 91 FF FF 
;/ M_WL  M\ 3C DTST
	test	rax,rax	; 8040B1F9 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B1FC 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B200 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2CC5 	; 8040B204 
	DB 0xF,0x84,0x87,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B20A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3C,eax	; 8040B20E 
	DB 0xB8,0x3C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B213 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B217 E8 86 AA FF FF 
;/	OP1@ 1+ W@ 0500 XOR OP2@ 1+ W!	\ mov    %rdx,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040B21C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B220 
	DB 0x48,0x8D,0x5,0x2E,0xA8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B227 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B22A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040B22E E8 48 92 FF FF 
	call	_Wload	; 8040B233 E8 99 8F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B238 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x500,eax	; 8040B23C 
	DB 0xB8,0x0,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B241 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B245 E8 AA 91 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B24A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B24E 
	DB 0x48,0x8D,0x5,0xD,0xA8,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B255 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B258 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040B25C E8 1A 92 FF FF 
	call	_Wsave	; 8040B261 E8 7D 8F FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040B266 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040B26A 
	DB 0x48,0x8D,0x5,0x6F,0xA6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B271 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B275 E8 1B B0 FF FF 
;/	M\ 3D DTST
;/*	mov	rax,-0x08(rbp)	; 8040B27A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3D,eax	; 8040B27E 
	DB 0xB8,0x3D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B283 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B287 E8 16 AA FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B28C 
	DB 0xE9,0x4F,0xD3,0xFF,0xFF
;/OP2@ L@ FFFFFF AND c28948 XOR	\ mov     %rax,%rdx       # 80404e9d
;/*	mov	rax,-0x08(rbp)	; 8040B291 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B295 
	DB 0x48,0x8D,0x5,0xC6,0xA7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B29C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B29F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B2A3 E8 1E 8F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B2A8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B2AC 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B2B1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B2B5 E8 28 91 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B2BA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC28948,eax	; 8040B2BE 
	DB 0xB8,0x48,0x89,0xC2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B2C3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B2C7 E8 28 91 FF FF 
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040B2CC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B2D0 
	DB 0x48,0x8D,0x5,0x7E,0xA7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B2D7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B2DA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B2DE E8 E3 8E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B2E3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B2E7 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B2EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B2F0 E8 ED 90 FF FF 
;/DUP	158948 XOR		\ mov     %rdx,X (%rip)
	call	_DUP	; 8040B2F5 E8 2E 92 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B2FA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x158948,eax	; 8040B2FE 
	DB 0xB8,0x48,0x89,0x15,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B303 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B307 E8 E8 90 FF FF 
;/SWAP	150148 <>  AND OR	\ add     %rdx,X (%rip)
	call	_SWAP	; 8040B30C E8 31 92 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B311 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x150148,eax	; 8040B315 
	DB 0xB8,0x48,0x1,0x15,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B31A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040B31E E8 76 90 FF FF 
	call	_AND	; 8040B323 E8 BA 90 FF FF 
	call	_OR	; 8040B328 E8 BE 90 FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x10(%rbp),%rax        # 8
;/*	mov	rax,-0x08(rbp)	; 8040B32D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B331 
	DB 0x48,0x8D,0x5,0x10,0xA7,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B338 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B33B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B33F E8 82 8E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B344 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B348 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B34D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B351 E8 8C 90 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B356 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040B35A 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B35F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B363 E8 8C 90 FF FF 
	call	_OR	; 8040B368 E8 7E 90 FF FF 
;/  0=
	call	_0equ	; 8040B36D E8 D0 8F FF FF 
;/ M_WL  M\ 3E DTST
	test	rax,rax	; 8040B372 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B375 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B379 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2E5D 	; 8040B37D 
	DB 0xF,0x84,0xA6,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B383 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3E,eax	; 8040B387 
	DB 0xB8,0x3E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B38C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B390 E8 D A9 FF FF 
;/	05 OP1@ 2+ C!	\	mov    %rax,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040B395 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 8040B399 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B39E 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B3A2 
	DB 0x48,0x8D,0x5,0xAC,0xA6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B3A9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B3AC 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040B3B0 E8 C3 90 FF FF 
	call	_Csave	; 8040B3B5 E8 1B 8E FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040B3BA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040B3BE 
	DB 0x48,0x8D,0x5,0x23,0xA5,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B3C5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B3C9 E8 C7 AE FF FF 
;/	OP0 3 OPinsert
;/*	mov	rax,-0x08(rbp)	; 8040B3CE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040B3D2 
	DB 0x48,0x8D,0x5,0xFF,0xA4,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040B3D9 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B3DD 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B3E2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 8040B3E6 E8 D5 AD FF FF 
;/	C289 OP1 @ 1+ W!
;/*	mov	rax,-0x08(rbp)	; 8040B3EB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC289,eax	; 8040B3EF 
	DB 0xB8,0x89,0xC2,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B3F4 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040B3F8 
	DB 0x48,0x8D,0x5,0xE1,0xA4,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040B3FF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040B403 E8 C1 8D FF FF 
	call	_CHARadd	; 8040B408 E8 6E 90 FF FF 
	call	_Wsave	; 8040B40D E8 D1 8D FF FF 
;/	M\ 3F DTST
;/*	mov	rax,-0x08(rbp)	; 8040B412 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3F,eax	; 8040B416 
	DB 0xB8,0x3F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B41B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B41F E8 7E A8 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B424 
	DB 0xE9,0xB7,0xD1,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND F0894C XOR	\ mov	%r14,%rax
;/*	mov	rax,-0x08(rbp)	; 8040B429 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B42D 
	DB 0x48,0x8D,0x5,0x2E,0xA6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B434 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B437 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B43B E8 86 8D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B440 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B444 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B449 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B44D E8 90 8F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B452 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0894C,eax	; 8040B456 
	DB 0xB8,0x4C,0x89,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B45B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B45F E8 90 8F FF FF 
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040B464 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B468 
	DB 0x48,0x8D,0x5,0xE6,0xA5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B46F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B472 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B476 E8 4B 8D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B47B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B47F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B484 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B488 E8 55 8F FF FF 
;/DUP	108948 XOR		\ mov	%rdx,(%rax)
	call	_DUP	; 8040B48D E8 96 90 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B492 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x108948,eax	; 8040B496 
	DB 0xB8,0x48,0x89,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B49B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B49F E8 50 8F FF FF 
;/SWAP	100148 <> AND OR	\ add	%rdx,(%rax)
	call	_SWAP	; 8040B4A4 E8 99 90 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B4A9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x100148,eax	; 8040B4AD 
	DB 0xB8,0x48,0x1,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B4B2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040B4B6 E8 DE 8E FF FF 
	call	_AND	; 8040B4BB E8 22 8F FF FF 
	call	_OR	; 8040B4C0 E8 26 8F FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov	-8(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B4C5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B4C9 
	DB 0x48,0x8D,0x5,0x78,0xA5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B4D0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B4D3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B4D7 E8 EA 8C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B4DC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B4E0 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B4E5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B4E9 E8 F4 8E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B4EE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040B4F2 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B4F7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B4FB E8 F4 8E FF FF 
	call	_OR	; 8040B500 E8 E6 8E FF FF 
;/  0=
	call	_0equ	; 8040B505 E8 38 8E FF FF 
;/ M_WL  M\ 6E DTST
	test	rax,rax	; 8040B50A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B50D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B511 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2FAC 	; 8040B515 
	DB 0xF,0x84,0x5D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B51B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6E,eax	; 8040B51F 
	DB 0xB8,0x6E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B524 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B528 E8 75 A7 FF FF 
;/	060001 OP1@ XOR!	\ mov	%rdx,(%r14)
;/*	mov	rax,-0x08(rbp)	; 8040B52D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x60001,eax	; 8040B531 
	DB 0xB8,0x1,0x0,0x6,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B536 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B53A 
	DB 0x48,0x8D,0x5,0x14,0xA5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B541 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B544 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040B548 E8 10 8D FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040B54D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040B551 
	DB 0x48,0x8D,0x5,0x90,0xA3,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B558 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B55C E8 34 AD FF FF 
;/	M\ 6F DTST
;/*	mov	rax,-0x08(rbp)	; 8040B561 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6F,eax	; 8040B565 
	DB 0xB8,0x6F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B56A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B56E E8 2F A7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B573 
	DB 0xE9,0x68,0xD0,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B578 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B57C 
	DB 0x48,0x8D,0x5,0xDF,0xA4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B583 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B586 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B58A 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B58F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040B593 E8 83 8E FF FF 
	call	_Cload	; 8040B598 E8 30 8C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B59D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B5A1 
	DB 0x48,0x8D,0x5,0xA0,0xA4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B5A8 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B5AB 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B5AF 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B5B4 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040B5B8 E8 5E 8E FF FF 
	call	_Cload	; 8040B5BD E8 B 8C FF FF 
	call	_XOR	; 8040B5C2 E8 2D 8E FF FF 
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov	%rax,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040B5C7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B5CB 
	DB 0x48,0x8D,0x5,0x90,0xA4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B5D2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B5D5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B5D9 E8 E8 8B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B5DE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B5E2 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B5E7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B5EB E8 F2 8D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B5F0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040B5F4 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B5F9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B5FD E8 F2 8D FF FF 
	call	_OR	; 8040B602 E8 E4 8D FF FF 
;/OP1@ L@ FFFFFF AND 058b48 XOR OR \ mov	LASTsubHERE+0xd (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B607 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B60B 
	DB 0x48,0x8D,0x5,0x43,0xA4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B612 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B615 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B619 E8 A8 8B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B61E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B622 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B627 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B62B E8 B2 8D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B630 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58B48,eax	; 8040B634 
	DB 0xB8,0x48,0x8B,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B639 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B63D E8 B2 8D FF FF 
	call	_OR	; 8040B642 E8 A4 8D FF FF 
;/OP0@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040B647 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B64B 
	DB 0x48,0x8D,0x5,0xF6,0xA3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B652 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B655 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040B659 E8 68 8B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B65E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B662 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B667 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B66B E8 72 8D FF FF 
;/DUP 453348 XOR		\ xor	-0x10(%rbp),%rax
	call	_DUP	; 8040B670 E8 B3 8E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B675 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453348,eax	; 8040B679 
	DB 0xB8,0x48,0x33,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B67E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B682 E8 6D 8D FF FF 
;/SWAP 453948 <> AND OR	\ cmp	-0x10(%rbp),%rax \ !!
	call	_SWAP	; 8040B687 E8 B6 8E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B68C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453948,eax	; 8040B690 
	DB 0xB8,0x48,0x39,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B695 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040B699 E8 FB 8C FF FF 
	call	_AND	; 8040B69E E8 3F 8D FF FF 
	call	_OR	; 8040B6A3 E8 43 8D FF FF 
;/0= M_WL M\ 28 DTST
	call	_0equ	; 8040B6A8 E8 95 8C FF FF 
	test	rax,rax	; 8040B6AD 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B6B0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B6B4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x31B5 	; 8040B6B8 
	DB 0xF,0x84,0xC3,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B6BE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x28,eax	; 8040B6C2 
	DB 0xB8,0x28,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B6C7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B6CB E8 D2 A5 FF FF 
;/	OP0@ 1+ C@ DUP 39 = IF 2 XOR THEN
;/*	mov	rax,-0x08(rbp)	; 8040B6D0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B6D4 
	DB 0x48,0x8D,0x5,0x6D,0xA3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B6DB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B6DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040B6E2 E8 94 8D FF FF 
	call	_Cload	; 8040B6E7 E8 E1 8A FF FF 
	call	_DUP	; 8040B6EC E8 37 8E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B6F1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x39,eax	; 8040B6F5 
	DB 0xB8,0x39,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B6FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 8040B6FE E8 37 8C FF FF 
	test	rax,rax	; 8040B703 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B706 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B70A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x315A 	; 8040B70E 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B714 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040B718 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B71D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B721 E8 CE 8C FF FF 
;/	OP1@ 1+ C! \	xor    -0x1b8(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B726 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B72A 
	DB 0x48,0x8D,0x5,0x24,0xA3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B731 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B734 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040B738 E8 3E 8D FF FF 
	call	_Csave	; 8040B73D E8 93 8A FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040B742 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040B746 
	DB 0x48,0x8D,0x5,0x93,0xA1,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B74D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040B751 E8 FD A3 FF FF 
;/	-4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040B756 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040B75A 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B761 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040B765 E8 E3 94 FF FF 
;/	M\ 29 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B76A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x29,eax	; 8040B76E 
	DB 0xB8,0x29,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B773 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B777 E8 26 A5 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B77C 
	DB 0xE9,0x5F,0xCE,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B781 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B785 
	DB 0x48,0x8D,0x5,0xD6,0xA2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B78C 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B78F 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B793 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B798 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040B79C E8 7A 8C FF FF 
	call	_Cload	; 8040B7A1 E8 27 8A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B7A6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B7AA 
	DB 0x48,0x8D,0x5,0x97,0xA2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B7B1 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B7B4 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B7B8 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B7BD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040B7C1 E8 55 8C FF FF 
	call	_Cload	; 8040B7C6 E8 2 8A FF FF 
	call	_XOR	; 8040B7CB E8 24 8C FF FF 
;/OP2@ @ FFFFFF AND 458948 XOR OR	\ mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040B7D0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B7D4 
	DB 0x48,0x8D,0x5,0x87,0xA2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B7DB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B7DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040B7E2 E8 E2 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B7E7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B7EB 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B7F0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B7F4 E8 E9 8B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B7F9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040B7FD 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B802 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B806 E8 E9 8B FF FF 
	call	_OR	; 8040B80B E8 DB 8B FF FF 
;/OP1@ @ FFFFFF AND 58b48 XOR OR	\ mov     X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B810 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B814 
	DB 0x48,0x8D,0x5,0x3A,0xA2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B81B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B81E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040B822 E8 A2 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B827 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B82B 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B830 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B834 E8 A9 8B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B839 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58B48,eax	; 8040B83D 
	DB 0xB8,0x48,0x8B,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B842 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B846 E8 A9 8B FF FF 
	call	_OR	; 8040B84B E8 9B 8B FF FF 
;/OP0@ @ FFFFFF AND 453b48 XOR OR	\ cmp     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B850 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B854 
	DB 0x48,0x8D,0x5,0xED,0xA1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B85B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B85E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040B862 E8 62 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B867 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B86B 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B870 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B874 E8 69 8B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B879 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453B48,eax	; 8040B87D 
	DB 0xB8,0x48,0x3B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B882 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B886 E8 69 8B FF FF 
	call	_OR	; 8040B88B E8 5B 8B FF FF 
;/0=	M_WL M\ 7E DTST
	call	_0equ	; 8040B890 E8 AD 8A FF FF 
	test	rax,rax	; 8040B895 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B898 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B89C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x338F 	; 8040B8A0 
	DB 0xF,0x84,0xB5,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B8A6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7E,eax	; 8040B8AA 
	DB 0xB8,0x7E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B8AF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B8B3 E8 EA A3 FF FF 
;/	OP1@ @	OP0@ ! \ удалять некорректно	
;/*	mov	rax,-0x08(rbp)	; 8040B8B8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B8BC 
	DB 0x48,0x8D,0x5,0x92,0xA1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B8C3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B8C6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040B8CA E8 FA 88 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B8CF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B8D3 
	DB 0x48,0x8D,0x5,0x6E,0xA1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B8DA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B8DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040B8E1 E8 1A 89 FF FF 
;/	-7 OP0@ 3+ L+!
;/*	mov	rax,-0x08(rbp)	; 8040B8E6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x7,rax	; 8040B8EA 
	DB 0x48,0xC7,0xC0,0xF9,0xFF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040B8F1 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B8F5 
	DB 0x48,0x8D,0x5,0x4C,0xA1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B8FC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B8FF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_3add	; 8040B903 E8 6D 8B FF FF 
	call	_Laddsave	; 8040B908 E8 22 89 FF FF 
;/	3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040B90D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040B911 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B916 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040B91A E8 2E 93 FF FF 
;/	39 OP1@ 1+ C!  \ cmp    %rax,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040B91F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x39,eax	; 8040B923 
	DB 0xB8,0x39,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B928 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B92C 
	DB 0x48,0x8D,0x5,0x22,0xA1,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B933 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B936 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040B93A E8 3C 8B FF FF 
	call	_Csave	; 8040B93F E8 91 88 FF FF 
;/	M\ 7F DTST
;/*	mov	rax,-0x08(rbp)	; 8040B944 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7F,eax	; 8040B948 
	DB 0xB8,0x7F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B94D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B951 E8 4C A3 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B956 
	DB 0xE9,0x85,0xCC,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B95B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B95F 
	DB 0x48,0x8D,0x5,0xFC,0xA0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B966 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B969 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B96D 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B972 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040B976 E8 A0 8A FF FF 
	call	_Cload	; 8040B97B E8 4D 88 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B980 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040B984 
	DB 0x48,0x8D,0x5,0xBD,0xA0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B98B 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B98E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040B992 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B997 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040B99B E8 7B 8A FF FF 
	call	_Cload	; 8040B9A0 E8 28 88 FF FF 
	call	_XOR	; 8040B9A5 E8 4A 8A FF FF 
;/OP2@ @ FFFFFF AND 458948 XOR OR	\ mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040B9AA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040B9AE 
	DB 0x48,0x8D,0x5,0xAD,0xA0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B9B5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B9B8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040B9BC E8 8 88 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B9C1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040B9C5 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B9CA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040B9CE E8 F 8A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B9D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040B9D7 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B9DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040B9E0 E8 F 8A FF FF 
	call	_OR	; 8040B9E5 E8 1 8A FF FF 
;/OP1@ @ FFFFFF AND F0894C XOR OR	\ mov     %r14,%rax
;/*	mov	rax,-0x08(rbp)	; 8040B9EA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040B9EE 
	DB 0x48,0x8D,0x5,0x60,0xA0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B9F5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B9F8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040B9FC E8 C8 87 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BA01 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BA05 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA0A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BA0E E8 CF 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BA13 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0894C,eax	; 8040BA17 
	DB 0xB8,0x4C,0x89,0xF0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA1C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BA20 E8 CF 89 FF FF 
	call	_OR	; 8040BA25 E8 C1 89 FF FF 
;/OP0@ @ FFFFFF AND 453b48 XOR OR	\ cmp     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040BA2A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040BA2E 
	DB 0x48,0x8D,0x5,0x13,0xA0,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BA35 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA38 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BA3C E8 88 87 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BA41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BA45 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA4A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BA4E E8 8F 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BA53 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453B48,eax	; 8040BA57 
	DB 0xB8,0x48,0x3B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA5C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BA60 E8 8F 89 FF FF 
	call	_OR	; 8040BA65 E8 81 89 FF FF 
;/0=  M_WL M\ 90 DTST
	call	_0equ	; 8040BA6A E8 D3 88 FF FF 
	test	rax,rax	; 8040BA6F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BA72 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BA76 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x3531 	; 8040BA7A 
	DB 0xF,0x84,0x7D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BA80 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x90,eax	; 8040BA84 
	DB 0xB8,0x90,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA89 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BA8D E8 10 A2 FF FF 
;/	c63949 OP1@ L! \ cmp    %rax,%r14
;/*	mov	rax,-0x08(rbp)	; 8040BA92 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC63949,eax	; 8040BA96 
	DB 0xB8,0x49,0x39,0xC6,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BA9B 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BA9F 
	DB 0x48,0x8D,0x5,0xAF,0x9F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BAA6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BAA9 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 8040BAAD E8 40 87 FF FF 
;/	F0894C OP0@ L! \ mov    %r14,%rax удалять некорректно	
;/*	mov	rax,-0x08(rbp)	; 8040BAB2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF0894C,eax	; 8040BAB6 
	DB 0xB8,0x4C,0x89,0xF0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BABB 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040BABF 
	DB 0x48,0x8D,0x5,0x82,0x9F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BAC6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BAC9 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 8040BACD E8 20 87 FF FF 
;/	-1 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040BAD2 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040BAD6 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BADD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040BAE1 E8 67 91 FF FF 
;/	M\ 91 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BAE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x91,eax	; 8040BAEA 
	DB 0xB8,0x91,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BAEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BAF3 E8 AA A1 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040BAF8 
	DB 0xE9,0xE3,0xCA,0xFF,0xFF
;/
;/J_COD F0 AND 80 XOR
;/*	mov	rax,-0x08(rbp)	; 8040BAFD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040BB01 
	DB 0x48,0x8D,0x5,0x6D,0x9D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BB08 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BB0B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xF0,eax	; 8040BB0F 
	DB 0xB8,0xF0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BB14 
	DB 0x48,0x8D,0x6D,0xF0
	call	_AND	; 8040BB18 E8 C5 88 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BB1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 8040BB21 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB26 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BB2A E8 C5 88 FF FF 
;/OP2@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BB2F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040BB33 
	DB 0x48,0x8D,0x5,0x28,0x9F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BB3A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB3D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040BB41 E8 80 86 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BB46 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BB4A 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB4F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BB53 E8 8A 88 FF FF 
;/DUP	453948 XOR \ cmp     %rax,-0x10(%rbp)
	call	_DUP	; 8040BB58 E8 CB 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BB5D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453948,eax	; 8040BB61 
	DB 0xB8,0x48,0x39,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB66 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BB6A E8 85 88 FF FF 
;/SWAP	053B48 XOR AND OR \ cmp     LASTsubHERE+0xd (%rip),%rax
	call	_SWAP	; 8040BB6F E8 CE 89 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BB74 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x53B48,eax	; 8040BB78 
	DB 0xB8,0x48,0x3B,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB7D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BB81 E8 6E 88 FF FF 
	call	_AND	; 8040BB86 E8 57 88 FF FF 
	call	_OR	; 8040BB8B E8 5B 88 FF FF 
;/OP1@ L@ FFFFFF AND c01948 XOR OR \ sbb	%rax,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BB90 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BB94 
	DB 0x48,0x8D,0x5,0xBA,0x9E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BB9B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB9E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040BBA2 E8 1F 86 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BBA7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BBAB 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BBB0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BBB4 E8 29 88 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BBB9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC01948,eax	; 8040BBBD 
	DB 0xB8,0x48,0x19,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BBC2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BBC6 E8 29 88 FF FF 
	call	_OR	; 8040BBCB E8 1B 88 FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov	-0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040BBD0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040BBD4 
	DB 0x48,0x8D,0x5,0x6D,0x9E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BBDB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BBDE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040BBE2 E8 DF 85 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BBE7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BBEB 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BBF0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BBF4 E8 E9 87 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BBF9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040BBFD 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC02 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BC06 E8 E9 87 FF FF 
	call	_OR	; 8040BC0B E8 DB 87 FF FF 
;/  0=
	call	_0equ	; 8040BC10 E8 2D 87 FF FF 
;/ M_WL  M\ 2A DTST
	test	rax,rax	; 8040BC15 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BC18 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC1C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x36CB 	; 8040BC20 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BC26 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2A,eax	; 8040BC2A 
	DB 0xB8,0x2A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC33 E8 6A A0 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BC38 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040BC3C 
	DB 0x48,0x8D,0x5,0x9D,0x9C,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BC43 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BC47 E8 49 A6 FF FF 
;/	J_COD 7 XOR TO J_COD
;/*	mov	rax,-0x08(rbp)	; 8040BC4C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040BC50 
	DB 0x48,0x8D,0x5,0x1E,0x9C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BC57 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BC5A 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x7,eax	; 8040BC5E 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BC63 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XOR	; 8040BC67 E8 88 87 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BC6C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040BC70 
	DB 0x48,0x8D,0x5,0xFE,0x9B,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BC77 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040BC7B E8 80 85 FF FF 
;/	M\ 2B DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC80 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2B,eax	; 8040BC84 
	DB 0xB8,0x2B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC89 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC8D E8 10 A0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040BC92 
	DB 0xE9,0x49,0xC9,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP1@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040BC97 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040BC9B 
	DB 0x48,0x8D,0x5,0xC0,0x9D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BCA2 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BCA5 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040BCA9 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BCAE 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040BCB2 E8 64 87 FF FF 
	call	_Cload	; 8040BCB7 E8 11 85 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BCBC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BCC0 
	DB 0x48,0x8D,0x5,0x8E,0x9D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BCC7 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BCCA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040BCCE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BCD3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040BCD7 E8 3F 87 FF FF 
	call	_Cload	; 8040BCDC E8 EC 84 FF FF 
	call	_XOR	; 8040BCE1 E8 E 87 FF FF 
;/OP2@ @ FFFFFF AND 458948 XOR OR \ /*    mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040BCEA 
	DB 0x48,0x8D,0x5,0x71,0x9D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BCF1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCF4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BCF8 E8 CC 84 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BCFD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BD01 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD06 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BD0A E8 D3 86 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BD0F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040BD13 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD18 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BD1C E8 D3 86 FF FF 
	call	_OR	; 8040BD21 E8 C5 86 FF FF 
;/OP1@ @ FFFFFF AND 7d8148 XOR OR \ /*    cmp     $X,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BD2A 
	DB 0x48,0x8D,0x5,0x24,0x9D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BD31 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD34 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BD38 E8 8C 84 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BD3D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BD41 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD46 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BD4A E8 93 86 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BD4F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7D8148,eax	; 8040BD53 
	DB 0xB8,0x48,0x81,0x7D,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD58 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BD5C E8 93 86 FF FF 
	call	_OR	; 8040BD61 E8 85 86 FF FF 
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ /*    mov     0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040BD66 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040BD6A 
	DB 0x48,0x8D,0x5,0xD7,0x9C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BD71 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD74 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BD78 E8 4C 84 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BD7D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BD81 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD86 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BD8A E8 53 86 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BD8F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040BD93 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD98 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BD9C E8 53 86 FF FF 
	call	_OR	; 8040BDA1 E8 45 86 FF FF 
;/  0=
	call	_0equ	; 8040BDA6 E8 97 85 FF FF 
;/ M_WL  M\ 7A DTST
	test	rax,rax	; 8040BDAB 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BDAE 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BDB2 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x389C 	; 8040BDB6 
	DB 0xF,0x84,0xAC,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BDBC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7A,eax	; 8040BDC0 
	DB 0xB8,0x7A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDC9 E8 D4 9E FF FF 
;/	OP1@ 4 + L@ OP1@ 2+ L!
;/*	mov	rax,-0x08(rbp)	; 8040BDCE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BDD2 
	DB 0x48,0x8D,0x5,0x7C,0x9C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BDD9 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BDDC 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040BDE0 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BDE5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040BDE9 E8 2D 86 FF FF 
	call	_Lload	; 8040BDEE E8 D3 83 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDF3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BDF7 
	DB 0x48,0x8D,0x5,0x57,0x9C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BDFE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040BE05 E8 6E 86 FF FF 
	call	_Lsave	; 8040BE0A E8 E3 83 FF FF 
;/	3D OP1@ 1+ C! \ cmp    $X,%rax 
;/*	mov	rax,-0x08(rbp)	; 8040BE0F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3D,eax	; 8040BE13 
	DB 0xB8,0x3D,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BE18 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BE1C 
	DB 0x48,0x8D,0x5,0x32,0x9C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BE23 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BE26 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040BE2A E8 4C 86 FF FF 
	call	_Csave	; 8040BE2F E8 A1 83 FF FF 
;/	OP1 6 OPsize!
;/*	mov	rax,-0x08(rbp)	; 8040BE34 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040BE38 
	DB 0x48,0x8D,0x5,0xA1,0x9A,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040BE3F 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x6,eax	; 8040BE43 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BE48 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040BE4C E8 E9 A3 FF FF 
;/	M\ 7B DTST
;/*	mov	rax,-0x08(rbp)	; 8040BE51 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7B,eax	; 8040BE55 
	DB 0xB8,0x7B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE5A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BE5E E8 3F 9E FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040BE63 
	DB 0xE9,0x78,0xC7,0xFF,0xFF
;/
;/J_COD 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 8040BE68 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040BE6C 
	DB 0x48,0x8D,0x5,0x2,0x9A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BE73 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BE76 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x84,eax	; 8040BE7A 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BE7F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XOR	; 8040BE83 E8 6C 85 FF FF 
;/OP2@ W@ 3d48 XOR OR		\ cmp     $0x4,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BE88 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040BE8C 
	DB 0x48,0x8D,0x5,0xCF,0x9B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BE93 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE96 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040BE9A E8 32 83 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE9F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3D48,eax	; 8040BEA3 
	DB 0xB8,0x48,0x3D,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BEA8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BEAC E8 43 85 FF FF 
	call	_OR	; 8040BEB1 E8 35 85 FF FF 
;/OP1@ @ FFFFFF AND c01948 XOR OR \ sbb     %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BEB6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040BEBA 
	DB 0x48,0x8D,0x5,0x94,0x9B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BEC1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BEC4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BEC8 E8 FC 82 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BECD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BED1 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BED6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BEDA E8 3 85 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BEDF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC01948,eax	; 8040BEE3 
	DB 0xB8,0x48,0x19,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BEE8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BEEC E8 3 85 FF FF 
	call	_OR	; 8040BEF1 E8 F5 84 FF FF 
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ mov     0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040BEF6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040BEFA 
	DB 0x48,0x8D,0x5,0x47,0x9B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BF01 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BF04 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BF08 E8 BC 82 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BF0D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BF11 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BF16 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BF1A E8 C3 84 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BF1F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040BF23 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BF28 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BF2C E8 C3 84 FF FF 
	call	_OR	; 8040BF31 E8 B5 84 FF FF 
;/  0=
	call	_0equ	; 8040BF36 E8 7 84 FF FF 
;/ M_WL  M\ 7A DTST
	test	rax,rax	; 8040BF3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BF3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BF42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x39DA 	; 8040BF46 
	DB 0xF,0x84,0x5A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BF4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7A,eax	; 8040BF50 
	DB 0xB8,0x7A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BF55 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BF59 E8 44 9D FF FF 
;/	83 TO J_COD
;/*	mov	rax,-0x08(rbp)	; 8040BF5E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x83,eax	; 8040BF62 
	DB 0xB8,0x83,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BF67 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040BF6B 
	DB 0x48,0x8D,0x5,0x3,0x99,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BF72 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 8040BF76 E8 85 82 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BF7B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040BF7F 
	DB 0x48,0x8D,0x5,0x5A,0x99,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BF86 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BF8A E8 6 A3 FF FF 
;/	M\ 7B DTST
;/*	mov	rax,-0x08(rbp)	; 8040BF8F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7B,eax	; 8040BF93 
	DB 0xB8,0x7B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BF98 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BF9C E8 1 9D FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040BFA1 
	DB 0xE9,0x3A,0xC6,0xFF,0xFF
;/J_COD 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 8040BFA6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040BFAA 
	DB 0x48,0x8D,0x5,0xC4,0x98,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BFB1 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BFB4 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x84,eax	; 8040BFB8 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040BFBD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XOR	; 8040BFC1 E8 2E 84 FF FF 
;/OP2@ @ FFFFFF AND d8f748 XOR OR \            negq    %rax
;/*	mov	rax,-0x08(rbp)	; 8040BFC6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040BFCA 
	DB 0x48,0x8D,0x5,0x91,0x9A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040BFD1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BFD4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040BFD8 E8 EC 81 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BFDD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040BFE1 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BFE6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040BFEA E8 F3 83 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BFEF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD8F748,eax	; 8040BFF3 
	DB 0xB8,0x48,0xF7,0xD8,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BFF8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040BFFC E8 F3 83 FF FF 
	call	_OR	; 8040C001 E8 E5 83 FF FF 
;/OP1@ @ FFFFFF AND c01948 XOR OR \    sbb     %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 8040C006 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C00A 
	DB 0x48,0x8D,0x5,0x44,0x9A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C011 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C014 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C018 E8 AC 81 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C01D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C021 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C026 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C02A E8 B3 83 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C02F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC01948,eax	; 8040C033 
	DB 0xB8,0x48,0x19,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C038 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C03C E8 B3 83 FF FF 
	call	_OR	; 8040C041 E8 A5 83 FF FF 
;/OP0@ @ FFFFFF AND 458b48 XOR OR \    mov     0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040C046 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040C04A 
	DB 0x48,0x8D,0x5,0xF7,0x99,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C051 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C054 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C058 E8 6C 81 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C05D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C061 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C066 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C06A E8 73 83 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C06F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040C073 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C078 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C07C E8 73 83 FF FF 
	call	_OR	; 8040C081 E8 65 83 FF FF 
;/  0=
	call	_0equ	; 8040C086 E8 B7 82 FF FF 
;/ M_WL  M\ 7C DTST
	test	rax,rax	; 8040C08B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C08E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C092 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x3B21 	; 8040C096 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C09C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7C,eax	; 8040C0A0 
	DB 0xB8,0x7C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C0A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C0A9 E8 F4 9B FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040C0AE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C0B2 
	DB 0x48,0x8D,0x5,0x27,0x98,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C0B9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040C0BD E8 D3 A1 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040C0C2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C0C6 
	DB 0x48,0x8D,0x5,0x13,0x98,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C0CD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040C0D1 E8 BF A1 FF FF 
;/	M\ 7D DTST
;/*	mov	rax,-0x08(rbp)	; 8040C0D6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7D,eax	; 8040C0DA 
	DB 0xB8,0x7D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C0DF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C0E3 E8 BA 9B FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040C0E8 
	DB 0xE9,0xF3,0xC4,0xFF,0xFF
;/
;/J_COD 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 8040C0ED 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C0F1 
	DB 0x48,0x8D,0x5,0x7D,0x97,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C0F8 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C0FB 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x84,eax	; 8040C0FF 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C104 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XOR	; 8040C108 E8 E7 82 FF FF 
;/OP2@ 3 + C@ OP0@ 3 + C@ XOR OR
;/*	mov	rax,-0x08(rbp)	; 8040C10D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C111 
	DB 0x48,0x8D,0x5,0x4A,0x99,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C118 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C11B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040C11F 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C124 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040C128 E8 EE 82 FF FF 
	call	_Cload	; 8040C12D E8 9B 80 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C132 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040C136 
	DB 0x48,0x8D,0x5,0xB,0x99,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C13D 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C140 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040C144 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C149 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040C14D E8 C9 82 FF FF 
	call	_Cload	; 8040C152 E8 76 80 FF FF 
	call	_XOR	; 8040C157 E8 98 82 FF FF 
	call	_OR	; 8040C15C E8 8A 82 FF FF 
;/OP2@ @ FFFFFF AND 458948 XOR OR \ /*    mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040C161 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C165 
	DB 0x48,0x8D,0x5,0xF6,0x98,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C16C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C16F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C173 E8 51 80 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C178 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C17C 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C181 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C185 E8 58 82 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C18A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040C18E 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C193 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C197 E8 58 82 FF FF 
	call	_OR	; 8040C19C E8 4A 82 FF FF 
;/OP1@ L@		3FF8C148 XOR OR	\ /*    sar     $0x3F,%rax 
;/*	mov	rax,-0x08(rbp)	; 8040C1A1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C1A5 
	DB 0x48,0x8D,0x5,0xA9,0x98,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C1AC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C1AF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040C1B3 E8 E 80 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C1B8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3FF8C148,eax	; 8040C1BC 
	DB 0xB8,0x48,0xC1,0xF8,0x3F
;/*	lea	-0x08(rbp),rbp	; 8040C1C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C1C5 E8 2A 82 FF FF 
	call	_OR	; 8040C1CA E8 1C 82 FF FF 
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ /*    mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040C1CF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040C1D3 
	DB 0x48,0x8D,0x5,0x6E,0x98,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C1DA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C1DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C1E1 E8 E3 7F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C1E6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C1EA 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C1EF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C1F3 E8 EA 81 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C1F8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040C1FC 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C201 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C205 E8 EA 81 FF FF 
	call	_OR	; 8040C20A E8 DC 81 FF FF 
;/0=	M_WL  M\ 88 DTST
	call	_0equ	; 8040C20F E8 2E 81 FF FF 
	test	rax,rax	; 8040C214 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C217 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C21B 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x3CEC 	; 8040C21F 
	DB 0xF,0x84,0x93,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C225 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x88,eax	; 8040C229 
	DB 0xB8,0x88,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C22E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C232 E8 6B 9A FF FF 
;/	C085 OP1@ 1+ W! \ test    %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 8040C237 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC085,eax	; 8040C23B 
	DB 0xB8,0x85,0xC0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C240 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C244 
	DB 0x48,0x8D,0x5,0xA,0x98,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C24B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C24E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040C252 E8 24 82 FF FF 
	call	_Wsave	; 8040C257 E8 87 7F FF FF 
;/	8D TO J_COD \  jge
;/*	mov	rax,-0x08(rbp)	; 8040C25C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8D,eax	; 8040C260 
	DB 0xB8,0x8D,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C265 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C269 
	DB 0x48,0x8D,0x5,0x5,0x96,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040C270 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 8040C274 E8 87 7F FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040C279 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C27D 
	DB 0x48,0x8D,0x5,0x5C,0x96,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C284 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040C288 E8 C6 98 FF FF 
;/	-5 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040C28D 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x5,rax	; 8040C291 
	DB 0x48,0xC7,0xC0,0xFB,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C298 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040C29C E8 AC 89 FF FF 
;/	M\ 89 DTST
;/*	mov	rax,-0x08(rbp)	; 8040C2A1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x89,eax	; 8040C2A5 
	DB 0xB8,0x89,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C2AA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C2AE E8 EF 99 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040C2B3 
	DB 0xE9,0x28,0xC3,0xFF,0xFF
;/
;/
;/J_COD F0 AND 80 XOR
;/*	mov	rax,-0x08(rbp)	; 8040C2B8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C2BC 
	DB 0x48,0x8D,0x5,0xB2,0x95,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C2C3 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C2C6 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xF0,eax	; 8040C2CA 
	DB 0xB8,0xF0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C2CF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_AND	; 8040C2D3 E8 A 81 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C2D8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 8040C2DC 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C2E1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C2E5 E8 A 81 FF FF 
;/OP2@ L@ FFFCFF AND C09C0F XOR OR \ set<gl>   %al
;/*	mov	rax,-0x08(rbp)	; 8040C2EA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C2EE 
	DB 0x48,0x8D,0x5,0x6D,0x97,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C2F5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C2F8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040C2FC E8 C5 7E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C301 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFCFF,eax	; 8040C305 
	DB 0xB8,0xFF,0xFC,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C30A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C30E E8 CF 80 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C313 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC09C0F,eax	; 8040C317 
	DB 0xB8,0xF,0x9C,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C31C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C320 E8 CF 80 FF FF 
	call	_OR	; 8040C325 E8 C1 80 FF FF 
;/OP1@ W@ D8F6 XOR OR	\ neg	%al
;/*	mov	rax,-0x08(rbp)	; 8040C32A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C32E 
	DB 0x48,0x8D,0x5,0x20,0x97,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C335 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C338 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040C33C E8 90 7E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C341 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD8F6,eax	; 8040C345 
	DB 0xB8,0xF6,0xD8,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C34A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C34E E8 A1 80 FF FF 
	call	_OR	; 8040C353 E8 93 80 FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040C358 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040C35C 
	DB 0x48,0x8D,0x5,0xE5,0x96,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C363 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C366 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040C36A E8 C B1 FF FF 
	call	_OR	; 8040C36F E8 77 80 FF FF 
;/0=	M_WL M\ 76 DTST
	call	_0equ	; 8040C374 E8 C9 7F FF FF 
	test	rax,rax	; 8040C379 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C37C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C380 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x3E68 	; 8040C384 
	DB 0xF,0x84,0xAA,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C38A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x76,eax	; 8040C38E 
	DB 0xB8,0x76,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C393 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C397 E8 6 99 FF FF 
;/	OP2@ 1+ C@ 95 XOR
;/*	mov	rax,-0x08(rbp)	; 8040C39C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C3A0 
	DB 0x48,0x8D,0x5,0xBB,0x96,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C3A7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C3AA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040C3AE E8 C8 80 FF FF 
	call	_Cload	; 8040C3B3 E8 15 7E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C3B8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x95,eax	; 8040C3BC 
	DB 0xB8,0x95,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C3C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C3C5 E8 2A 80 FF FF 
;/	J_COD XOR TO J_COD
;/*	mov	rax,-0x08(rbp)	; 8040C3CA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C3CE 
	DB 0x48,0x8D,0x5,0xA0,0x94,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C3D5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C3D8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C3DC E8 13 80 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C3E1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C3E5 
	DB 0x48,0x8D,0x5,0x89,0x94,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C3EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040C3F0 E8 B 7E FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040C3F5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C3F9 
	DB 0x48,0x8D,0x5,0xE0,0x94,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C400 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040C404 E8 8C 9E FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040C409 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C40D 
	DB 0x48,0x8D,0x5,0xCC,0x94,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C414 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040C418 E8 78 9E FF FF 
;/	M\ 74 DTST
;/*	mov	rax,-0x08(rbp)	; 8040C41D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x74,eax	; 8040C421 
	DB 0xB8,0x74,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C426 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C42A E8 73 98 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040C42F 
	DB 0xE9,0xAC,0xC1,0xFF,0xFF
;/
;/J_COD F0 AND 80 XOR
;/*	mov	rax,-0x08(rbp)	; 8040C434 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C438 
	DB 0x48,0x8D,0x5,0x36,0x94,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C43F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C442 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xF0,eax	; 8040C446 
	DB 0xB8,0xF0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C44B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_AND	; 8040C44F E8 8E 7F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C454 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 8040C458 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C45D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C461 E8 8E 7F FF FF 
;/OP2@ @ 80000000FF AND B8 XOR OR \ movq	$0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 8040C466 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C46A 
	DB 0x48,0x8D,0x5,0xF1,0x95,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C471 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C474 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C478 E8 4C 7D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C47D 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FF,%rax	; 8040C481 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C48B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C48F E8 4E 7F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C494 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040C498 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C49D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C4A1 E8 4E 7F FF FF 
	call	_OR	; 8040C4A6 E8 40 7F FF FF 
;/OP1@ L@ FFFFFF AND 453B48 XOR OR \ cmp	-0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040C4AB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C4AF 
	DB 0x48,0x8D,0x5,0x9F,0x95,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C4B6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C4B9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040C4BD E8 4 7D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C4C2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C4C6 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C4CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C4CF E8 E 7F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C4D4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453B48,eax	; 8040C4D8 
	DB 0xB8,0x48,0x3B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C4DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C4E1 E8 E 7F FF FF 
	call	_OR	; 8040C4E6 E8 0 7F FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040C4EB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040C4EF 
	DB 0x48,0x8D,0x5,0x52,0x95,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C4F6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C4F9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040C4FD E8 79 AF FF FF 
	call	_OR	; 8040C502 E8 E4 7E FF FF 
;/0= \  MO_TST_VAL and
	call	_0equ	; 8040C507 E8 36 7E FF FF 
;/	M_WL M\ 78 DTST
	test	rax,rax	; 8040C50C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C50F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C513 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4083 	; 8040C517 
	DB 0xF,0x84,0x32,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C51D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x78,eax	; 8040C521 
	DB 0xB8,0x78,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C526 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C52A E8 73 97 FF FF 
;/\	jae<>jbe jle<>jge
;/	J_COD DUP 8 AND IF 3 ELSE 5 THEN XOR TO J_COD
;/*	mov	rax,-0x08(rbp)	; 8040C52F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C533 
	DB 0x48,0x8D,0x5,0x3B,0x93,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C53A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C53D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP	; 8040C541 E8 E2 7F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C546 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 8040C54A 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C54F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C553 E8 8A 7E FF FF 
	test	rax,rax	; 8040C558 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C55B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C55F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x3FAF 	; 8040C563 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C569 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040C56D 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C572 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jmp	_OPTsubRULES+0x3FBC 	; 8040C576 
	DB 0xE9,0xD,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C57B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 8040C57F 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C584 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C588 E8 67 7E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C58D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040C591 
	DB 0x48,0x8D,0x5,0xDD,0x92,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C598 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040C59C E8 5F 7C FF FF 
;/
;/	7d81 OP1@ 1+ W! 
;/*	mov	rax,-0x08(rbp)	; 8040C5A1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7D81,eax	; 8040C5A5 
	DB 0xB8,0x81,0x7D,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C5AA 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C5AE 
	DB 0x48,0x8D,0x5,0xA0,0x94,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C5B5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C5B8 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040C5BC E8 BA 7E FF FF 
	call	_Wsave	; 8040C5C1 E8 1D 7C FF FF 
;/	OP1 8 OPsize!
;/*	mov	rax,-0x08(rbp)	; 8040C5C6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C5CA 
	DB 0x48,0x8D,0x5,0xF,0x93,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040C5D1 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x8,eax	; 8040C5D5 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C5DA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040C5DE E8 57 9C FF FF 
;/	OP2@ 1+ L@ OP1@ 4 + L!
;/*	mov	rax,-0x08(rbp)	; 8040C5E3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C5E7 
	DB 0x48,0x8D,0x5,0x74,0x94,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C5EE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C5F1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040C5F5 E8 81 7E FF FF 
	call	_Lload	; 8040C5FA E8 C7 7B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C5FF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C603 
	DB 0x48,0x8D,0x5,0x4B,0x94,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C60A 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C60D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040C611 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C616 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040C61A E8 FC 7D FF FF 
	call	_Lsave	; 8040C61F E8 CE 7B FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040C624 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040C628 
	DB 0x48,0x8D,0x5,0xB9,0x92,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C62F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040C633 E8 5D 9C FF FF 
;/	M\ 74 DTST
;/*	mov	rax,-0x08(rbp)	; 8040C638 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x74,eax	; 8040C63C 
	DB 0xB8,0x74,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C641 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C645 E8 58 96 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040C64A 
	DB 0xE9,0x91,0xBF,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND c0c748 XOR		\ movq	$0x8,%rax
;/*	mov	rax,-0x08(rbp)	; 8040C64F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C653 
	DB 0x48,0x8D,0x5,0x8,0x94,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C65A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C65D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040C661 E8 60 7B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C666 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C66A 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C66F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C673 E8 6A 7D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C678 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C748,eax	; 8040C67C 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C681 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C685 E8 6A 7D FF FF 
;/OP2@ @ 	80000000FF AND B8 <> AND	\ movq	$0x8,%rax
;/*	mov	rax,-0x08(rbp)	; 8040C68A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C68E 
	DB 0x48,0x8D,0x5,0xCD,0x93,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C695 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C698 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C69C E8 28 7B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C6A1 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FF,%rax	; 8040C6A5 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C6AF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C6B3 E8 2A 7D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C6B8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040C6BC 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C6C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040C6C5 E8 CF 7C FF FF 
	call	_AND	; 8040C6CA E8 13 7D FF FF 
;/OP1@ L@ FFFFFF AND 50148 XOR OR		\ add	%rax,X (%rip)
;/*	mov	rax,-0x08(rbp)	; 8040C6CF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C6D3 
	DB 0x48,0x8D,0x5,0x7B,0x93,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C6DA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C6DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040C6E1 E8 E0 7A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C6E6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C6EA 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C6EF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C6F3 E8 EA 7C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C6F8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x50148,eax	; 8040C6FC 
	DB 0xB8,0x48,0x1,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C701 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C705 E8 EA 7C FF FF 
	call	_OR	; 8040C70A E8 DC 7C FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR	\ mov	Y(%rbp),%rax # 80404edf
;/*	mov	rax,-0x08(rbp)	; 8040C70F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040C713 
	DB 0x48,0x8D,0x5,0x2E,0x93,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C71A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C71D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040C721 E8 A0 7A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C726 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040C72A 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C72F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C733 E8 AA 7C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C738 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040C73C 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C741 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C745 E8 AA 7C FF FF 
	call	_OR	; 8040C74A E8 9C 7C FF FF 
;/0=	M_WL  M\ 42 DTST
	call	_0equ	; 8040C74F E8 EE 7B FF FF 
	test	rax,rax	; 8040C754 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C757 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C75B 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4389 	; 8040C75F 
	DB 0xF,0x84,0xF0,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C765 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x42,eax	; 8040C769 
	DB 0xB8,0x42,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C76E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C772 E8 2B 95 FF FF 
;/	OP2@ C@ B8 XOR
;/*	mov	rax,-0x08(rbp)	; 8040C777 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C77B 
	DB 0x48,0x8D,0x5,0xE0,0x92,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C782 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C785 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040C789 E8 3F 7A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C78E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040C792 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C797 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C79B E8 54 7C FF FF 
;/	IF	OP2@ 3+ SL@
	test	rax,rax	; 8040C7A0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C7A3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C7A7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4206 	; 8040C7AB 
	DB 0xF,0x84,0x21,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C7B1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C7B5 
	DB 0x48,0x8D,0x5,0xA6,0x92,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C7BC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C7BF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040C7C3 E8 AD 7C FF FF 
	call	_SLload	; 8040C7C8 E8 F4 79 FF FF 
;/	ELSE	OP2@ 1+ L@
;/*	jmp	_OPTsubRULES+0x4222 	; 8040C7CD 
	DB 0xE9,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C7D2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C7D6 
	DB 0x48,0x8D,0x5,0x85,0x92,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C7DD 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C7E0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040C7E4 E8 92 7C FF FF 
	call	_Lload	; 8040C7E9 E8 D8 79 FF FF 
;/	THEN
;/	DUP SHORT? \ 0 AND
	call	_DUP	; 8040C7EE E8 35 7D FF FF 
	call	_SHORTque	; 8040C7F3 E8 D0 8D FF FF 
;/	IF	OP1 8 OPsize!
	test	rax,rax	; 8040C7F8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040C7FB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040C7FF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x42D0 	; 8040C803 
	DB 0xF,0x84,0x93,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C809 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C80D 
	DB 0x48,0x8D,0x5,0xCC,0x90,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040C814 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x8,eax	; 8040C818 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C81D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040C821 E8 14 9A FF FF 
;/		-1  OP1@ 3+ L+!
;/*	mov	rax,-0x08(rbp)	; 8040C826 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040C82A 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040C831 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C835 
	DB 0x48,0x8D,0x5,0x19,0x92,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C83C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C83F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_3add	; 8040C843 E8 2D 7C FF FF 
	call	_Laddsave	; 8040C848 E8 E2 79 FF FF 
;/		82 OP1@ 1+ XOR!	\ addq   $X,Y(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040C84D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x82,eax	; 8040C851 
	DB 0xB8,0x82,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C856 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C85A 
	DB 0x48,0x8D,0x5,0xF4,0x91,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C861 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C864 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040C868 E8 E 7C FF FF 
	call	_XORsave	; 8040C86D E8 EB 79 FF FF 
;/		OP1@ 7 + C!
;/*	mov	rax,-0x08(rbp)	; 8040C872 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C876 
	DB 0x48,0x8D,0x5,0xD8,0x91,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C87D 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C880 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x7,eax	; 8040C884 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C889 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040C88D E8 89 7B FF FF 
	call	_Csave	; 8040C892 E8 3E 79 FF FF 
;/	ELSE	OP1 B OPsize!
;/*	jmp	_OPTsubRULES+0x435E 	; 8040C897 
	DB 0xE9,0x8E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040C89C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040C8A0 
	DB 0x48,0x8D,0x5,0x39,0x90,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040C8A7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xB,eax	; 8040C8AB 
	DB 0xB8,0xB,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C8B0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040C8B4 E8 81 99 FF FF 
;/		-4  OP1@ 3+ L+!
;/*	mov	rax,-0x08(rbp)	; 8040C8B9 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040C8BD 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040C8C4 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C8C8 
	DB 0x48,0x8D,0x5,0x86,0x91,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C8CF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C8D2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_3add	; 8040C8D6 E8 9A 7B FF FF 
	call	_Laddsave	; 8040C8DB E8 4F 79 FF FF 
;/		80 OP1@ 1+ XOR!	\ addq   $X,Y(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040C8E0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 8040C8E4 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C8E9 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C8ED 
	DB 0x48,0x8D,0x5,0x61,0x91,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C8F4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C8F7 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040C8FB E8 7B 7B FF FF 
	call	_XORsave	; 8040C900 E8 58 79 FF FF 
;/		OP1@ 7 + L!
;/*	mov	rax,-0x08(rbp)	; 8040C905 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C909 
	DB 0x48,0x8D,0x5,0x45,0x91,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C910 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040C913 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x7,eax	; 8040C917 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040C91C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040C920 E8 F6 7A FF FF 
	call	_Lsave	; 8040C925 E8 C8 78 FF FF 
;/	THEN
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040C92A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040C92E 
	DB 0x48,0x8D,0x5,0xB3,0x8F,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040C935 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040C939 E8 57 99 FF FF 
;/	M\ 43 DTST
;/*	mov	rax,-0x08(rbp)	; 8040C93E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x43,eax	; 8040C942 
	DB 0xB8,0x43,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C947 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040C94B E8 52 93 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040C950 
	DB 0xE9,0x8B,0xBC,0xFF,0xFF
;/
;/OP2@  @ FFFFFFFFFF AND FF25 XOR \ and	$0xFF,%eax
;/*	mov	rax,-0x08(rbp)	; 8040C955 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C959 
	DB 0x48,0x8D,0x5,0x2,0x91,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C960 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C963 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040C967 E8 5D 78 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C96C 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0xFFFFFFFFFF,%rax	; 8040C970 
	DB 0x48,0xB8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C97A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040C97E E8 5F 7A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C983 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF25,eax	; 8040C987 
	DB 0xB8,0x25,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C98C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C990 E8 5F 7A FF FF 
;/OP1@ C@ 3C XOR OR   \ cmp $0x48,%al|eax
;/*	mov	rax,-0x08(rbp)	; 8040C995 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C999 
	DB 0x48,0x8D,0x5,0xB5,0x90,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C9A0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C9A3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040C9A7 E8 21 78 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C9AC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3C,eax	; 8040C9B0 
	DB 0xB8,0x3C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C9B5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C9B9 E8 36 7A FF FF 
	call	_OR	; 8040C9BE E8 28 7A FF FF 
;/
;/OP2@ C@ B8 XOR \ mov     $0x3,%eax
;/*	mov	rax,-0x08(rbp)	; 8040C9C3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040C9C7 
	DB 0x48,0x8D,0x5,0x94,0x90,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C9CE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C9D1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040C9D5 E8 F3 77 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040C9DA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040C9DE 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C9E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040C9E7 E8 8 7A FF FF 
;/OP1@ C@ B1 XOR OR   \ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040C9EC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040C9F0 
	DB 0x48,0x8D,0x5,0x5E,0x90,0xFF,0xFF
;/*	mov	(rax),rax	; 8040C9F7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040C9FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040C9FE E8 CA 77 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CA03 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB1,eax	; 8040CA07 
	DB 0xB8,0xB1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CA0C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CA10 E8 DF 79 FF FF 
	call	_OR	; 8040CA15 E8 D1 79 FF FF 
;/0<> AND
	call	_0lessgreat	; 8040CA1A E8 82 79 FF FF 
	call	_AND	; 8040CA1F E8 BE 79 FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040CA24 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040CA28 
	DB 0x48,0x8D,0x5,0x19,0x90,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CA2F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CA32 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CA36 E8 8B 77 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CA3B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CA3F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CA44 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CA48 E8 95 79 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CA4D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040CA51 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CA56 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CA5A E8 95 79 FF FF 
	call	_OR	; 8040CA5F E8 87 79 FF FF 
;/0= M_WL	M\ 56 DTST
	call	_0equ	; 8040CA64 E8 D9 78 FF FF 
	test	rax,rax	; 8040CA69 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040CA6C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040CA70 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x44EB 	; 8040CA74 
	DB 0xF,0x84,0x3D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040CA7A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x56,eax	; 8040CA7E 
	DB 0xB8,0x56,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CA83 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CA87 E8 16 92 FF FF 
;/ OP2 OPexcise	
;/*	mov	rax,-0x08(rbp)	; 8040CA8C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040CA90 
	DB 0x48,0x8D,0x5,0x51,0x8E,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040CA97 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040CA9B E8 F5 97 FF FF 
;/	M\ 57 DTST
;/*	mov	rax,-0x08(rbp)	; 8040CAA0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x57,eax	; 8040CAA4 
	DB 0xB8,0x57,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CAA9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CAAD E8 F0 91 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040CAB2 
	DB 0xE9,0x29,0xBB,0xFF,0xFF
;/
;/\ START BLOCK
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040CAB7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040CABB 
	DB 0x48,0x8D,0x5,0xA0,0x8F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CAC2 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CAC5 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040CAC9 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040CACE 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040CAD2 E8 44 79 FF FF 
	call	_Cload	; 8040CAD7 E8 F1 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CADC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040CAE0 
	DB 0x48,0x8D,0x5,0x61,0x8F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CAE7 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CAEA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040CAEE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040CAF3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040CAF7 E8 1F 79 FF FF 
	call	_Cload	; 8040CAFC E8 CC 76 FF FF 
	call	_XOR	; 8040CB01 E8 EE 78 FF FF 
;/OP2@ L@ FFFFFF AND 458948 XOR OR	\ mov	%rax,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040CB06 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040CB0A 
	DB 0x48,0x8D,0x5,0x51,0x8F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CB11 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB14 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CB18 E8 A9 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CB1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CB21 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB26 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CB2A E8 B3 78 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CB2F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040CB33 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB38 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CB3C E8 B3 78 FF FF 
	call	_OR	; 8040CB41 E8 A5 78 FF FF 
;/OP0@ L@ FFFFFF AND 558b48 XOR OR \ mov   -0x10(%rbp),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CB46 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040CB4A 
	DB 0x48,0x8D,0x5,0xF7,0x8E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CB51 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB54 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CB58 E8 69 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CB5D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CB61 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB66 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CB6A E8 73 78 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CB6F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558B48,eax	; 8040CB73 
	DB 0xB8,0x48,0x8B,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB78 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CB7C E8 73 78 FF FF 
	call	_OR	; 8040CB81 E8 65 78 FF FF 
;/
;/
;/DUP   \  BLOCK			\ mov	%rax,-0x10(%rbp)
	call	_DUP	; 8040CB86 E8 9D 79 FF FF 
;/OP1@ L@	FFFFFF AND 058b48 XOR OR	\ mov     X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040CB8B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CB8F 
	DB 0x48,0x8D,0x5,0xBF,0x8E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CB96 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CB99 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CB9D E8 24 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CBA2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CBA6 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CBAB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CBAF E8 2E 78 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CBB4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58B48,eax	; 8040CBB8 
	DB 0xB8,0x48,0x8B,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CBBD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CBC1 E8 2E 78 FF FF 
	call	_OR	; 8040CBC6 E8 20 78 FF FF 
;/0=	M_WL	DROP		\ mov   -0x10(%rbp),%rdx
	call	_0equ	; 8040CBCB E8 72 77 FF FF 
	test	rax,rax	; 8040CBD0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040CBD3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040CBD7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x46A1 	; 8040CBDB 
	DB 0xF,0x84,0x8C,0x0,0x0,0x0
	call	_DgreatS	; 8040CBE1 E8 4D 75 FF FF 
;/	M\ 40 DTST
;/*	mov	rax,-0x08(rbp)	; 8040CBE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x40,eax	; 8040CBEA 
	DB 0xB8,0x40,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CBEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CBF3 E8 AA 90 FF FF 
;/	15 OP1@ 2+ C!   \ mov     X(%rip),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CBF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x15,eax	; 8040CBFC 
	DB 0xB8,0x15,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CC01 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CC05 
	DB 0x48,0x8D,0x5,0x49,0x8E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CC0C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040CC0F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040CC13 E8 60 78 FF FF 
	call	_Csave	; 8040CC18 E8 B8 75 FF FF 
;/	92  OP0@ 1+ C!	\ xchg   %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CC1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x92,eax	; 8040CC21 
	DB 0xB8,0x92,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CC26 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040CC2A 
	DB 0x48,0x8D,0x5,0x17,0x8E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CC31 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040CC34 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040CC38 E8 3E 78 FF FF 
	call	_Csave	; 8040CC3D E8 93 75 FF FF 
;/	-2 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040CC42 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x2,rax	; 8040CC46 
	DB 0x48,0xC7,0xC0,0xFE,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040CC4D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040CC51 E8 F7 7F FF FF 
;/	M\ 41 DTST
;/*	mov	rax,-0x08(rbp)	; 8040CC56 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x41,eax	; 8040CC5A 
	DB 0xB8,0x41,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CC5F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CC63 E8 3A 90 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040CC68 
	DB 0xE9,0x73,0xB9,0xFF,0xFF
;/
;/DUP   \  BLOCK		\ mov	%rax,-0x10(%rbp)
	call	_DUP	; 8040CC6D E8 B6 78 FF FF 
;/OP1@ DX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040CC72 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CC76 
	DB 0x48,0x8D,0x5,0xD8,0x8D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CC7D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CC80 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DX_applylessgreat	; 8040CC84 E8 C2 AC FF FF 
	call	_OR	; 8040CC89 E8 5D 77 FF FF 
;/0=	M_WL	DROP	\ mov   -0x10(%rbp),%rdx
	call	_0equ	; 8040CC8E E8 AF 76 FF FF 
	test	rax,rax	; 8040CC93 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040CC96 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040CC9A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4780 	; 8040CC9E 
	DB 0xF,0x84,0xA8,0x0,0x0,0x0
	call	_DgreatS	; 8040CCA4 E8 8A 74 FF FF 
;/	M\ 2C DTST
;/*	mov	rax,-0x08(rbp)	; 8040CCA9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2C,eax	; 8040CCAD 
	DB 0xB8,0x2C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CCB2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CCB6 E8 E7 8F FF FF 
;/	OP0 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040CCBB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040CCBF 
	DB 0x48,0x8D,0x5,0x12,0x8C,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040CCC6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040CCCA E8 C6 95 FF FF 
;/	OP0 3 OPinsert
;/*	mov	rax,-0x08(rbp)	; 8040CCCF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040CCD3 
	DB 0x48,0x8D,0x5,0xFE,0x8B,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040CCDA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040CCDE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040CCE3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 8040CCE7 E8 D4 94 FF FF 
;/	48 OP1 @ C!   \ mov    %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CCEC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 8040CCF0 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CCF5 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040CCF9 
	DB 0x48,0x8D,0x5,0xE0,0x8B,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040CD00 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040CD04 E8 C0 74 FF FF 
	call	_Csave	; 8040CD09 E8 C7 74 FF FF 
;/	c289 OP1 @ 1+ W!   \ mov    %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CD0E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC289,eax	; 8040CD12 
	DB 0xB8,0x89,0xC2,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CD17 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040CD1B 
	DB 0x48,0x8D,0x5,0xBE,0x8B,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040CD22 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040CD26 E8 9E 74 FF FF 
	call	_CHARadd	; 8040CD2B E8 4B 77 FF FF 
	call	_Wsave	; 8040CD30 E8 AE 74 FF FF 
;/	M\ 2D DTST
;/*	mov	rax,-0x08(rbp)	; 8040CD35 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2D,eax	; 8040CD39 
	DB 0xB8,0x2D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CD3E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CD42 E8 5B 8F FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040CD47 
	DB 0xE9,0x94,0xB8,0xFF,0xFF
;/
;/\ END  BLOCK			\ mov	%rax,-0x10(%rbp)
;/OP1@ L@ FFFFFF AND d08948 XOR OR	\ mov	%rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040CD4C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CD50 
	DB 0x48,0x8D,0x5,0xFE,0x8C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CD57 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CD5A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CD5E E8 63 74 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CD63 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CD67 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CD6C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CD70 E8 6D 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CD75 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 8040CD79 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CD7E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CD82 E8 6D 76 FF FF 
	call	_OR	; 8040CD87 E8 5F 76 FF FF 
;/0=	M_WL			\ mov   -0x10(%rbp),%rdx
	call	_0equ	; 8040CD8C E8 B1 75 FF FF 
	test	rax,rax	; 8040CD91 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040CD94 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040CD98 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x484C 	; 8040CD9C 
	DB 0xF,0x84,0x76,0x0,0x0,0x0
;/	M\ 38 DTST
;/*	mov	rax,-0x08(rbp)	; 8040CDA2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x38,eax	; 8040CDA6 
	DB 0xB8,0x38,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CDAB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CDAF E8 EE 8E FF FF 
;/	92  OP1@ 1+ C!	\ xchg   %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CDB4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x92,eax	; 8040CDB8 
	DB 0xB8,0x92,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040CDBD 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CDC1 
	DB 0x48,0x8D,0x5,0x8D,0x8C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CDC8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040CDCB 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040CDCF E8 A7 76 FF FF 
	call	_Csave	; 8040CDD4 E8 FC 73 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040CDD9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040CDDD 
	DB 0x48,0x8D,0x5,0xFC,0x8A,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040CDE4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040CDE8 E8 66 8D FF FF 
;/	-5 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040CDED 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x5,rax	; 8040CDF1 
	DB 0x48,0xC7,0xC0,0xFB,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040CDF8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040CDFC E8 4C 7E FF FF 
;/	M\ 39 DTST
;/*	mov	rax,-0x08(rbp)	; 8040CE01 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x39,eax	; 8040CE05 
	DB 0xB8,0x39,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE0A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CE0E E8 8F 8E FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040CE13 
	DB 0xE9,0xC8,0xB7,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND 158d48 XOR \       lea     X(%rip),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040CE18 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040CE1C 
	DB 0x48,0x8D,0x5,0x3F,0x8C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CE23 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE26 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CE2A E8 97 73 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CE2F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CE33 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE38 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CE3C E8 A1 75 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CE41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x158D48,eax	; 8040CE45 
	DB 0xB8,0x48,0x8D,0x15,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE4A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CE4E E8 A1 75 FF FF 
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040CE53 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CE57 
	DB 0x48,0x8D,0x5,0xF7,0x8B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CE5E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE61 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CE65 E8 5C 73 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CE6A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CE6E 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE73 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CE77 E8 66 75 FF FF 
;/DUP	28948 XOR	\ mov     %rax,(%rdx)
	call	_DUP	; 8040CE7C E8 A7 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CE81 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x28948,eax	; 8040CE85 
	DB 0xB8,0x48,0x89,0x2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CE8A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CE8E E8 61 75 FF FF 
;/SWAP	20148 <> AND	\ add     %rax,(%rdx)
	call	_SWAP	; 8040CE93 E8 AA 76 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CE98 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20148,eax	; 8040CE9C 
	DB 0xB8,0x48,0x1,0x2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CEA1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040CEA5 E8 EF 74 FF FF 
	call	_AND	; 8040CEAA E8 33 75 FF FF 
;/ OR  0=
	call	_OR	; 8040CEAF E8 37 75 FF FF 
	call	_0equ	; 8040CEB4 E8 89 74 FF FF 
;/ M_WL  M\ 30 DTST
	test	rax,rax	; 8040CEB9 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040CEBC 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040CEC0 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4985 	; 8040CEC4 
	DB 0xF,0x84,0x87,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040CECA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x30,eax	; 8040CECE 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CED3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CED7 E8 C6 8D FF FF 
;/	OP1@ 1+ C@ 0500 OR
;/*	mov	rax,-0x08(rbp)	; 8040CEDC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CEE0 
	DB 0x48,0x8D,0x5,0x6E,0x8B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CEE7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CEEA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040CEEE E8 88 75 FF FF 
	call	_Cload	; 8040CEF3 E8 D5 72 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CEF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x500,eax	; 8040CEFC 
	DB 0xB8,0x0,0x5,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OR	; 8040CF05 E8 E1 74 FF FF 
;/	OP2@ 1+ W! \	mov    %rax,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040CF0A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040CF0E 
	DB 0x48,0x8D,0x5,0x4D,0x8B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CF15 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF18 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040CF1C E8 5A 75 FF FF 
	call	_Wsave	; 8040CF21 E8 BD 72 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040CF26 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040CF2A 
	DB 0x48,0x8D,0x5,0xAF,0x89,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040CF31 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040CF35 E8 5B 93 FF FF 
;/	M\ 31 DTST
;/*	mov	rax,-0x08(rbp)	; 8040CF3A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x31,eax	; 8040CF3E 
	DB 0xB8,0x31,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF43 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040CF47 E8 56 8D FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040CF4C 
	DB 0xE9,0x8F,0xB6,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND c0c748 XOR	\ movq	$X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040CF51 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040CF55 
	DB 0x48,0x8D,0x5,0x6,0x8B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CF5C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF5F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CF63 E8 5E 72 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CF68 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CF6C 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF71 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CF75 E8 68 74 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CF7A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C748,eax	; 8040CF7E 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF83 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CF87 E8 68 74 FF FF 
;/OP1@ L@ FFFFFF AND 458948 XOR OR	\ mov	%rax,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040CF8C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040CF90 
	DB 0x48,0x8D,0x5,0xBE,0x8A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CF97 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CF9A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040CF9E E8 23 72 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CFA3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040CFA7 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CFAC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040CFB0 E8 2D 74 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040CFB5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040CFB9 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CFBE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040CFC2 E8 2D 74 FF FF 
	call	_OR	; 8040CFC7 E8 1F 74 FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040CFCC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040CFD0 
	DB 0x48,0x8D,0x5,0x71,0x8A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040CFD7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040CFDA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040CFDE E8 98 A4 FF FF 
	call	_OR	; 8040CFE3 E8 3 74 FF FF 
;/  0=
	call	_0equ	; 8040CFE8 E8 55 73 FF FF 
;/ M_WL  M\ 32 DTST
	test	rax,rax	; 8040CFED 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040CFF0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040CFF4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4AFB 	; 8040CFF8 
	DB 0xF,0x84,0xC9,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040CFFE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x32,eax	; 8040D002 
	DB 0xB8,0x32,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D007 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D00B E8 92 8C FF FF 
;/	OP1 8 OPsize!
;/*	mov	rax,-0x08(rbp)	; 8040D010 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D014 
	DB 0x48,0x8D,0x5,0xC5,0x88,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040D01B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x8,eax	; 8040D01F 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D024 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040D028 E8 D 92 FF FF 
;/	45c7  OP1@ 1+ W!
;/*	mov	rax,-0x08(rbp)	; 8040D02D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C7,eax	; 8040D031 
	DB 0xB8,0xC7,0x45,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D036 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D03A 
	DB 0x48,0x8D,0x5,0x14,0x8A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D041 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D044 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040D048 E8 2E 74 FF FF 
	call	_Wsave	; 8040D04D E8 91 71 FF FF 
;/	OP2@ 3 + L@ OP1@ 4 + L! \  movq   $X,0x8(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D052 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D056 
	DB 0x48,0x8D,0x5,0x5,0x8A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D05D 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D060 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040D064 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D069 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D06D E8 A9 73 FF FF 
	call	_Lload	; 8040D072 E8 4F 71 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D077 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D07B 
	DB 0x48,0x8D,0x5,0xD3,0x89,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D082 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D085 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040D089 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D08E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D092 E8 84 73 FF FF 
	call	_Lsave	; 8040D097 E8 56 71 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040D09C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040D0A0 
	DB 0x48,0x8D,0x5,0x41,0x88,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D0A7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040D0AB E8 E5 91 FF FF 
;/	M\ 33 DTST
;/*	mov	rax,-0x08(rbp)	; 8040D0B0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x33,eax	; 8040D0B4 
	DB 0xB8,0x33,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D0B9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D0BD E8 E0 8B FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040D0C2 
	DB 0xE9,0x19,0xB5,0xFF,0xFF
;/
;/OP2@ @ 80000000FF AND B8 XOR \      movq    $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 8040D0C7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D0CB 
	DB 0x48,0x8D,0x5,0x90,0x89,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D0D2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D0D5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D0D9 E8 EB 70 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D0DE 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FF,%rax	; 8040D0E2 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D0EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D0F0 E8 ED 72 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D0F5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040D0F9 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D0FE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D102 E8 ED 72 FF FF 
;/OP1@ @ FFFFFF AND 458948 XOR OR	\	mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D107 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D10B 
	DB 0x48,0x8D,0x5,0x43,0x89,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D112 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D115 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D119 E8 AB 70 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D11E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D122 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D127 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D12B E8 B2 72 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D130 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040D134 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D139 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D13D E8 B2 72 FF FF 
	call	_OR	; 8040D142 E8 A4 72 FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040D147 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D14B 
	DB 0x48,0x8D,0x5,0xF6,0x88,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D152 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D155 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040D159 E8 1D A3 FF FF 
	call	_OR	; 8040D15E E8 88 72 FF FF 
;/0=	M_WL	M\ 70 DTST
	call	_0equ	; 8040D163 E8 DA 71 FF FF 
	test	rax,rax	; 8040D168 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040D16B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040D16F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4C63 	; 8040D173 
	DB 0xF,0x84,0xB6,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040D179 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x70,eax	; 8040D17D 
	DB 0xB8,0x70,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D182 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D186 E8 17 8B FF FF 
;/	OP1@ 3+ C@
;/*	mov	rax,-0x08(rbp)	; 8040D18B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D18F 
	DB 0x48,0x8D,0x5,0xBF,0x88,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D196 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D199 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040D19D E8 D3 72 FF FF 
	call	_Cload	; 8040D1A2 E8 26 70 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040D1A7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D1AB 
	DB 0x48,0x8D,0x5,0x2E,0x87,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D1B2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040D1B6 E8 DA 90 FF FF 
;/	OP1 3 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040D1BB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D1BF 
	DB 0x48,0x8D,0x5,0x1A,0x87,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040D1C6 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040D1CA 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D1CF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040D1D3 E8 1B 8F FF FF 
;/	45c748  OP1 @ L! 
;/*	mov	rax,-0x08(rbp)	; 8040D1D8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C748,eax	; 8040D1DC 
	DB 0xB8,0x48,0xC7,0x45,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D1E1 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D1E5 
	DB 0x48,0x8D,0x5,0xF4,0x86,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040D1EC 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040D1F0 E8 D4 6F FF FF 
	call	_Lsave	; 8040D1F5 E8 F8 6F FF FF 
;/	OP1 @ 3+ C!     \ mov     $0x30,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D1FA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D1FE 
	DB 0x48,0x8D,0x5,0xDB,0x86,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D205 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D209 E8 BB 6F FF FF 
	call	_3add	; 8040D20E E8 62 72 FF FF 
	call	_Csave	; 8040D213 E8 BD 6F FF FF 
;/	M\ 71 DTST
;/*	mov	rax,-0x08(rbp)	; 8040D218 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x71,eax	; 8040D21C 
	DB 0xB8,0x71,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D221 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D225 E8 78 8A FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040D22A 
	DB 0xE9,0xB1,0xB3,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND 058D48 XOR	\	lea     X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040D22F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D233 
	DB 0x48,0x8D,0x5,0x28,0x88,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D23A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D23D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D241 E8 83 6F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D246 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D24A 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D24F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D253 E8 8A 71 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D258 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D48,eax	; 8040D25C 
	DB 0xB8,0x48,0x8D,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D261 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D265 E8 8A 71 FF FF 
;/OP1@ W@ 	00C6 XOR OR	\	movb    $Y,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040D26A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D26E 
	DB 0x48,0x8D,0x5,0xE0,0x87,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D275 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D278 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040D27C E8 50 6F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D281 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC6,eax	; 8040D285 
	DB 0xB8,0xC6,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D28A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D28E E8 61 71 FF FF 
	call	_OR	; 8040D293 E8 53 71 FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040D298 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D29C 
	DB 0x48,0x8D,0x5,0xA5,0x87,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D2A3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D2A6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040D2AA E8 CC A1 FF FF 
	call	_OR	; 8040D2AF E8 37 71 FF FF 
;/0=	M_WL	M\ 8C DTST
	call	_0equ	; 8040D2B4 E8 89 70 FF FF 
	test	rax,rax	; 8040D2B9 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040D2BC 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040D2C0 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4DD4 	; 8040D2C4 
	DB 0xF,0x84,0xD6,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040D2CA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8C,eax	; 8040D2CE 
	DB 0xB8,0x8C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D2D3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D2D7 E8 C6 89 FF FF 
;/	OP2@ 3+ L@ OP2@ 2+ L!
;/*	mov	rax,-0x08(rbp)	; 8040D2DC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D2E0 
	DB 0x48,0x8D,0x5,0x7B,0x87,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D2E7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D2EA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040D2EE E8 82 71 FF FF 
	call	_Lload	; 8040D2F3 E8 CE 6E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D2F8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D2FC 
	DB 0x48,0x8D,0x5,0x5F,0x87,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D303 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D306 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040D30A E8 69 71 FF FF 
	call	_Lsave	; 8040D30F E8 DE 6E FF FF 
;/	OP1@ 2+ C@ OP2@  6 + C!	
;/*	mov	rax,-0x08(rbp)	; 8040D314 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D318 
	DB 0x48,0x8D,0x5,0x36,0x87,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D31F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D322 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040D326 E8 4D 71 FF FF 
	call	_Cload	; 8040D32B E8 9D 6E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D330 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D334 
	DB 0x48,0x8D,0x5,0x27,0x87,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D33B 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D33E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x6,eax	; 8040D342 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D347 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D34B E8 CB 70 FF FF 
	call	_Csave	; 8040D350 E8 80 6E FF FF 
;/	05C6 OP2@ W! \ movb   $0x77,0x9(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040D355 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C6,eax	; 8040D359 
	DB 0xB8,0xC6,0x5,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D35E 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D362 
	DB 0x48,0x8D,0x5,0xF9,0x86,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D369 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D36C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Wsave	; 8040D370 E8 6E 6E FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040D375 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D379 
	DB 0x48,0x8D,0x5,0x60,0x85,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D380 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040D384 E8 C 8F FF FF 
;/	M\ 8D DTST
;/*	mov	rax,-0x08(rbp)	; 8040D389 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8D,eax	; 8040D38D 
	DB 0xB8,0x8D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D392 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D396 E8 7 89 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040D39B 
	DB 0xE9,0x40,0xB2,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND 058D48 XOR	\	lea     X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040D3A0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D3A4 
	DB 0x48,0x8D,0x5,0xB7,0x86,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D3AB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D3AE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D3B2 E8 12 6E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D3B7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D3BB 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D3C0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D3C4 E8 19 70 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D3C9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D48,eax	; 8040D3CD 
	DB 0xB8,0x48,0x8D,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D3D2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D3D6 E8 19 70 FF FF 
;/OP1@ @ FFFFFF AND 00C748 XOR OR	\	movq    $Y,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040D3DB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D3DF 
	DB 0x48,0x8D,0x5,0x6F,0x86,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D3E6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D3E9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D3ED E8 D7 6D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D3F2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D3F6 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D3FB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D3FF E8 DE 6F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D404 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC748,eax	; 8040D408 
	DB 0xB8,0x48,0xC7,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D40D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D411 E8 DE 6F FF FF 
	call	_OR	; 8040D416 E8 D0 6F FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040D41B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D41F 
	DB 0x48,0x8D,0x5,0x22,0x86,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D426 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D429 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040D42D E8 49 A0 FF FF 
	call	_OR	; 8040D432 E8 B4 6F FF FF 
;/0=	M_WL	M\ 82 DTST
	call	_0equ	; 8040D437 E8 6 6F FF FF 
	test	rax,rax	; 8040D43C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040D43F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040D443 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4F72 	; 8040D447 
	DB 0xF,0x84,0xF1,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040D44D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x82,eax	; 8040D451 
	DB 0xB8,0x82,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D456 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D45A E8 43 88 FF FF 
;/	OP1@ 3+ L@
;/*	mov	rax,-0x08(rbp)	; 8040D45F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D463 
	DB 0x48,0x8D,0x5,0xEB,0x85,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D46A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D46D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040D471 E8 FF 6F FF FF 
	call	_Lload	; 8040D476 E8 4B 6D FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040D47B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D47F 
	DB 0x48,0x8D,0x5,0x5A,0x84,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D486 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040D48A E8 6 8E FF FF 
;/	OP1 B OPsize!
;/*	mov	rax,-0x08(rbp)	; 8040D48F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D493 
	DB 0x48,0x8D,0x5,0x46,0x84,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040D49A 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xB,eax	; 8040D49E 
	DB 0xB8,0xB,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D4A3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040D4A7 E8 8E 8D FF FF 
;/	-4 OP1 @ 3+ L+! 
;/*	mov	rax,-0x08(rbp)	; 8040D4AC 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040D4B0 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040D4B7 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D4BB 
	DB 0x48,0x8D,0x5,0x1E,0x84,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040D4C2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040D4C6 E8 FE 6C FF FF 
	call	_3add	; 8040D4CB E8 A5 6F FF FF 
	call	_Laddsave	; 8040D4D0 E8 5A 6D FF FF 
;/	OP1 @ 7 + L! 
;/*	mov	rax,-0x08(rbp)	; 8040D4D5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D4D9 
	DB 0x48,0x8D,0x5,0x0,0x84,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D4E0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D4E4 E8 E0 6C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D4E9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7,eax	; 8040D4ED 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D4F2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040D4F6 E8 20 6F FF FF 
	call	_Lsave	; 8040D4FB E8 F2 6C FF FF 
;/	C7 OP1 @ 1+ C!  \    movq   $Y,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040D500 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC7,eax	; 8040D504 
	DB 0xB8,0xC7,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D509 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D50D 
	DB 0x48,0x8D,0x5,0xCC,0x83,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040D514 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040D518 E8 AC 6C FF FF 
	call	_CHARadd	; 8040D51D E8 59 6F FF FF 
	call	_Csave	; 8040D522 E8 AE 6C FF FF 
;/	M\ 83 DTST
;/*	mov	rax,-0x08(rbp)	; 8040D527 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x83,eax	; 8040D52B 
	DB 0xB8,0x83,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D530 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D534 E8 69 87 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040D539 
	DB 0xE9,0xA2,0xB0,0xFF,0xFF
;/
;/J_COD FE AND 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 8040D53E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_J_COD+0x5 (%rip),rax	; 8040D542 
	DB 0x48,0x8D,0x5,0x2C,0x83,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D549 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D54C 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xFE,eax	; 8040D550 
	DB 0xB8,0xFE,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D555 
	DB 0x48,0x8D,0x6D,0xF0
	call	_AND	; 8040D559 E8 84 6E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D55E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x84,eax	; 8040D562 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D567 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D56B E8 84 6E FF FF 
;/OP2@ @ FFFFFF AND 00B60F XOR OR	\	movzb	(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 8040D570 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D574 
	DB 0x48,0x8D,0x5,0xE7,0x84,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D57B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D57E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D582 E8 42 6C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D587 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D58B 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D590 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D594 E8 49 6E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D599 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB60F,eax	; 8040D59D 
	DB 0xB8,0xF,0xB6,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D5A2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D5A6 E8 49 6E FF FF 
	call	_OR	; 8040D5AB E8 3B 6E FF FF 
;/OP1@ W@		583C XOR OR	\	cmp	$0x58,%al
;/*	mov	rax,-0x08(rbp)	; 8040D5B0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D5B4 
	DB 0x48,0x8D,0x5,0x9A,0x84,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D5BB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D5BE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040D5C2 E8 A 6C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D5C7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x583C,eax	; 8040D5CB 
	DB 0xB8,0x3C,0x58,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D5D0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D5D4 E8 1B 6E FF FF 
	call	_OR	; 8040D5D9 E8 D 6E FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040D5DE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D5E2 
	DB 0x48,0x8D,0x5,0x5F,0x84,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D5E9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D5EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040D5F0 E8 86 9E FF FF 
	call	_OR	; 8040D5F5 E8 F1 6D FF FF 
;/0=	M_WL	M\ 84 DTST
	call	_0equ	; 8040D5FA E8 43 6D FF FF 
	test	rax,rax	; 8040D5FF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040D602 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040D606 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x50A1 	; 8040D60A 
	DB 0xF,0x84,0x5D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040D610 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x84,eax	; 8040D614 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D619 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D61D E8 80 86 FF FF 
;/	583880 	OP2@ L! \ cmpb   $0x58,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040D622 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x583880,eax	; 8040D626 
	DB 0xB8,0x80,0x38,0x58,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D62B 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D62F 
	DB 0x48,0x8D,0x5,0x2C,0x84,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D636 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D639 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 8040D63D E8 B0 6B FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040D642 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D646 
	DB 0x48,0x8D,0x5,0x93,0x82,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D64D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040D651 E8 3F 8C FF FF 
;/	M\ 85 DTST              
;/*	mov	rax,-0x08(rbp)	; 8040D656 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x85,eax	; 8040D65A 
	DB 0xB8,0x85,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D65F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D663 E8 3A 86 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040D668 
	DB 0xE9,0x73,0xAF,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040D66D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D671 
	DB 0x48,0x8D,0x5,0xEA,0x83,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D678 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D67B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040D67F 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D684 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D688 E8 8E 6D FF FF 
	call	_Cload	; 8040D68D E8 3B 6B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D692 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D696 
	DB 0x48,0x8D,0x5,0xAB,0x83,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D69D 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D6A0 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040D6A4 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D6A9 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D6AD E8 69 6D FF FF 
	call	_Cload	; 8040D6B2 E8 16 6B FF FF 
	call	_XOR	; 8040D6B7 E8 38 6D FF FF 
;/OP2@ L@ FFFFFF AND 45c748 XOR OR	\ movq    $-0x1,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D6BC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D6C0 
	DB 0x48,0x8D,0x5,0x9B,0x83,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D6C7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D6CA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040D6CE E8 F3 6A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D6D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D6D7 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D6DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D6E0 E8 FD 6C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D6E5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C748,eax	; 8040D6E9 
	DB 0xB8,0x48,0xC7,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D6EE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D6F2 E8 FD 6C FF FF 
	call	_OR	; 8040D6F7 E8 EF 6C FF FF 
;/OP1@ L@ FFFFFF AND 058d48 XOR OR	\ lea     OPTque+0x5 (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040D6FC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D700 
	DB 0x48,0x8D,0x5,0x4E,0x83,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D707 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D70A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040D70E E8 B3 6A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D713 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D717 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D71C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D720 E8 BD 6C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D725 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58D48,eax	; 8040D729 
	DB 0xB8,0x48,0x8D,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D72E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D732 E8 BD 6C FF FF 
	call	_OR	; 8040D737 E8 AF 6C FF FF 
;/OP0@ L@ FFFFFF AND 558b48 XOR OR	\ mov     -0x10(%rbp),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040D73C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D740 
	DB 0x48,0x8D,0x5,0x1,0x83,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D747 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D74A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040D74E E8 73 6A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D753 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040D757 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D75C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D760 E8 7D 6C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D765 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558B48,eax	; 8040D769 
	DB 0xB8,0x48,0x8B,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D76E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D772 E8 7D 6C FF FF 
	call	_OR	; 8040D777 E8 6F 6C FF FF 
;/  0=
	call	_0equ	; 8040D77C E8 C1 6B FF FF 
;/ M_WL  M\ 34 DTST
	test	rax,rax	; 8040D781 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040D784 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040D788 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x52AE 	; 8040D78C 
	DB 0xF,0x84,0xE8,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040D792 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x34,eax	; 8040D796 
	DB 0xB8,0x34,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D79B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D79F E8 FE 84 FF FF 
;/	89 OP0@ 1+ C!	\ mov    %rdx,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D7A4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x89,eax	; 8040D7A8 
	DB 0xB8,0x89,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D7AD 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D7B1 
	DB 0x48,0x8D,0x5,0x90,0x82,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D7B8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D7BB 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040D7BF E8 B7 6C FF FF 
	call	_Csave	; 8040D7C4 E8 C 6A FF FF 
;/	OP2@ 4+ L@
;/*	mov	rax,-0x08(rbp)	; 8040D7C9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D7CD 
	DB 0x48,0x8D,0x5,0x8E,0x82,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D7D4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D7D7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_4add	; 8040D7DB E8 92 6C FF FF 
	call	_Lload	; 8040D7E0 E8 E1 69 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040D7E5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040D7E9 
	DB 0x48,0x8D,0x5,0xF8,0x80,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D7F0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040D7F4 E8 9C 8A FF FF 
;/	OP0 7 OPinsert
;/*	mov	rax,-0x08(rbp)	; 8040D7F9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040D7FD 
	DB 0x48,0x8D,0x5,0xD4,0x80,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040D804 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x7,eax	; 8040D808 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D80D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 8040D811 E8 AA 89 FF FF 
;/	c2c748 OP1 @ L!	\ movq	$-0x1,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040D816 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC2C748,eax	; 8040D81A 
	DB 0xB8,0x48,0xC7,0xC2,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D81F 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D823 
	DB 0x48,0x8D,0x5,0xB6,0x80,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040D82A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040D82E E8 96 69 FF FF 
	call	_Lsave	; 8040D833 E8 BA 69 FF FF 
;/	OP1 @ 3 + L!	 
;/*	mov	rax,-0x08(rbp)	; 8040D838 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D83C 
	DB 0x48,0x8D,0x5,0x9D,0x80,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D843 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040D847 E8 7D 69 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D84C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040D850 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D855 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040D859 E8 BD 6B FF FF 
	call	_Lsave	; 8040D85E E8 8F 69 FF FF 
;/	M\ 35 DTST
;/*	mov	rax,-0x08(rbp)	; 8040D863 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x35,eax	; 8040D867 
	DB 0xB8,0x35,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D86C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D870 E8 2D 84 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040D875 
	DB 0xE9,0x66,0xAD,0xFF,0xFF
;/
;/OP2@ 2+ W@  OP0@ 2+ W@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040D87A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D87E 
	DB 0x48,0x8D,0x5,0xDD,0x81,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D885 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D888 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040D88C E8 E7 6B FF FF 
	call	_Wload	; 8040D891 E8 3B 69 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D896 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D89A 
	DB 0x48,0x8D,0x5,0xA7,0x81,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D8A1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D8A4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040D8A8 E8 CB 6B FF FF 
	call	_Wload	; 8040D8AD E8 1F 69 FF FF 
	call	_XOR	; 8040D8B2 E8 3D 6B FF FF 
;/OP2@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D8B7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D8BB 
	DB 0x48,0x8D,0x5,0xA0,0x81,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D8C2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D8C5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040D8C9 E8 F8 68 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D8CE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xEFFDFF,eax	; 8040D8D2 
	DB 0xB8,0xFF,0xFD,0xEF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D8D7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D8DB E8 2 6B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D8E0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040D8E4 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D8E9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D8ED E8 2 6B FF FF 
	call	_OR	; 8040D8F2 E8 F4 6A FF FF 
;/OP1@ ?ChRAX<>     OR \ 0 not chench rax
;/*	mov	rax,-0x08(rbp)	; 8040D8F7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D8FB 
	DB 0x48,0x8D,0x5,0x53,0x81,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D902 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D905 
	DB 0x48,0x8D,0x6D,0xF8
	call	_queChRAXlessgreat	; 8040D909 E8 2A 9D FF FF 
	call	_OR	; 8040D90E E8 D8 6A FF FF 
;/OP2@ 3 + C@ OP1@ 3 + C@ = OR
;/*	mov	rax,-0x08(rbp)	; 8040D913 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040D917 
	DB 0x48,0x8D,0x5,0x44,0x81,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D91E 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D921 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040D925 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D92A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D92E E8 E8 6A FF FF 
	call	_Cload	; 8040D933 E8 95 68 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D938 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040D93C 
	DB 0x48,0x8D,0x5,0x12,0x81,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D943 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040D946 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040D94A 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040D94F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040D953 E8 C3 6A FF FF 
	call	_Cload	; 8040D958 E8 70 68 FF FF 
	call	_equ	; 8040D95D E8 D8 69 FF FF 
	call	_OR	; 8040D962 E8 84 6A FF FF 
;/OP0@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040D967 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040D96B 
	DB 0x48,0x8D,0x5,0xD6,0x80,0xFF,0xFF
;/*	mov	(rax),rax	; 8040D972 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D975 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040D979 E8 48 68 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D97E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xEFFDFF,eax	; 8040D982 
	DB 0xB8,0xFF,0xFD,0xEF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D987 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040D98B E8 52 6A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040D990 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040D994 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D999 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040D99D E8 52 6A FF FF 
	call	_OR	; 8040D9A2 E8 44 6A FF FF 
;/  0=
	call	_0equ	; 8040D9A7 E8 96 69 FF FF 
;/ M_WL  M\ 9C DTST
	test	rax,rax	; 8040D9AC 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040D9AF 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040D9B3 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5442 	; 8040D9B7 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040D9BD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9C,eax	; 8040D9C1 
	DB 0xB8,0x9C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040D9C6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040D9CA E8 D3 82 FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040D9CF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040D9D3 
	DB 0x48,0x8D,0x5,0x6,0x7F,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D9DA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040D9DE E8 70 81 FF FF 
;/	-4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040D9E3 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040D9E7 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040D9EE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040D9F2 E8 56 72 FF FF 
;/	M\ 9D DTST
;/*	mov	rax,-0x08(rbp)	; 8040D9F7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9D,eax	; 8040D9FB 
	DB 0xB8,0x9D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA00 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DA04 E8 99 82 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040DA09 
	DB 0xE9,0xD2,0xAB,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND 058b48 XOR \ mov X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040DA0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DA12 
	DB 0x48,0x8D,0x5,0x49,0x80,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DA19 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA1C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DA20 E8 A1 67 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DA25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DA29 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DA32 E8 AB 69 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DA37 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58B48,eax	; 8040DA3B 
	DB 0xB8,0x48,0x8B,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA40 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DA44 E8 AB 69 FF FF 
;/OP1@ C@ 50 XOR OR \ Push    %rax
;/*	mov	rax,-0x08(rbp)	; 8040DA49 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DA4D 
	DB 0x48,0x8D,0x5,0x1,0x80,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DA54 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA57 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040DA5B E8 6D 67 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DA60 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x50,eax	; 8040DA64 
	DB 0xB8,0x50,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA69 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DA6D E8 82 69 FF FF 
	call	_OR	; 8040DA72 E8 74 69 FF FF 
;/OP0@ NEWRAX0+ OR \ mov 0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040DA77 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040DA7B 
	DB 0x48,0x8D,0x5,0xC6,0x7F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DA82 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DA85 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040DA89 E8 ED 99 FF FF 
	call	_OR	; 8040DA8E E8 58 69 FF FF 
;/0= 	M_WL	M\ 44 DTST
	call	_0equ	; 8040DA93 E8 AA 68 FF FF 
	test	rax,rax	; 8040DA98 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040DA9B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040DA9F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x555E 	; 8040DAA3 
	DB 0xF,0x84,0x81,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040DAA9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44,eax	; 8040DAAD 
	DB 0xB8,0x44,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DAB2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DAB6 E8 E7 81 FF FF 
;/	35FF OP2@ 1+ W! \ push   X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040DABB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x35FF,eax	; 8040DABF 
	DB 0xB8,0xFF,0x35,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DAC4 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DAC8 
	DB 0x48,0x8D,0x5,0x93,0x7F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DACF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DAD2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040DAD6 E8 A0 69 FF FF 
	call	_Wsave	; 8040DADB E8 3 67 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040DAE0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040DAE4 
	DB 0x48,0x8D,0x5,0xF5,0x7D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040DAEB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040DAEF E8 A1 87 FF FF 
;/	OP1 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040DAF4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040DAF8 
	DB 0x48,0x8D,0x5,0xE1,0x7D,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040DAFF 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 8040DB03 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040DB0A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040DB0E E8 E0 85 FF FF 
;/	M\ 45 DTST
;/*	mov	rax,-0x08(rbp)	; 8040DB13 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45,eax	; 8040DB17 
	DB 0xB8,0x45,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DB1C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DB20 E8 7D 81 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040DB25 
	DB 0xE9,0xB6,0xAA,0xFF,0xFF
;/
;/OP2@ C@ 58 XOR	\ pop    %rax
;/*	mov	rax,-0x08(rbp)	; 8040DB2A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DB2E 
	DB 0x48,0x8D,0x5,0x2D,0x7F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DB35 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DB38 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040DB3C E8 8C 66 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DB41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58,eax	; 8040DB45 
	DB 0xB8,0x58,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DB4A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DB4E E8 A1 68 FF FF 
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040DB53 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DB57 
	DB 0x48,0x8D,0x5,0xF7,0x7E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DB5E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DB61 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DB65 E8 5C 66 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DB6A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DB6E 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DB73 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DB77 E8 66 68 FF FF 
;/ DUP	058948 XOR \ mov %rax,X(%rip)
	call	_DUP	; 8040DB7C E8 A7 69 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DB81 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58948,eax	; 8040DB85 
	DB 0xB8,0x48,0x89,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DB8A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DB8E E8 61 68 FF FF 
;/ SWAP	458948 <>  AND OR \ mov %rax,X(%rbp)
	call	_SWAP	; 8040DB93 E8 AA 69 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DB98 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040DB9C 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DBA1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040DBA5 E8 EF 67 FF FF 
	call	_AND	; 8040DBAA E8 33 68 FF FF 
	call	_OR	; 8040DBAF E8 37 68 FF FF 
;/OP0@ NEWRAX0+ OR	\ mov 0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040DBB4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040DBB8 
	DB 0x48,0x8D,0x5,0x89,0x7E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DBBF 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DBC2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040DBC6 E8 B0 98 FF FF 
	call	_OR	; 8040DBCB E8 1B 68 FF FF 
;/0=	M_WL	M\ 64 DTST
	call	_0equ	; 8040DBD0 E8 6D 67 FF FF 
	test	rax,rax	; 8040DBD5 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040DBD8 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040DBDC 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x56AF 	; 8040DBE0 
	DB 0xF,0x84,0x95,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040DBE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x64,eax	; 8040DBEA 
	DB 0xB8,0x64,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DBEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DBF3 E8 AA 80 FF FF 
;/	8F OP1@ 1+ C! \ pop   X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040DBF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8F,eax	; 8040DBFC 
	DB 0xB8,0x8F,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DC01 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DC05 
	DB 0x48,0x8D,0x5,0x49,0x7E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DC0C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DC0F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040DC13 E8 63 68 FF FF 
	call	_Csave	; 8040DC18 E8 B8 65 FF FF 
;/	-64 DTST
;/*	mov	rax,-0x08(rbp)	; 8040DC1D 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x64,rax	; 8040DC21 
	DB 0x48,0xC7,0xC0,0x9C,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040DC28 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DC2C E8 71 80 FF FF 
;/	OP1 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040DC31 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040DC35 
	DB 0x48,0x8D,0x5,0xA4,0x7C,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040DC3C 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 8040DC40 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040DC47 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040DC4B E8 A3 84 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040DC50 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040DC54 
	DB 0x48,0x8D,0x5,0x8D,0x7C,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040DC5B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040DC5F E8 31 86 FF FF 
;/	M\ 63 DTST
;/*	mov	rax,-0x08(rbp)	; 8040DC64 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x63,eax	; 8040DC68 
	DB 0xB8,0x63,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DC6D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DC71 E8 2C 80 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040DC76 
	DB 0xE9,0x65,0xA9,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND d08948 XOR	\  mov    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040DC7B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DC7F 
	DB 0x48,0x8D,0x5,0xDC,0x7D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DC86 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DC89 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DC8D E8 34 65 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DC92 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DC96 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DC9B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DC9F E8 3E 67 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 8040DCA8 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DCB1 E8 3E 67 FF FF 
;/OP1@ L@ FFFFFF AND c08548 XOR OR \  test    %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 8040DCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DCBA 
	DB 0x48,0x8D,0x5,0x94,0x7D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DCC1 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DCC4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DCC8 E8 F9 64 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DCCD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DCD1 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DCD6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DCDA E8 3 67 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DCDF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC08548,eax	; 8040DCE3 
	DB 0xB8,0x48,0x85,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DCE8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DCEC E8 3 67 FF FF 
	call	_OR	; 8040DCF1 E8 F5 66 FF FF 
;/OP0@ NEWRAX0 OR	\ mov 0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040DCF6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040DCFA 
	DB 0x48,0x8D,0x5,0x47,0x7D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DD01 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DD04 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0	; 8040DD08 E8 7F 95 FF FF 
	call	_OR	; 8040DD0D E8 D9 66 FF FF 
;/0=	M_WL	M\ 66 DTST
	call	_0equ	; 8040DD12 E8 2B 66 FF FF 
	test	rax,rax	; 8040DD17 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040DD1A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040DD1E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x57BE 	; 8040DD22 
	DB 0xF,0x84,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040DD28 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x66,eax	; 8040DD2C 
	DB 0xB8,0x66,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DD31 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DD35 E8 68 7F FF FF 
;/	d285 OP2@ 1+ W! \ test   %rdx,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040DD3A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD285,eax	; 8040DD3E 
	DB 0xB8,0x85,0xD2,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DD43 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DD47 
	DB 0x48,0x8D,0x5,0x14,0x7D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DD4E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DD51 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040DD55 E8 21 67 FF FF 
	call	_Wsave	; 8040DD5A E8 84 64 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040DD5F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040DD63 
	DB 0x48,0x8D,0x5,0x76,0x7B,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040DD6A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040DD6E E8 22 85 FF FF 
;/	M\ 67 DTST
;/*	mov	rax,-0x08(rbp)	; 8040DD73 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x67,eax	; 8040DD77 
	DB 0xB8,0x67,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DD7C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DD80 E8 1D 7F FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040DD85 
	DB 0xE9,0x56,0xA8,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND d08948 XOR	\  mov    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040DD8A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DD8E 
	DB 0x48,0x8D,0x5,0xCD,0x7C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DD95 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DD98 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DD9C E8 25 64 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DDA1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DDA5 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DDAA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DDAE E8 2F 66 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DDB3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 8040DDB7 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DDBC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DDC0 E8 2F 66 FF FF 
;/OP1@ L@ FFFFFF AND 458948 XOR OR \  mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040DDC5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DDC9 
	DB 0x48,0x8D,0x5,0x85,0x7C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DDD0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DDD3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DDD7 E8 EA 63 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DDDC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DDE0 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DDE5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DDE9 E8 F4 65 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DDEE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040DDF2 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DDF7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DDFB E8 F4 65 FF FF 
	call	_OR	; 8040DE00 E8 E6 65 FF FF 
;/OP0@ NEWRAX0 OR	\ mov 0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040DE05 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040DE09 
	DB 0x48,0x8D,0x5,0x38,0x7C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DE10 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DE13 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0	; 8040DE17 E8 70 94 FF FF 
	call	_OR	; 8040DE1C E8 CA 65 FF FF 
;/0= \ 0 and
	call	_0equ	; 8040DE21 E8 1C 65 FF FF 
;/ M_WL	M\ 98 DTST
	test	rax,rax	; 8040DE26 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040DE29 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040DE2D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x58CD 	; 8040DE31 
	DB 0xF,0x84,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040DE37 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x98,eax	; 8040DE3B 
	DB 0xB8,0x98,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DE40 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DE44 E8 59 7E FF FF 
;/	55 OP1@ 2+ C! \ mov    %rdx,-0x8(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040DE49 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x55,eax	; 8040DE4D 
	DB 0xB8,0x55,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DE52 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DE56 
	DB 0x48,0x8D,0x5,0xF8,0x7B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DE5D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DE60 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040DE64 E8 F 66 FF FF 
	call	_Csave	; 8040DE69 E8 67 63 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040DE6E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040DE72 
	DB 0x48,0x8D,0x5,0x6F,0x7A,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040DE79 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040DE7D E8 13 84 FF FF 
;/	M\ 99 DTST
;/*	mov	rax,-0x08(rbp)	; 8040DE82 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x99,eax	; 8040DE86 
	DB 0xB8,0x99,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DE8B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040DE8F E8 E 7E FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040DE94 
	DB 0xE9,0x47,0xA7,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040DE99 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DE9D 
	DB 0x48,0x8D,0x5,0xBE,0x7B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DEA4 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DEA7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040DEAB 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DEB0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040DEB4 E8 62 65 FF FF 
	call	_Cload	; 8040DEB9 E8 F 63 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DEBE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040DEC2 
	DB 0x48,0x8D,0x5,0x7F,0x7B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DEC9 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DECC 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040DED0 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DED5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040DED9 E8 3D 65 FF FF 
	call	_Cload	; 8040DEDE E8 EA 62 FF FF 
	call	_XOR	; 8040DEE3 E8 C 65 FF FF 
;/OP2@ 3 + C@  OP1@ 3 + C@ = OR
;/*	mov	rax,-0x08(rbp)	; 8040DEE8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DEEC 
	DB 0x48,0x8D,0x5,0x6F,0x7B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DEF3 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DEF6 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040DEFA 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DEFF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040DF03 E8 13 65 FF FF 
	call	_Cload	; 8040DF08 E8 C0 62 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DF0D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DF11 
	DB 0x48,0x8D,0x5,0x3D,0x7B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DF18 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040DF1B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040DF1F 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040DF24 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040DF28 E8 EE 64 FF FF 
	call	_Cload	; 8040DF2D E8 9B 62 FF FF 
	call	_equ	; 8040DF32 E8 3 64 FF FF 
	call	_OR	; 8040DF37 E8 AF 64 FF FF 
;/OP2@ L@ FFFFFF AND 558948 XOR OR \ mov     %rdx,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040DF3C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040DF40 
	DB 0x48,0x8D,0x5,0x1B,0x7B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DF47 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DF4A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DF4E E8 73 62 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DF53 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DF57 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DF5C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DF60 E8 7D 64 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DF65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558948,eax	; 8040DF69 
	DB 0xB8,0x48,0x89,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DF6E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DF72 E8 7D 64 FF FF 
	call	_OR	; 8040DF77 E8 6F 64 FF FF 
;/OP1@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,-0x18(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040DF7C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040DF80 
	DB 0x48,0x8D,0x5,0xCE,0x7A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DF87 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DF8A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DF8E E8 33 62 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DF93 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DF97 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DF9C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DFA0 E8 3D 64 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DFA5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040DFA9 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DFAE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DFB2 E8 3D 64 FF FF 
	call	_OR	; 8040DFB7 E8 2F 64 FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040DFBC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040DFC0 
	DB 0x48,0x8D,0x5,0x81,0x7A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040DFC7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DFCA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040DFCE E8 F3 61 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DFD3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040DFD7 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DFDC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040DFE0 E8 FD 63 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040DFE5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040DFE9 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040DFEE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040DFF2 E8 FD 63 FF FF 
	call	_OR	; 8040DFF7 E8 EF 63 FF FF 
;/0=	M_WL	M\ 5C DTST
	call	_0equ	; 8040DFFC E8 41 63 FF FF 
	test	rax,rax	; 8040E001 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E004 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E008 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5AA8 	; 8040E00C 
	DB 0xF,0x84,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E012 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C,eax	; 8040E016 
	DB 0xB8,0x5C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E01B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E01F E8 7E 7C FF FF 
;/   d089 OP0@ 1+ W! -1 ALLOT \ 	mov    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040E024 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD089,eax	; 8040E028 
	DB 0xB8,0x89,0xD0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E02D 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E031 
	DB 0x48,0x8D,0x5,0x10,0x7A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E038 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E03B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040E03F E8 37 64 FF FF 
	call	_Wsave	; 8040E044 E8 9A 61 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E049 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040E04D 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E054 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040E058 E8 F0 6B FF FF 
;/		M\ 5B DTST
;/*	mov	rax,-0x08(rbp)	; 8040E05D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5B,eax	; 8040E061 
	DB 0xB8,0x5B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E066 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E06A E8 33 7C FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E06F 
	DB 0xE9,0x6C,0xA5,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040E074 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E078 
	DB 0x48,0x8D,0x5,0xE3,0x79,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E07F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E082 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E086 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E08B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E08F E8 87 63 FF FF 
	call	_Cload	; 8040E094 E8 34 61 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E099 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E09D 
	DB 0x48,0x8D,0x5,0xA4,0x79,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E0A4 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E0A7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E0AB 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E0B0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E0B4 E8 62 63 FF FF 
	call	_Cload	; 8040E0B9 E8 F 61 FF FF 
	call	_XOR	; 8040E0BE E8 31 63 FF FF 
;/OP2@ L@ FFFFFF AND 458948 XOR OR \      mov     %rax,X(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040E0C3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E0C7 
	DB 0x48,0x8D,0x5,0x94,0x79,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E0CE 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E0D1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E0D5 E8 EC 60 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E0DA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E0DE 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E0E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E0E7 E8 F6 62 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E0EC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040E0F0 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E0F5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E0F9 E8 F6 62 FF FF 
	call	_OR	; 8040E0FE E8 E8 62 FF FF 
;/OP1@ @  80000000FF AND B8 XOR OR \      movq    $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 8040E103 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E107 
	DB 0x48,0x8D,0x5,0x47,0x79,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E10E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E111 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E115 E8 AF 60 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E11A 
	DB 0x48,0x89,0x45,0xF8
;/*	movabs	$0x80000000FF,%rax	; 8040E11E 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E128 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E12C E8 B1 62 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E131 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040E135 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E13A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E13E E8 B1 62 FF FF 
	call	_OR	; 8040E143 E8 A3 62 FF FF 
;/OP0@ @ FFFFFF AND 453948 XOR	\	cmp     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040E148 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E14C 
	DB 0x48,0x8D,0x5,0xF5,0x78,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E153 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E156 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E15A E8 6A 60 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E15F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E163 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E168 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E16C E8 71 62 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E171 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x453948,eax	; 8040E175 
	DB 0xB8,0x48,0x39,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E17A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E17E E8 71 62 FF FF 
;/OP0@ L@ ADD|OR|AND|XOR<> AND OR \	__  X(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040E183 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E187 
	DB 0x48,0x8D,0x5,0xBA,0x78,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E18E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E191 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E195 E8 2C 60 FF FF 
	call	_ADDlORlANDlXORlessgreat	; 8040E19A E8 7B 83 FF FF 
	call	_AND	; 8040E19F E8 3E 62 FF FF 
	call	_OR	; 8040E1A4 E8 42 62 FF FF 
;/0=	M_WL	M\ 4A DTST
	call	_0equ	; 8040E1A9 E8 94 61 FF FF 
	test	rax,rax	; 8040E1AE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E1B1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E1B5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5D39 	; 8040E1B9 
	DB 0xF,0x84,0x46,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E1BF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4A,eax	; 8040E1C3 
	DB 0xB8,0x4A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E1C8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E1CC E8 D1 7A FF FF 
;/	OP1@ 1+ L@ 
;/*	mov	rax,-0x08(rbp)	; 8040E1D1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E1D5 
	DB 0x48,0x8D,0x5,0x79,0x78,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E1DC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E1DF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040E1E3 E8 93 62 FF FF 
	call	_Lload	; 8040E1E8 E8 D9 5F FF FF 
;/	6 OP0@ 1+ XOR! 
;/*	mov	rax,-0x08(rbp)	; 8040E1ED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6,eax	; 8040E1F1 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E1F6 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E1FA 
	DB 0x48,0x8D,0x5,0x47,0x78,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E201 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E204 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040E208 E8 6E 62 FF FF 
	call	_XORsave	; 8040E20D E8 4B 60 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040E212 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040E216 
	DB 0x48,0x8D,0x5,0xC3,0x76,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E21D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040E221 E8 6F 80 FF FF 
;/        2 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040E226 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040E22A 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E22F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040E233 E8 15 6A FF FF 
;/        OP0 @ 2+ L!
;/*	mov	rax,-0x08(rbp)	; 8040E238 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040E23C 
	DB 0x48,0x8D,0x5,0x95,0x76,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E243 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E247 E8 7D 5F FF FF 
	call	_2add	; 8040E24C E8 27 62 FF FF 
	call	_Lsave	; 8040E251 E8 9C 5F FF FF 
;/	OP0 @ W@ 3F48 =
;/*	mov	rax,-0x08(rbp)	; 8040E256 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040E25A 
	DB 0x48,0x8D,0x5,0x77,0x76,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E261 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E265 E8 5F 5F FF FF 
	call	_Wload	; 8040E26A E8 62 5F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E26F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3F48,eax	; 8040E273 
	DB 0xB8,0x48,0x3F,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E278 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 8040E27C E8 B9 60 FF FF 
;/	IF	3D48 OP0 @ W!	\ cmp    $0x30,%rax
	test	rax,rax	; 8040E281 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E284 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E288 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5D22 	; 8040E28C 
	DB 0xF,0x84,0x5C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E292 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3D48,eax	; 8040E296 
	DB 0xB8,0x48,0x3D,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E29B 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040E29F 
	DB 0x48,0x8D,0x5,0x32,0x76,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040E2A6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040E2AA E8 1A 5F FF FF 
	call	_Wsave	; 8040E2AF E8 2F 5F FF FF 
;/		SetOP B8 C, OP1 @ 2+ L@ L, \ movq    $0x30,%rax
	call	_SetOP	; 8040E2B4 E8 10 78 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E2B9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040E2BD 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E2C2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040E2C6 E8 3 6A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E2CB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040E2CF 
	DB 0x48,0x8D,0x5,0xA,0x76,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E2D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E2DA E8 EA 5E FF FF 
	call	_2add	; 8040E2DF E8 94 61 FF FF 
	call	_Lload	; 8040E2E4 E8 DD 5E FF FF 
	call	_Lcom	; 8040E2E9 E8 A6 69 FF FF 
;/	THEN
;/	M\ 4B DTST
;/*	mov	rax,-0x08(rbp)	; 8040E2EE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4B,eax	; 8040E2F2 
	DB 0xB8,0x4B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E2F7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E2FB E8 A2 79 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E300 
	DB 0xE9,0xDB,0xA2,0xFF,0xFF
;/
;/OP2@ L@  24048B48  XOR		\ movq    (%rsp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040E305 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E309 
	DB 0x48,0x8D,0x5,0x52,0x77,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E310 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E313 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E317 E8 AA 5E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E31C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x24048B48,eax	; 8040E320 
	DB 0xB8,0x48,0x8B,0x4,0x24
;/*	lea	-0x08(rbp),rbp	; 8040E325 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E329 E8 C6 60 FF FF 
;/OP1@ @ FFFFFF AND F88348 XOR OR	\ cmp     $-2,%rax
;/*	mov	rax,-0x08(rbp)	; 8040E32E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E332 
	DB 0x48,0x8D,0x5,0x1C,0x77,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E339 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E33C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E340 E8 84 5E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E345 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E349 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E34E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E352 E8 8B 60 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E357 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF88348,eax	; 8040E35B 
	DB 0xB8,0x48,0x83,0xF8,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E360 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E364 E8 8B 60 FF FF 
	call	_OR	; 8040E369 E8 7D 60 FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040E36E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E372 
	DB 0x48,0x8D,0x5,0xCF,0x76,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E379 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E37C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040E380 E8 F6 90 FF FF 
	call	_OR	; 8040E385 E8 61 60 FF FF 
;/0=	M_WL	M\ 72 DTST
	call	_0equ	; 8040E38A E8 B3 5F FF FF 
	test	rax,rax	; 8040E38F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E392 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E396 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5E4E 	; 8040E39A 
	DB 0xF,0x84,0x7A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E3A0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x72,eax	; 8040E3A4 
	DB 0xB8,0x72,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E3A9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E3AD E8 F0 78 FF FF 
;/	OP1 1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040E3B2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040E3B6 
	DB 0x48,0x8D,0x5,0x23,0x75,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040E3BD 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x1,eax	; 8040E3C1 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E3C6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040E3CA E8 24 7D FF FF 
;/	243c8348  OP1@ L!  \ cmpq   $-2,(%rsp)
;/*	mov	rax,-0x08(rbp)	; 8040E3CF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x243C8348,eax	; 8040E3D3 
	DB 0xB8,0x48,0x83,0x3C,0x24
;/*	mov	rax,-0x10(rbp)	; 8040E3D8 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E3DC 
	DB 0x48,0x8D,0x5,0x72,0x76,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E3E3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E3E6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Lsave	; 8040E3EA E8 3 5E FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040E3EF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040E3F3 
	DB 0x48,0x8D,0x5,0xEE,0x74,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E3FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040E3FE E8 92 7E FF FF 
;/	M\ 71 DTST
;/*	mov	rax,-0x08(rbp)	; 8040E403 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x71,eax	; 8040E407 
	DB 0xB8,0x71,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E40C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E410 E8 8D 78 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E415 
	DB 0xE9,0xC6,0xA1,0xFF,0xFF
;/
;/OP2@ NEWRAX0
;/*	mov	rax,-0x08(rbp)	; 8040E41A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E41E 
	DB 0x48,0x8D,0x5,0x3D,0x76,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E425 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E428 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0	; 8040E42C E8 5B 8E FF FF 
;/OP1@ AX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040E431 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E435 
	DB 0x48,0x8D,0x5,0x19,0x76,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E43C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E43F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AX_applylessgreat	; 8040E443 E8 79 90 FF FF 
	call	_OR	; 8040E448 E8 9E 5F FF FF 
;/OP0@ NEWRAX0+ OR
;/*	mov	rax,-0x08(rbp)	; 8040E44D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E451 
	DB 0x48,0x8D,0x5,0xF0,0x75,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E458 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E45B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 8040E45F E8 17 90 FF FF 
	call	_OR	; 8040E464 E8 82 5F FF FF 
;/0=	M_WL	M\ 72 DTST
	call	_0equ	; 8040E469 E8 D4 5E FF FF 
	test	rax,rax	; 8040E46E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E471 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E475 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x5EF0 	; 8040E479 
	DB 0xF,0x84,0x3D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E47F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x72,eax	; 8040E483 
	DB 0xB8,0x72,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E488 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E48C E8 11 78 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040E491 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040E495 
	DB 0x48,0x8D,0x5,0x4C,0x74,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E49C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040E4A0 E8 F0 7D FF FF 
;/	M\ 71 DTST
;/*	mov	rax,-0x08(rbp)	; 8040E4A5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x71,eax	; 8040E4A9 
	DB 0xB8,0x71,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E4AE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E4B2 E8 EB 77 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E4B7 
	DB 0xE9,0x24,0xA1,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040E4BC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E4C0 
	DB 0x48,0x8D,0x5,0x9B,0x75,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E4C7 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E4CA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E4CE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E4D3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E4D7 E8 3F 5F FF FF 
	call	_Cload	; 8040E4DC E8 EC 5C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E4E1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E4E5 
	DB 0x48,0x8D,0x5,0x5C,0x75,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E4EC 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E4EF 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E4F3 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E4F8 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E4FC E8 1A 5F FF FF 
	call	_Cload	; 8040E501 E8 C7 5C FF FF 
	call	_XOR	; 8040E506 E8 E9 5E FF FF 
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,X(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040E50B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E50F 
	DB 0x48,0x8D,0x5,0x4C,0x75,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E516 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E519 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E51D E8 A4 5C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E522 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E526 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E52B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E52F E8 AE 5E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E534 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040E538 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E53D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E541 E8 AE 5E FF FF 
	call	_OR	; 8040E546 E8 A0 5E FF FF 
;/OP1@ L@ 24048B48 XOR		\ movq    (%rsp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040E54B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E54F 
	DB 0x48,0x8D,0x5,0xFF,0x74,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E556 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E559 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E55D E8 64 5C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E562 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x24048B48,eax	; 8040E566 
	DB 0xB8,0x48,0x8B,0x4,0x24
;/*	lea	-0x08(rbp),rbp	; 8040E56B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E56F E8 80 5E FF FF 
;/OP1@ L@ FFFFFF AND 058B48 <> AND OR \       mov X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040E574 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E578 
	DB 0x48,0x8D,0x5,0xD6,0x74,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E57F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E582 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E586 E8 3B 5C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E58B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E58F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E594 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E598 E8 45 5E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E59D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58B48,eax	; 8040E5A1 
	DB 0xB8,0x48,0x8B,0x5,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E5A6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040E5AA E8 EA 5D FF FF 
	call	_AND	; 8040E5AF E8 2E 5E FF FF 
	call	_OR	; 8040E5B4 E8 32 5E FF FF 
;/OP0@ L@ ADD|OR|AND|XOR<> OR	\ __  X(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040E5B9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E5BD 
	DB 0x48,0x8D,0x5,0x84,0x74,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E5C4 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E5C7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040E5CB E8 F6 5B FF FF 
	call	_ADDlORlANDlXORlessgreat	; 8040E5D0 E8 45 7F FF FF 
	call	_OR	; 8040E5D5 E8 11 5E FF FF 
;/0=	M_WL	M\ 62 DTST
	call	_0equ	; 8040E5DA E8 63 5D FF FF 
	test	rax,rax	; 8040E5DF 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E5E2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E5E6 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x60AD 	; 8040E5EA 
	DB 0xF,0x84,0x89,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E5F0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x62,eax	; 8040E5F4 
	DB 0xB8,0x62,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E5F9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E5FD E8 A0 76 FF FF 
;/	OP0@ 1+ C@  OP1@ 1+ C!	\  add    (%rsp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040E602 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E606 
	DB 0x48,0x8D,0x5,0x3B,0x74,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E60D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E610 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040E614 E8 62 5E FF FF 
	call	_Cload	; 8040E619 E8 AF 5B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E61E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E622 
	DB 0x48,0x8D,0x5,0x2C,0x74,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E629 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E62C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040E630 E8 46 5E FF FF 
	call	_Csave	; 8040E635 E8 9B 5B FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040E63A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040E63E 
	DB 0x48,0x8D,0x5,0x9B,0x72,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E645 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040E649 E8 5 75 FF FF 
;/	-4 ALLOT	
;/*	mov	rax,-0x08(rbp)	; 8040E64E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040E652 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E659 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040E65D E8 EB 65 FF FF 
;/	M\ 63 DTST
;/*	mov	rax,-0x08(rbp)	; 8040E662 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x63,eax	; 8040E666 
	DB 0xB8,0x63,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E66B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E66F E8 2E 76 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E674 
	DB 0xE9,0x67,0x9F,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040E679 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E67D 
	DB 0x48,0x8D,0x5,0xDE,0x73,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E684 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E687 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E68B 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E690 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E694 E8 82 5D FF FF 
	call	_Cload	; 8040E699 E8 2F 5B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E69E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E6A2 
	DB 0x48,0x8D,0x5,0x9F,0x73,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E6A9 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E6AC 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E6B0 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E6B5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E6B9 E8 5D 5D FF FF 
	call	_Cload	; 8040E6BE E8 A 5B FF FF 
	call	_XOR	; 8040E6C3 E8 2C 5D FF FF 
;/OP2@ @ FFFFFF AND 558948 XOR OR \ mov     %rdx,-0x18(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040E6C8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E6CC 
	DB 0x48,0x8D,0x5,0x8F,0x73,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E6D3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E6D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E6DA E8 EA 5A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E6DF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E6E3 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E6E8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E6EC E8 F1 5C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E6F1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558948,eax	; 8040E6F5 
	DB 0xB8,0x48,0x89,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E6FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E6FE E8 F1 5C FF FF 
	call	_OR	; 8040E703 E8 E3 5C FF FF 
;/OP1@ DX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040E708 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E70C 
	DB 0x48,0x8D,0x5,0x42,0x73,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E713 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E716 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DX_applylessgreat	; 8040E71A E8 2C 92 FF FF 
	call	_OR	; 8040E71F E8 C7 5C FF FF 
;/OP0@ @ FFFFFF AND 558b48 XOR OR \ mov     -0x18(%rbp),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040E724 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E728 
	DB 0x48,0x8D,0x5,0x19,0x73,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E72F 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E732 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E736 E8 8E 5A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E73B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E73F 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E744 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E748 E8 95 5C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E74D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558B48,eax	; 8040E751 
	DB 0xB8,0x48,0x8B,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E756 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E75A E8 95 5C FF FF 
	call	_OR	; 8040E75F E8 87 5C FF FF 
;/0=	M_WL	M\ 60 DTST
	call	_0equ	; 8040E764 E8 D9 5B FF FF 
	test	rax,rax	; 8040E769 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E76C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E770 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x61FF 	; 8040E774 
	DB 0xF,0x84,0x51,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E77A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x60,eax	; 8040E77E 
	DB 0xB8,0x60,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E783 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E787 E8 16 75 FF FF 
;/         OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040E78C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040E790 
	DB 0x48,0x8D,0x5,0x49,0x71,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E797 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040E79B E8 B3 73 FF FF 
;/        -4 ALLOT	
;/*	mov	rax,-0x08(rbp)	; 8040E7A0 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040E7A4 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E7AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040E7AF E8 99 64 FF FF 
;/	M\ 61 DTST
;/*	mov	rax,-0x08(rbp)	; 8040E7B4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x61,eax	; 8040E7B8 
	DB 0xB8,0x61,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E7BD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E7C1 E8 DC 74 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E7C6 
	DB 0xE9,0x15,0x9E,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 2+ C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040E7CB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E7CF 
	DB 0x48,0x8D,0x5,0x8C,0x72,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E7D6 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E7D9 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E7DD 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E7E2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E7E6 E8 30 5C FF FF 
	call	_Cload	; 8040E7EB E8 DD 59 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E7F0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E7F4 
	DB 0x48,0x8D,0x5,0x4D,0x72,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E7FB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E7FE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040E802 E8 71 5C FF FF 
	call	_Cload	; 8040E807 E8 C1 59 FF FF 
	call	_XOR	; 8040E80C E8 E3 5B FF FF 
;/OP2@ @ FFFFFF AND 45C748 XOR OR \ movq    $0x0,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040E811 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E815 
	DB 0x48,0x8D,0x5,0x46,0x72,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E81C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E81F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040E823 E8 A1 59 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E828 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040E82C 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E831 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040E835 E8 A8 5B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E83A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45C748,eax	; 8040E83E 
	DB 0xB8,0x48,0xC7,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E843 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E847 E8 A8 5B FF FF 
	call	_OR	; 8040E84C E8 9A 5B FF FF 
;/OP1@ DX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040E851 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E855 
	DB 0x48,0x8D,0x5,0xF9,0x71,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E85C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E85F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DX_applylessgreat	; 8040E863 E8 E3 90 FF FF 
	call	_OR	; 8040E868 E8 7E 5B FF FF 
;/OP0@ W@ 558A XOR OR \ mov     -0x10(%rbp),%dl
;/*	mov	rax,-0x08(rbp)	; 8040E86D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E871 
	DB 0x48,0x8D,0x5,0xD0,0x71,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E878 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E87B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040E87F E8 4D 59 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E884 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558A,eax	; 8040E888 
	DB 0xB8,0x8A,0x55,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E88D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040E891 E8 5E 5B FF FF 
	call	_OR	; 8040E896 E8 50 5B FF FF 
;/0=	M_WL	M\ 8A DTST
	call	_0equ	; 8040E89B E8 A2 5A FF FF 
	test	rax,rax	; 8040E8A0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040E8A3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040E8A7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x6383 	; 8040E8AB 
	DB 0xF,0x84,0x9E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040E8B1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8A,eax	; 8040E8B5 
	DB 0xB8,0x8A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E8BA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E8BE E8 DF 73 FF FF 
;/	OP2@ 4 + C@ OP0@ 1+ C!
;/*	mov	rax,-0x08(rbp)	; 8040E8C3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E8C7 
	DB 0x48,0x8D,0x5,0x94,0x71,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E8CE 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E8D1 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040E8D5 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E8DA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E8DE E8 38 5B FF FF 
	call	_Cload	; 8040E8E3 E8 E5 58 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E8E8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E8EC 
	DB 0x48,0x8D,0x5,0x55,0x71,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E8F3 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E8F6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040E8FA E8 7C 5B FF FF 
	call	_Csave	; 8040E8FF E8 D1 58 FF FF 
;/	B2 OP0@ C! \ mov    $0x0,%dl
;/*	mov	rax,-0x08(rbp)	; 8040E904 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB2,eax	; 8040E908 
	DB 0xB8,0xB2,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E90D 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E911 
	DB 0x48,0x8D,0x5,0x30,0x71,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E918 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E91B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_Csave	; 8040E91F E8 B1 58 FF FF 
;/	-1 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040E924 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040E928 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040E92F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040E933 E8 15 63 FF FF 
;/	M\ 8B DTST
;/*	mov	rax,-0x08(rbp)	; 8040E938 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8B,eax	; 8040E93C 
	DB 0xB8,0x8B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040E941 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040E945 E8 58 73 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040E94A 
	DB 0xE9,0x91,0x9C,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040E94F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E953 
	DB 0x48,0x8D,0x5,0x8,0x71,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E95A 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E95D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E961 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E966 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E96A E8 AC 5A FF FF 
	call	_Cload	; 8040E96F E8 59 58 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E974 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040E978 
	DB 0x48,0x8D,0x5,0xC9,0x70,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E97F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E982 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E986 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E98B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E98F E8 87 5A FF FF 
	call	_Cload	; 8040E994 E8 34 58 FF FF 
	call	_XOR	; 8040E999 E8 56 5A FF FF 
;/OP2@ 3 + C@  OP1@ 3 + C@ = OR
;/*	mov	rax,-0x08(rbp)	; 8040E99E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E9A2 
	DB 0x48,0x8D,0x5,0xB9,0x70,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E9A9 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E9AC 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E9B0 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E9B5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E9B9 E8 5D 5A FF FF 
	call	_Cload	; 8040E9BE E8 A 58 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040E9C3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040E9C7 
	DB 0x48,0x8D,0x5,0x87,0x70,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E9CE 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040E9D1 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040E9D5 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040E9DA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040E9DE E8 38 5A FF FF 
	call	_Cload	; 8040E9E3 E8 E5 57 FF FF 
	call	_equ	; 8040E9E8 E8 4D 59 FF FF 
	call	_OR	; 8040E9ED E8 F9 59 FF FF 
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,X(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040E9F2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040E9F6 
	DB 0x48,0x8D,0x5,0x65,0x70,0xFF,0xFF
;/*	mov	(rax),rax	; 8040E9FD 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA00 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EA04 E8 BD 57 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EA09 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040EA0D 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA12 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040EA16 E8 C7 59 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EA1B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040EA1F 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA24 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040EA28 E8 C7 59 FF FF 
	call	_OR	; 8040EA2D E8 B9 59 FF FF 
;/OP1@ L@ FFFFFF AND 458B48 XOR OR \ movq    0x00(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040EA32 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040EA36 
	DB 0x48,0x8D,0x5,0x18,0x70,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EA3D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA40 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EA44 E8 7D 57 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EA49 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040EA4D 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA52 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040EA56 E8 87 59 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EA5B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040EA5F 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA64 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040EA68 E8 87 59 FF FF 
	call	_OR	; 8040EA6D E8 79 59 FF FF 
;/OP0@ L@ ADD|OR|AND|XOR<> OR	\ __  X(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040EA72 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EA76 
	DB 0x48,0x8D,0x5,0xCB,0x6F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EA7D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EA80 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EA84 E8 3D 57 FF FF 
	call	_ADDlORlANDlXORlessgreat	; 8040EA89 E8 8C 7A FF FF 
	call	_OR	; 8040EA8E E8 58 59 FF FF 
;/0=	M_WL	M\ 86 DTST
	call	_0equ	; 8040EA93 E8 AA 58 FF FF 
	test	rax,rax	; 8040EA98 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EA9B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EA9F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x6566 	; 8040EAA3 
	DB 0xF,0x84,0x89,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040EAA9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x86,eax	; 8040EAAD 
	DB 0xB8,0x86,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EAB2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040EAB6 E8 E7 71 FF FF 
;/	OP0@ 1+ C@ OP1@ 1+ C!
;/*	mov	rax,-0x08(rbp)	; 8040EABB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EABF 
	DB 0x48,0x8D,0x5,0x82,0x6F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EAC6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EAC9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040EACD E8 A9 59 FF FF 
	call	_Cload	; 8040EAD2 E8 F6 56 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EAD7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040EADB 
	DB 0x48,0x8D,0x5,0x73,0x6F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EAE2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EAE5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040EAE9 E8 8D 59 FF FF 
	call	_Csave	; 8040EAEE E8 E2 56 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040EAF3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040EAF7 
	DB 0x48,0x8D,0x5,0xE2,0x6D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040EAFE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040EB02 E8 4C 70 FF FF 
;/       -4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040EB07 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040EB0B 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040EB12 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040EB16 E8 32 61 FF FF 
;/ M\ 87 DTST
;/*	mov	rax,-0x08(rbp)	; 8040EB1B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x87,eax	; 8040EB1F 
	DB 0xB8,0x87,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EB24 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040EB28 E8 75 71 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040EB2D 
	DB 0xE9,0xAE,0x9A,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040EB32 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040EB36 
	DB 0x48,0x8D,0x5,0x25,0x6F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EB3D 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040EB40 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040EB44 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040EB49 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040EB4D E8 C9 58 FF FF 
	call	_Cload	; 8040EB52 E8 76 56 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EB57 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EB5B 
	DB 0x48,0x8D,0x5,0xE6,0x6E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EB62 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040EB65 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040EB69 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040EB6E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040EB72 E8 A4 58 FF FF 
	call	_Cload	; 8040EB77 E8 51 56 FF FF 
	call	_XOR	; 8040EB7C E8 73 58 FF FF 
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,X(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040EB81 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040EB85 
	DB 0x48,0x8D,0x5,0xD6,0x6E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EB8C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EB8F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EB93 E8 2E 56 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EB98 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040EB9C 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EBA1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040EBA5 E8 38 58 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EBAA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040EBAE 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EBB3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040EBB7 E8 38 58 FF FF 
	call	_OR	; 8040EBBC E8 2A 58 FF FF 
;/OP1@ L@ FFFFFF AND C0C748 XOR OR \ movq    $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 8040EBC1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040EBC5 
	DB 0x48,0x8D,0x5,0x89,0x6E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EBCC 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EBCF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EBD3 E8 EE 55 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EBD8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040EBDC 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EBE1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040EBE5 E8 F8 57 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EBEA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C748,eax	; 8040EBEE 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EBF3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040EBF7 E8 F8 57 FF FF 
	call	_OR	; 8040EBFC E8 EA 57 FF FF 
;/OP0@ L@ ADD|OR|AND|XOR<> OR	\ __  X(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040EC01 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EC05 
	DB 0x48,0x8D,0x5,0x3C,0x6E,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EC0C 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EC0F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EC13 E8 AE 55 FF FF 
	call	_ADDlORlANDlXORlessgreat	; 8040EC18 E8 FD 78 FF FF 
	call	_OR	; 8040EC1D E8 C9 57 FF FF 
;/  0=
	call	_0equ	; 8040EC22 E8 1B 57 FF FF 
;/  WHILE  M\ C DTST
	test	rax,rax	; 8040EC27 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EC2A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EC2E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x679B 	; 8040EC32 
	DB 0xF,0x84,0x2F,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040EC38 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC,eax	; 8040EC3C 
	DB 0xB8,0xC,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EC41 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040EC45 E8 58 70 FF FF 
;/\	C081  OP1@ 1+ W! \  add	$0x30,%rax
;/	81 OP1@ 1+ C!
;/*	mov	rax,-0x08(rbp)	; 8040EC4A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x81,eax	; 8040EC4E 
	DB 0xB8,0x81,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040EC53 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040EC57 
	DB 0x48,0x8D,0x5,0xF7,0x6D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EC5E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040EC61 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040EC65 E8 11 58 FF FF 
	call	_Csave	; 8040EC6A E8 66 55 FF FF 
;/	OP0@ 1+ C@ 38 AND OP1@ 2+ XOR!
;/*	mov	rax,-0x08(rbp)	; 8040EC6F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EC73 
	DB 0x48,0x8D,0x5,0xCE,0x6D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EC7A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EC7D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040EC81 E8 F5 57 FF FF 
	call	_Cload	; 8040EC86 E8 42 55 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EC8B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x38,eax	; 8040EC8F 
	DB 0xB8,0x38,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EC94 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040EC98 E8 45 57 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EC9D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040ECA1 
	DB 0x48,0x8D,0x5,0xAD,0x6D,0xFF,0xFF
;/*	mov	(rax),rax	; 8040ECA8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ECAB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_2add	; 8040ECAF E8 C4 57 FF FF 
	call	_XORsave	; 8040ECB4 E8 A4 55 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040ECB9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040ECBD 
	DB 0x48,0x8D,0x5,0x1C,0x6C,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ECC4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040ECC8 E8 86 6E FF FF 
;/       -4 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040ECCD 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,rax	; 8040ECD1 
	DB 0x48,0xC7,0xC0,0xFC,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ECD8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040ECDC E8 6C 5F FF FF 
;/	OP0 @ 3+ SL@ SHORT?
;/*	mov	rax,-0x08(rbp)	; 8040ECE1 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040ECE5 
	DB 0x48,0x8D,0x5,0xEC,0x6B,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ECEC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040ECF0 E8 D4 54 FF FF 
	call	_3add	; 8040ECF5 E8 7B 57 FF FF 
	call	_SLload	; 8040ECFA E8 C2 54 FF FF 
	call	_SHORTque	; 8040ECFF E8 C4 68 FF FF 
;/	IF 83 OP0 @ 1+ C! -3 ALLOT
	test	rax,rax	; 8040ED04 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040ED07 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040ED0B 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x6784 	; 8040ED0F 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040ED15 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x83,eax	; 8040ED19 
	DB 0xB8,0x83,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040ED1E 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040ED22 
	DB 0x48,0x8D,0x5,0xAF,0x6B,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040ED29 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040ED2D E8 97 54 FF FF 
	call	_CHARadd	; 8040ED32 E8 44 57 FF FF 
	call	_Csave	; 8040ED37 E8 99 54 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040ED3C 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 8040ED40 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ED47 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040ED4B E8 FD 5E FF FF 
;/	THEN
;/ M\ D DTST
;/*	mov	rax,-0x08(rbp)	; 8040ED50 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD,eax	; 8040ED54 
	DB 0xB8,0xD,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ED59 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040ED5D E8 40 6F FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040ED62 
	DB 0xE9,0x79,0x98,0xFF,0xFF
;/
;/;
	ret		; 8040ED67 C3 
;/
;/:  MOPT-RULES
;/ BEGIN  -EVEN-EAX  OPT-RULES


_MOPTsubRULES:
	call	_subEVENsubEAX	; 8040ED68 E8 52 93 FF FF 
	call	_OPTsubRULES	; 8040ED6D E8 5A 98 FF FF 
;/ OP0 @ DUP :-SET U< IF DROP BREAK TO OP0@ 
;/*	mov	rax,-0x08(rbp)	; 8040ED72 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040ED76 
	DB 0x48,0x8D,0x5,0x5B,0x6B,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040ED7D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040ED81 E8 43 54 FF FF 
	call	_DUP	; 8040ED86 E8 9D 57 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040ED8B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 8040ED8F 
	DB 0x48,0x8D,0x5,0x67,0x6C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040ED96 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ED99 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8040ED9D E8 1A 56 FF FF 
	test	rax,rax	; 8040EDA2 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EDA5 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EDA9 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_MOPTsubRULES+0x51 	; 8040EDAD 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 8040EDB3 E8 7B 53 FF FF 
	ret		; 8040EDB8 C3 
;/*	mov	rax,-0x08(rbp)	; 8040EDB9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EDBD 
	DB 0x48,0x8D,0x5,0x84,0x6C,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040EDC4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040EDC8 E8 33 54 FF FF 
;/   OP0@ L@  E7FFFF AND 458948 =  \ mov     %RAX|RDX|RBX|RCX,X(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040EDCD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EDD1 
	DB 0x48,0x8D,0x5,0x70,0x6C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EDD8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EDDB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EDDF E8 E2 53 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EDE4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE7FFFF,eax	; 8040EDE8 
	DB 0xB8,0xFF,0xFF,0xE7,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EDED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040EDF1 E8 EC 55 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EDF6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040EDFA 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EDFF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 8040EE03 E8 32 55 FF FF 
;/   DUP
	call	_DUP	; 8040EE08 E8 1B 57 FF FF 
;/   IF DROP OFF-EBP >R   OP0@ 3+ C@ C>S CELL+ TO OFF-EBP   FALSE   OP1 -EBPCLR
	test	rax,rax	; 8040EE0D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EE10 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EE14 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_MOPTsubRULES+0x13E 	; 8040EE18 
	DB 0xF,0x84,0x88,0x0,0x0,0x0
	call	_DgreatS	; 8040EE1E E8 10 53 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EE23 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040EE27 
	DB 0x48,0x8D,0x5,0x7B,0x6A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EE2E 
	DB 0x48,0x8B,0x0
	Push	rax	; 8040EE31 50 
;/*	mov	-0x08(rbp),rax	; 8040EE32 
	DB 0x48,0x8B,0x45,0xF8
;/*	mov	rax,-0x08(rbp)	; 8040EE36 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EE3A 
	DB 0x48,0x8D,0x5,0x7,0x6C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EE41 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EE44 
	DB 0x48,0x8D,0x6D,0xF8
	call	_3add	; 8040EE48 E8 28 56 FF FF 
	call	_Cload	; 8040EE4D E8 7B 53 FF FF 
	call	_CgreatS	; 8040EE52 E8 94 54 FF FF 
	call	_CELLadd	; 8040EE57 E8 12 56 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EE5C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040EE60 
	DB 0x48,0x8D,0x5,0x42,0x6A,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040EE67 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 8040EE6B E8 90 53 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EE70 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040EE74 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040EE79 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040EE7D 
	DB 0x48,0x8D,0x5,0x5C,0x6A,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040EE84 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040EE88 E8 AD 8C FF FF 
;/              R> TO OFF-EBP 
;/*	mov	rax,-0x08(rbp)	; 8040EE8D 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8040EE91 58 
;/*	mov	rax,-0x10(rbp)	; 8040EE92 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040EE96 
	DB 0x48,0x8D,0x5,0xC,0x6A,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040EE9D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 8040EEA1 E8 5A 53 FF FF 
;/   THEN
;/	WHILE   M\ 207 DTST
	test	rax,rax	; 8040EEA6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EEA9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EEAD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_MOPTsubRULES+0x166 	; 8040EEB1 
	DB 0xF,0x84,0x17,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040EEB7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x207,eax	; 8040EEBB 
	DB 0xB8,0x7,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EEC0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040EEC4 E8 D9 6D FF FF 
;/	REPEAT 
;/*	jmp	_MOPTsubRULES	; 8040EEC9 
	DB 0xE9,0x9A,0xFE,0xFF,0xFF
;/;
	ret		; 8040EECE C3 
;/
;/: EXIT-RULES  ( ADDR  -- ADDR'  )
;/\  можно удалять записи во временные ячейки
;/        -2 DTST


_EXITsubRULES:
;/*	mov	rax,-0x08(rbp)	; 8040EECF 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x2,rax	; 8040EED3 
	DB 0x48,0xC7,0xC0,0xFE,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040EEDA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040EEDE E8 BF 6D FF FF 
;/	BEGIN
;/	OP0 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040EEE3 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040EEE7 
	DB 0x48,0x8D,0x5,0xEA,0x69,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040EEEE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040EEF2 E8 D2 52 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EEF7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 8040EEFB 
	DB 0x48,0x8D,0x5,0xFB,0x6A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EF02 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EF05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8040EF09 E8 AE 54 FF FF 
	test	rax,rax	; 8040EF0E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EF11 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EF15 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x51 	; 8040EF19 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040EF1F C3 
;/
;/OP0@ L@ 2448d48 XOR	\	lea     1(%rdx,%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 8040EF20 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EF24 
	DB 0x48,0x8D,0x5,0x1D,0x6B,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EF2B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EF2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040EF32 E8 8F 52 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EF37 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2448D48,eax	; 8040EF3B 
	DB 0xB8,0x48,0x8D,0x44,0x2
;/*	lea	-0x08(rbp),rbp	; 8040EF40 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040EF44 E8 AB 54 FF FF 
;/OFF-EAX 0=
;/*	mov	rax,-0x08(rbp)	; 8040EF49 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040EF4D 
	DB 0x48,0x8D,0x5,0x62,0x69,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EF54 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EF57 
	DB 0x48,0x8D,0x6D,0xF8
	call	_0equ	; 8040EF5B E8 E2 53 FF FF 
;/OR 0=	M_WL  M\ 20C DTST
	call	_OR	; 8040EF60 E8 86 54 FF FF 
	call	_0equ	; 8040EF65 E8 D8 53 FF FF 
	test	rax,rax	; 8040EF6A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EF6D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EF71 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x1ED 	; 8040EF75 
	DB 0xF,0x84,0x41,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040EF7B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20C,eax	; 8040EF7F 
	DB 0xB8,0xC,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EF84 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040EF88 E8 15 6D FF FF 
;/	OP0@ 4 + C@ C>S OFF-EAX +
;/*	mov	rax,-0x08(rbp)	; 8040EF8D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EF91 
	DB 0x48,0x8D,0x5,0xB0,0x6A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EF98 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040EF9B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040EF9F 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040EFA4 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040EFA8 E8 6E 54 FF FF 
	call	_Cload	; 8040EFAD E8 1B 52 FF FF 
	call	_CgreatS	; 8040EFB2 E8 34 53 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040EFB7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040EFBB 
	DB 0x48,0x8D,0x5,0xF4,0x68,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EFC2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040EFC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040EFC9 E8 4D 54 FF FF 
;/	DUP SHORT?
	call	_DUP	; 8040EFCE E8 55 55 FF FF 
	call	_SHORTque	; 8040EFD3 E8 F0 65 FF FF 
;/	IF	OP0@ 4 + C!
	test	rax,rax	; 8040EFD8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040EFDB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040EFDF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x144 	; 8040EFE3 
	DB 0xF,0x84,0x2A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040EFE9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040EFED 
	DB 0x48,0x8D,0x5,0x54,0x6A,0xFF,0xFF
;/*	mov	(rax),rax	; 8040EFF4 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040EFF7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040EFFB 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F000 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040F004 E8 12 54 FF FF 
	call	_Csave	; 8040F009 E8 C7 51 FF FF 
;/	ELSE DUP LONG? 0= IF DROP BREAK
;/*	jmp	_EXITsubRULES+0x1B4 	; 8040F00E 
	DB 0xE9,0x70,0x0,0x0,0x0
	call	_DUP	; 8040F013 E8 10 55 FF FF 
	call	_LONGque	; 8040F018 E8 D0 65 FF FF 
	call	_0equ	; 8040F01D E8 20 53 FF FF 
	test	rax,rax	; 8040F022 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F025 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F029 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x16A 	; 8040F02D 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_DgreatS	; 8040F033 E8 FB 50 FF FF 
	ret		; 8040F038 C3 
;/	  84 OP0@ 2+ C! OP0@ 4 + L!
;/*	mov	rax,-0x08(rbp)	; 8040F039 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x84,eax	; 8040F03D 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F042 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F046 
	DB 0x48,0x8D,0x5,0xFB,0x69,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F04D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F050 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040F054 E8 1F 54 FF FF 
	call	_Csave	; 8040F059 E8 77 51 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F05E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F062 
	DB 0x48,0x8D,0x5,0xDF,0x69,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F069 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F06C 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 8040F070 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F075 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040F079 E8 9D 53 FF FF 
	call	_Lsave	; 8040F07E E8 6F 51 FF FF 
;/	THEN  0 TO OFF-EAX 
;/*	mov	rax,-0x08(rbp)	; 8040F083 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040F087 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F08C 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEAX+0x5 (%rip),rax	; 8040F090 
	DB 0x48,0x8D,0x5,0x1F,0x68,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040F097 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 8040F09B E8 60 51 FF FF 
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040F0A0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040F0A4 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F0A9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F0AD E8 F0 6B FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F0B2 E8 B1 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F0B7 
	DB 0xE9,0x27,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040F0BC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F0C0 
	DB 0x48,0x8D,0x5,0x19,0x68,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F0C7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F0CB E8 F9 50 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F0D0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 8040F0D4 
	DB 0x48,0x8D,0x5,0x22,0x69,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F0DB 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F0DE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8040F0E2 E8 D5 52 FF FF 
	test	rax,rax	; 8040F0E7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F0EA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F0EE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x22A 	; 8040F0F2 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040F0F8 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040F0F9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F0FD 
	DB 0x48,0x8D,0x5,0x51,0x69,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F104 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F107 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040F10B E8 BD 50 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F110 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB1,eax	; 8040F114 
	DB 0xB8,0xB1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F119 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F11D E8 D2 52 FF FF 
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	rax,-0x08(rbp)	; 8040F122 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F126 
	DB 0x48,0x8D,0x5,0x1B,0x69,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F12D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F130 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040F134 E8 8D 50 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F139 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0FFFF,eax	; 8040F13D 
	DB 0xB8,0xFF,0xFF,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F142 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F146 E8 97 52 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F14B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0D348,eax	; 8040F14F 
	DB 0xB8,0x48,0xD3,0xC0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F154 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F158 E8 97 52 FF FF 
	call	_OR	; 8040F15D E8 89 52 FF FF 
;/0=	M_WL  M\ 204 DTST
	call	_0equ	; 8040F162 E8 DB 51 FF FF 
	test	rax,rax	; 8040F167 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F16A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F16E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x331 	; 8040F172 
	DB 0xF,0x84,0x88,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F178 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040F17C 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F181 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F185 E8 18 6B FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040F18A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC1,eax	; 8040F18E 
	DB 0xB8,0xC1,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F193 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F197 
	DB 0x48,0x8D,0x5,0xAA,0x68,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F19E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F1A1 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CHARadd	; 8040F1A5 E8 D1 52 FF FF 
	call	_Csave	; 8040F1AA E8 26 50 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F1AF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F1B3 
	DB 0x48,0x8D,0x5,0x9B,0x68,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F1BA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F1BD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 8040F1C1 E8 B5 52 FF FF 
	call	_Cload	; 8040F1C6 E8 2 50 FF FF 
	call	_Ccom	; 8040F1CB E8 FE 5A FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040F1D0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F1D4 
	DB 0x48,0x8D,0x5,0x5,0x67,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F1DB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F1DF E8 B1 70 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040F1E4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040F1E8 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F1ED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F1F1 E8 AC 6A FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040F1F6 E8 6D FB FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F1FB 
	DB 0xE9,0xE3,0xFC,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040F200 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F204 
	DB 0x48,0x8D,0x5,0x4A,0x68,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F20B 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F20E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040F212 E8 AF 4F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F217 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F21B 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F220 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F224 E8 B9 51 FF FF 
;/DUP c28948 XOR			\ mov     %rax,%rdx
	call	_DUP	; 8040F229 E8 FA 52 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F22E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC28948,eax	; 8040F232 
	DB 0xB8,0x48,0x89,0xC2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F237 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F23B E8 B4 51 FF FF 
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
	call	_SWAP	; 8040F240 E8 FD 52 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F245 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 8040F249 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F24E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F252 E8 8B 51 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F257 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9248,eax	; 8040F25B 
	DB 0xB8,0x48,0x92,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F260 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040F264 E8 30 51 FF FF 
	call	_AND	; 8040F269 E8 74 51 FF FF 
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040F26E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F272 
	DB 0x48,0x8D,0x5,0xCF,0x67,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F279 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F27C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040F280 E8 41 4F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F285 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F289 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F28E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F292 E8 4B 51 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F297 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040F29B 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F2A0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F2A4 E8 4B 51 FF FF 
;/ OR 0=	M_WL  M\ 202 DTST
	call	_OR	; 8040F2A9 E8 3D 51 FF FF 
	call	_0equ	; 8040F2AE E8 8F 50 FF FF 
	test	rax,rax	; 8040F2B3 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F2B6 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F2BA 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x437 	; 8040F2BE 
	DB 0xF,0x84,0x42,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F2C4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040F2C8 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F2CD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F2D1 E8 CC 69 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040F2D6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F2DA 
	DB 0x48,0x8D,0x5,0xFF,0x65,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F2E1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F2E5 E8 AB 6F FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040F2EA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040F2EE 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F2F3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F2F7 E8 A6 69 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F2FC E8 67 FA FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F301 
	DB 0xE9,0xDD,0xFB,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040F306 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040F30A 
	DB 0x48,0x8D,0x5,0x98,0x65,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F311 
	DB 0x48,0x8B,0x0
	Push	rax	; 8040F314 50 
;/*	mov	-0x08(rbp),rax	; 8040F315 
	DB 0x48,0x8B,0x45,0xF8
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	mov	rax,-0x08(rbp)	; 8040F319 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040F31D 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F322 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040F326 
	DB 0x48,0x8D,0x5,0xAB,0x65,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040F32D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040F331 E8 4 88 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F336 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040F33A 
	DB 0x48,0x8D,0x5,0x97,0x65,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F341 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040F345 E8 F0 87 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F34A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040F34E 
	DB 0x48,0x8D,0x5,0x83,0x65,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F355 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040F359 E8 DC 87 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F35E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040F362 
	DB 0x48,0x8D,0x5,0x6F,0x65,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F369 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040F36D E8 C8 87 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040F372 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8040F376 58 
;/*	mov	rax,-0x10(rbp)	; 8040F377 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040F37B 
	DB 0x48,0x8D,0x5,0x27,0x65,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040F382 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 8040F386 E8 75 4E FF FF 
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040F38B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F38E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F392 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x4E9 	; 8040F396 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F39C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040F3A0 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F3A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F3A9 E8 F4 68 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F3AE E8 B5 F9 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F3B3 
	DB 0xE9,0x2B,0xFB,0xFF,0xFF
;/
;/ OP2 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040F3B8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040F3BC 
	DB 0x48,0x8D,0x5,0x25,0x65,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F3C3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F3C7 E8 FD 4D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F3CC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_dcomasubSET+0x5 (%rip),rax	; 8040F3D0 
	DB 0x48,0x8D,0x5,0x26,0x66,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F3D7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F3DA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8040F3DE E8 D9 4F FF FF 
	test	rax,rax	; 8040F3E3 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F3E6 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F3EA 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x526 	; 8040F3EE 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040F3F4 C3 
;/
;/OP2@ L@ 1508d48 XOR \        lea     0x01(%rax),%rdx #
;/*	mov	rax,-0x08(rbp)	; 8040F3F5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F3F9 
	DB 0x48,0x8D,0x5,0x62,0x66,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F400 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F403 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040F407 E8 BA 4D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F40C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1508D48,eax	; 8040F410 
	DB 0xB8,0x48,0x8D,0x50,0x1
;/*	lea	-0x08(rbp),rbp	; 8040F415 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F419 E8 D6 4F FF FF 
;/OP1@ L@ b60f48 XOR OR \ /*      movzbq  (%rax),%rax     #
;/*	mov	rax,-0x08(rbp)	; 8040F41E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F422 
	DB 0x48,0x8D,0x5,0x2C,0x66,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F429 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F42C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040F430 E8 91 4D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F435 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB60F48,eax	; 8040F439 
	DB 0xB8,0x48,0xF,0xB6,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F43E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F442 E8 AD 4F FF FF 
	call	_OR	; 8040F447 E8 9F 4F FF FF 
;/OP0@ @ FFFFFF AND d00148 XOR OR \ /*    add     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040F44C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F450 
	DB 0x48,0x8D,0x5,0xF1,0x65,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F457 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F45A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F45E E8 66 4D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F463 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F467 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F46C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F470 E8 6D 4F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F475 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD00148,eax	; 8040F479 
	DB 0xB8,0x48,0x1,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F47E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F482 E8 6D 4F FF FF 
	call	_OR	; 8040F487 E8 5F 4F FF FF 
;/0=	M_WL  M\ 20A DTST
	call	_0equ	; 8040F48C E8 B1 4E FF FF 
	test	rax,rax	; 8040F491 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F494 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F498 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x660 	; 8040F49C 
	DB 0xF,0x84,0x8D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F4A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20A,eax	; 8040F4A6 
	DB 0xB8,0xA,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F4AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F4AF E8 EE 67 FF FF 
;/	10 OP1@ 3+ C!	\ movzbq (%rax),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040F4B4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x10,eax	; 8040F4B8 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F4BD 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F4C1 
	DB 0x48,0x8D,0x5,0x8D,0x65,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F4C8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F4CB 
	DB 0x48,0x8D,0x6D,0xF0
	call	_3add	; 8040F4CF E8 A1 4F FF FF 
	call	_Csave	; 8040F4D4 E8 FC 4C FF FF 
;/           OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040F4D9 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040F4DD 
	DB 0x48,0x8D,0x5,0x4,0x64,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F4E4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F4E8 E8 A8 6D FF FF 
;/	-2 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040F4ED 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x2,rax	; 8040F4F1 
	DB 0x48,0xC7,0xC0,0xFE,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F4F8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040F4FC E8 4C 57 FF FF 
;/	0102448d L,	\ lea    0x1(%rdx,%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 8040F501 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x102448D,eax	; 8040F505 
	DB 0xB8,0x8D,0x44,0x2,0x1
;/*	lea	-0x08(rbp),rbp	; 8040F50A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lcom	; 8040F50E E8 81 57 FF FF 
;/        M\ 20B DTST
;/*	mov	rax,-0x08(rbp)	; 8040F513 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20B,eax	; 8040F517 
	DB 0xB8,0xB,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F51C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F520 E8 7D 67 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F525 E8 3E F8 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F52A 
	DB 0xE9,0xB4,0xF9,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND c28948 XOR    \ /*    mov     %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040F52F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F533 
	DB 0x48,0x8D,0x5,0x28,0x65,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F53A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F53D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F541 E8 83 4C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F546 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F54A 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F54F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F553 E8 8A 4E FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F558 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC28948,eax	; 8040F55C 
	DB 0xB8,0x48,0x89,0xC2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F561 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F565 E8 8A 4E FF FF 
;/OP1@ @ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040F56A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F56E 
	DB 0x48,0x8D,0x5,0xE0,0x64,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F575 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F578 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F57C E8 48 4C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F581 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F585 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F58A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F58E E8 4F 4E FF FF 
;/DUP  168949 XOR  \ /*    mov     %rdx,(%r14)
	call	_DUP	; 8040F593 E8 90 4F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F598 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x168949,eax	; 8040F59C 
	DB 0xB8,0x49,0x89,0x16,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F5A1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F5A5 E8 4A 4E FF FF 
;/SWAP 160149 <> AND OR \ /*    add     %rdx,(%r14)
	call	_SWAP	; 8040F5AA E8 93 4F FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F5AF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x160149,eax	; 8040F5B3 
	DB 0xB8,0x49,0x1,0x16,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F5B8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 8040F5BC E8 D8 4D FF FF 
	call	_AND	; 8040F5C1 E8 1C 4E FF FF 
	call	_OR	; 8040F5C6 E8 20 4E FF FF 
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ /*    mov     -0x08(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040F5CB 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F5CF 
	DB 0x48,0x8D,0x5,0x72,0x64,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F5D6 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F5D9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F5DD E8 E7 4B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F5E2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F5E6 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F5EB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F5EF E8 EE 4D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F5F4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458B48,eax	; 8040F5F8 
	DB 0xB8,0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F5FD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F601 E8 EE 4D FF FF 
	call	_OR	; 8040F606 E8 E0 4D FF FF 
;/0=	M_WL  M\ 20E DTST
	call	_0equ	; 8040F60B E8 32 4D FF FF 
	test	rax,rax	; 8040F610 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F613 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F617 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x7B4 	; 8040F61B 
	DB 0xF,0x84,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F621 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20E,eax	; 8040F625 
	DB 0xB8,0xE,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F62A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F62E E8 6F 66 FF FF 
;/        100000 OP1@ XOR!
;/*	mov	rax,-0x08(rbp)	; 8040F633 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x100000,eax	; 8040F637 
	DB 0xB8,0x0,0x0,0x10,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F63C 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F640 
	DB 0x48,0x8D,0x5,0xE,0x64,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F647 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F64A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040F64E E8 A 4C FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040F653 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040F657 
	DB 0x48,0x8D,0x5,0x8A,0x62,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F65E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F662 E8 2E 6C FF FF 
;/        M\ 20F DTST
;/*	mov	rax,-0x08(rbp)	; 8040F667 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20F,eax	; 8040F66B 
	DB 0xB8,0xF,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F670 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F674 E8 29 66 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F679 E8 EA F6 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F67E 
	DB 0xE9,0x60,0xF8,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND C28948 XOR \ mov     %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040F683 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F687 
	DB 0x48,0x8D,0x5,0xD4,0x63,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F68E 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F691 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F695 E8 2F 4B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F69A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F69E 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F6A3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F6A7 E8 36 4D FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F6AC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC28948,eax	; 8040F6B0 
	DB 0xB8,0x48,0x89,0xC2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F6B5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F6B9 E8 36 4D FF FF 
;/OP1@ ?ChRAX<> OR
;/*	mov	rax,-0x08(rbp)	; 8040F6BE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F6C2 
	DB 0x48,0x8D,0x5,0x8C,0x63,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F6C9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F6CC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_queChRAXlessgreat	; 8040F6D0 E8 63 7F FF FF 
	call	_OR	; 8040F6D5 E8 11 4D FF FF 
;/OP0@ @ FFFFFF AND d08948 XOR OR \ mov     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040F6DA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F6DE 
	DB 0x48,0x8D,0x5,0x63,0x63,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F6E5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F6E8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F6EC E8 D8 4A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F6F1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F6F5 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F6FA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F6FE E8 DF 4C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F703 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 8040F707 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F70C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F710 E8 DF 4C FF FF 
	call	_OR	; 8040F715 E8 D1 4C FF FF 
;/0=	M_WL  M\ 210 DTST
	call	_0equ	; 8040F71A E8 23 4C FF FF 
	test	rax,rax	; 8040F71F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F722 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F726 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x8CB 	; 8040F72A 
	DB 0xF,0x84,0x6A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F730 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x210,eax	; 8040F734 
	DB 0xB8,0x10,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F739 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F73D E8 60 65 FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040F742 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F746 
	DB 0x48,0x8D,0x5,0x93,0x61,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F74D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040F751 E8 FD 63 FF FF 
;/	-3 ALLOT	
;/*	mov	rax,-0x08(rbp)	; 8040F756 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 8040F75A 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F761 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040F765 E8 E3 54 FF FF 
;/	OP1 OPexcise	
;/*	mov	rax,-0x08(rbp)	; 8040F76A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F76E 
	DB 0x48,0x8D,0x5,0x6B,0x61,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F775 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F779 E8 17 6B FF FF 
;/        M\ 211 DTST
;/*	mov	rax,-0x08(rbp)	; 8040F77E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x211,eax	; 8040F782 
	DB 0xB8,0x11,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F787 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F78B E8 12 65 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F790 E8 D3 F5 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F795 
	DB 0xE9,0x49,0xF7,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND C2C748 XOR \ movq    $X,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040F79A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F79E 
	DB 0x48,0x8D,0x5,0xBD,0x62,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F7A5 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F7A8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F7AC E8 18 4A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F7B1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F7B5 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F7BA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F7BE E8 1F 4C FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F7C3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC2C748,eax	; 8040F7C7 
	DB 0xB8,0x48,0xC7,0xC2,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F7CC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F7D0 E8 1F 4C FF FF 
;/OP1@ @ FFFFFF AND 108948 XOR OR \ mov     %rdx,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040F7D5 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F7D9 
	DB 0x48,0x8D,0x5,0x75,0x62,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F7E0 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F7E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040F7E7 E8 DD 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F7EC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040F7F0 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F7F5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040F7F9 E8 E4 4B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F7FE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x108948,eax	; 8040F802 
	DB 0xB8,0x48,0x89,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F807 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F80B E8 E4 4B FF FF 
	call	_OR	; 8040F810 E8 D6 4B FF FF 
;/OP0@ DX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040F815 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F819 
	DB 0x48,0x8D,0x5,0x28,0x62,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F820 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F823 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DX_applylessgreat	; 8040F827 E8 1F 81 FF FF 
	call	_OR	; 8040F82C E8 BA 4B FF FF 
;/0=	M_WL  M\ 212 DTST
	call	_0equ	; 8040F831 E8 C 4B FF FF 
	test	rax,rax	; 8040F836 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F839 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F83D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x9DF 	; 8040F841 
	DB 0xF,0x84,0x67,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F847 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x212,eax	; 8040F84B 
	DB 0xB8,0x12,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F850 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F854 E8 49 64 FF FF 
;/	0 OP2@ 2+ C! \ movq   $X,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040F859 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040F85D 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F862 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F866 
	DB 0x48,0x8D,0x5,0xF5,0x61,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F86D 
	DB 0x48,0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F870 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2add	; 8040F874 E8 FF 4B FF FF 
	call	_Csave	; 8040F879 E8 57 49 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040F87E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F882 
	DB 0x48,0x8D,0x5,0x57,0x60,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F889 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F88D E8 3 6A FF FF 
;/        M\ 213 DTST
;/*	mov	rax,-0x08(rbp)	; 8040F892 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x213,eax	; 8040F896 
	DB 0xB8,0x13,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F89B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F89F E8 FE 63 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F8A4 E8 BF F4 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F8A9 
	DB 0xE9,0x35,0xF6,0xFF,0xFF
;/
;/OP2@ C@ B2 XOR \ mov     $X,%dl
;/*	mov	rax,-0x08(rbp)	; 8040F8AE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F8B2 
	DB 0x48,0x8D,0x5,0xA9,0x61,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F8B9 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F8BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Cload	; 8040F8C0 E8 8 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F8C5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB2,eax	; 8040F8C9 
	DB 0xB8,0xB2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F8CE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F8D2 E8 1D 4B FF FF 
;/OP1@ W@ 1088 XOR OR \ mov     %dl,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040F8D7 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F8DB 
	DB 0x48,0x8D,0x5,0x73,0x61,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F8E2 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F8E5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wload	; 8040F8E9 E8 E3 48 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F8EE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1088,eax	; 8040F8F2 
	DB 0xB8,0x88,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F8F7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040F8FB E8 F4 4A FF FF 
	call	_OR	; 8040F900 E8 E6 4A FF FF 
;/OP0@ DX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040F905 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040F909 
	DB 0x48,0x8D,0x5,0x38,0x61,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F910 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F913 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DX_applylessgreat	; 8040F917 E8 2F 80 FF FF 
	call	_OR	; 8040F91C E8 CA 4A FF FF 
;/0=	M_WL  M\ 214 DTST
	call	_0equ	; 8040F921 E8 1C 4A FF FF 
	test	rax,rax	; 8040F926 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040F929 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040F92D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0xAE9 	; 8040F931 
	DB 0xF,0x84,0x81,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040F937 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x214,eax	; 8040F93B 
	DB 0xB8,0x14,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F940 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F944 E8 59 63 FF FF 
;/	OP2 1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040F949 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040F94D 
	DB 0x48,0x8D,0x5,0x94,0x5F,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040F954 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x1,eax	; 8040F958 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F95D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040F961 E8 8D 67 FF FF 
;/	00C6 OP2 @ W! \ movb   $X,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040F966 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC6,eax	; 8040F96A 
	DB 0xB8,0xC6,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F96F 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x1D (%rip),rax	; 8040F973 
	DB 0x48,0x8D,0x5,0x6E,0x5F,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040F97A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 8040F97E E8 46 48 FF FF 
	call	_Wsave	; 8040F983 E8 5B 48 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040F988 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040F98C 
	DB 0x48,0x8D,0x5,0x4D,0x5F,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040F993 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040F997 E8 F9 68 FF FF 
;/        M\ 215 DTST
;/*	mov	rax,-0x08(rbp)	; 8040F99C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x215,eax	; 8040F9A0 
	DB 0xB8,0x15,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040F9A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040F9A9 E8 F4 62 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040F9AE E8 B5 F3 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040F9B3 
	DB 0xE9,0x2B,0xF5,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP1@ 3 + C@ =
;/*	mov	rax,-0x08(rbp)	; 8040F9B8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040F9BC 
	DB 0x48,0x8D,0x5,0x9F,0x60,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F9C3 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F9C6 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040F9CA 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F9CF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040F9D3 E8 43 4A FF FF 
	call	_Cload	; 8040F9D8 E8 F0 47 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040F9DD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040F9E1 
	DB 0x48,0x8D,0x5,0x6D,0x60,0xFF,0xFF
;/*	mov	(rax),rax	; 8040F9E8 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040F9EB 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040F9EF 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040F9F4 
	DB 0x48,0x8D,0x6D,0xF0
	call	_add	; 8040F9F8 E8 1E 4A FF FF 
	call	_Cload	; 8040F9FD E8 CB 47 FF FF 
	call	_equ	; 8040FA02 E8 33 49 FF FF 
;/OP2@ @ FFFFFF AND 558b48 XOR OR \ mov     0x08(%rbp),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040FA07 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040FA0B 
	DB 0x48,0x8D,0x5,0x50,0x60,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FA12 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA15 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040FA19 E8 AB 47 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FA1E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040FA22 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA27 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040FA2B E8 B2 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FA30 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x558B48,eax	; 8040FA34 
	DB 0xB8,0x48,0x8B,0x55,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA39 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040FA3D E8 B2 49 FF FF 
	call	_OR	; 8040FA42 E8 A4 49 FF FF 
;/OP1@ @ FFFFFF AND 458948 XOR OR \ mov     %rax,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040FA47 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040FA4B 
	DB 0x48,0x8D,0x5,0x3,0x60,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FA52 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA55 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040FA59 E8 6B 47 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FA5E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040FA62 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA67 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040FA6B E8 72 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FA70 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x458948,eax	; 8040FA74 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA79 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040FA7D E8 72 49 FF FF 
	call	_OR	; 8040FA82 E8 64 49 FF FF 
;/OP0@ @ FFFFFF AND d08948 XOR OR \ mov     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040FA87 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP0load+0x5 (%rip),rax	; 8040FA8B 
	DB 0x48,0x8D,0x5,0xB6,0x5F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FA92 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FA95 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8040FA99 E8 2B 47 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FA9E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040FAA2 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FAA7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040FAAB E8 32 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FAB0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD08948,eax	; 8040FAB4 
	DB 0xB8,0x48,0x89,0xD0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FAB9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040FABD E8 32 49 FF FF 
	call	_OR	; 8040FAC2 E8 24 49 FF FF 
;/0=	WHILE   M\ 208 DTST
	call	_0equ	; 8040FAC7 E8 76 48 FF FF 
	test	rax,rax	; 8040FACC 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FACF 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FAD3 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0xCD2 	; 8040FAD7 
	DB 0xF,0x84,0xC4,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040FADD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x208,eax	; 8040FAE1 
	DB 0xB8,0x8,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FAE6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040FAEA E8 B3 61 FF FF 
;/	OP1@ L@	OP2@ L@ 100000 XOR
;/*	mov	rax,-0x08(rbp)	; 8040FAEF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040FAF3 
	DB 0x48,0x8D,0x5,0x5B,0x5F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FAFA 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FAFD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040FB01 E8 C0 46 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FB06 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040FB0A 
	DB 0x48,0x8D,0x5,0x51,0x5F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FB11 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FB14 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lload	; 8040FB18 E8 A9 46 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FB1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x100000,eax	; 8040FB21 
	DB 0xB8,0x0,0x0,0x10,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FB26 
	DB 0x48,0x8D,0x6D,0xF8
	call	_XOR	; 8040FB2A E8 C5 48 FF FF 
;/	OP1@ L!	OP2@ L!
;/*	mov	rax,-0x08(rbp)	; 8040FB2F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP1load+0x5 (%rip),rax	; 8040FB33 
	DB 0x48,0x8D,0x5,0x1B,0x5F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FB3A 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FB3D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lsave	; 8040FB41 E8 AC 46 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FB46 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OP2load+0x5 (%rip),rax	; 8040FB4A 
	DB 0x48,0x8D,0x5,0x11,0x5F,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FB51 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FB54 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lsave	; 8040FB58 E8 95 46 FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040FB5D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x15 (%rip),rax	; 8040FB61 
	DB 0x48,0x8D,0x5,0x78,0x5D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040FB68 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040FB6C E8 E2 5F FF FF 
;/	-3 ALLOT
;/*	mov	rax,-0x08(rbp)	; 8040FB71 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x3,rax	; 8040FB75 
	DB 0x48,0xC7,0xC0,0xFD,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040FB7C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ALLOT	; 8040FB80 E8 C8 50 FF FF 
;/   M\ 209 DTST
;/*	mov	rax,-0x08(rbp)	; 8040FB85 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x209,eax	; 8040FB89 
	DB 0xB8,0x9,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FB8E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040FB92 E8 B 61 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040FB97 E8 CC F1 FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040FB9C 
	DB 0xE9,0x42,0xF3,0xFF,0xFF
;/
;/;
	ret		; 8040FBA1 C3 
;/
;/: INLINE?  ( CFA -- CFA FLAG )
;/
;/  DUP         BEGIN


_INLINEque:
	call	_DUP	; 8040FBA2 E8 81 49 FF FF 
;/  2DUP
	call	_2DUP	; 8040FBA7 E8 85 49 FF FF 
;/  MM_SIZE -   U> 0= IF  DROP FALSE  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040FBAC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_MM_SIZE+0x5 (%rip),rax	; 8040FBB0 
	DB 0x48,0x8D,0x5,0xE5,0x5C,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FBB7 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FBBA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_sub	; 8040FBBE E8 55 48 FF FF 
	call	_Ugreat	; 8040FBC3 E8 E8 47 FF FF 
	call	_0equ	; 8040FBC8 E8 75 47 FF FF 
	test	rax,rax	; 8040FBCD 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FBD0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FBD4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x4F 	; 8040FBD8 
	DB 0xF,0x84,0x13,0x0,0x0,0x0
	call	_DgreatS	; 8040FBDE E8 50 45 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FBE3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040FBE7 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FBEC 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040FBF0 C3 
;/  DUP L@      \  CFA CFA+OFF N'
	call	_DUP	; 8040FBF1 E8 32 49 FF FF 
	call	_Lload	; 8040FBF6 E8 CB 45 FF FF 
;/  DUP FF AND 0C3 = IF 2DROP  TRUE BREAK  \ RET
	call	_DUP	; 8040FBFB E8 28 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FC00 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 8040FC04 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FC09 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040FC0D E8 D0 47 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FC12 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC3,eax	; 8040FC16 
	DB 0xB8,0xC3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FC1B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 8040FC1F E8 16 47 FF FF 
	test	rax,rax	; 8040FC24 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FC27 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FC2B 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0xA8 	; 8040FC2F 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
	call	_2DROP	; 8040FC35 E8 32 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FC3A 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 8040FC3E 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040FC45 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 8040FC49 C3 
;/  DUP4B?	M_WL	DROP 4 + REPEAT
	call	_DUP4Bque	; 8040FC4A E8 44 71 FF FF 
	test	rax,rax	; 8040FC4F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FC52 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FC56 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0xDA 	; 8040FC5A 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FC60 E8 CE 44 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 8040FC69 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FC6E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FC72 E8 A4 47 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FC77 
	DB 0xE9,0x2B,0xFF,0xFF,0xFF
;/  DUP5B?	M_WL	DROP 5 + REPEAT
	call	_DUP5Bque	; 8040FC7C E8 BE 71 FF FF 
	test	rax,rax	; 8040FC81 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FC84 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FC88 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x10C 	; 8040FC8C 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FC92 E8 9C 44 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FC97 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 8040FC9B 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FCA0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FCA4 E8 72 47 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FCA9 
	DB 0xE9,0xF9,0xFE,0xFF,0xFF
;/  DUP7B?	M_WL	DROP 7 + REPEAT
	call	_DUP7Bque	; 8040FCAE E8 5 75 FF FF 
	test	rax,rax	; 8040FCB3 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FCB6 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FCBA 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x13E 	; 8040FCBE 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FCC4 E8 6A 44 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FCC9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7,eax	; 8040FCCD 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FCD2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FCD6 E8 40 47 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FCDB 
	DB 0xE9,0xC7,0xFE,0xFF,0xFF
;/  DUP4B?[EBP]	M_WL 	DROP 4 + REPEAT
	call	_DUP4BquexcEBPyc	; 8040FCE0 E8 BE 72 FF FF 
	test	rax,rax	; 8040FCE5 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FCE8 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FCEC 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x170 	; 8040FCF0 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FCF6 E8 38 44 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FCFB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 8040FCFF 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FD04 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FD08 E8 E 47 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FD0D 
	DB 0xE9,0x95,0xFE,0xFF,0xFF
;/  DUP5B?[EBP]	M_WL	DROP 5 + REPEAT
	call	_DUP5BquexcEBPyc	; 8040FD12 E8 5C 73 FF FF 
	test	rax,rax	; 8040FD17 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FD1A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FD1E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x1A2 	; 8040FD22 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FD28 E8 6 44 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FD2D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 8040FD31 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FD36 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FD3A E8 DC 46 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FD3F 
	DB 0xE9,0x63,0xFE,0xFF,0xFF
;/  DUP6B?IP	M_WL	DROP 6 + REPEAT
	call	_DUP6BqueIP	; 8040FD44 E8 94 73 FF FF 
	test	rax,rax	; 8040FD49 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FD4C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FD50 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x1D4 	; 8040FD54 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FD5A E8 D4 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FD5F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6,eax	; 8040FD63 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FD68 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FD6C E8 AA 46 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FD71 
	DB 0xE9,0x31,0xFE,0xFF,0xFF
;/  DUP7B?IP	M_WL	DROP 7 + REPEAT
	call	_DUP7BqueIP	; 8040FD76 E8 A7 74 FF FF 
	test	rax,rax	; 8040FD7B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FD7E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FD82 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x206 	; 8040FD86 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FD8C E8 A2 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FD91 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7,eax	; 8040FD95 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FD9A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FD9E E8 78 46 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FDA3 
	DB 0xE9,0xFF,0xFD,0xFF,0xFF
;/  FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040FDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 8040FDAC 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040FDB5 E8 28 46 FF FF 
;/  DUP 6D8D48 =	M_WL	DROP 4 + REPEAT  \ LEA  EBP, OFF-EBP [EBP]
	call	_DUP	; 8040FDBA E8 69 47 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FDBF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D48,eax	; 8040FDC3 
	DB 0xB8,0x48,0x8D,0x6D,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FDC8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 8040FDCC E8 69 45 FF FF 
	test	rax,rax	; 8040FDD1 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FDD4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FDD8 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x25C 	; 8040FDDC 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FDE2 E8 4C 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FDE7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 8040FDEB 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FDF0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FDF4 E8 22 46 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FDF9 
	DB 0xE9,0xA9,0xFD,0xFF,0xFF
;/  DUP3B?[EBP]	M_WL	DROP 3 + REPEAT
	call	_DUP3BquexcEBPyc	; 8040FDFE E8 CB 6B FF FF 
	test	rax,rax	; 8040FE03 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FE06 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FE0A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x28E 	; 8040FE0E 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FE14 E8 1A 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FE19 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040FE1D 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FE22 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FE26 E8 F0 45 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FE2B 
	DB 0xE9,0x77,0xFD,0xFF,0xFF
;/  DUP3B?	M_WL	DROP 3 + REPEAT
	call	_DUP3Bque	; 8040FE30 E8 9C 6C FF FF 
	test	rax,rax	; 8040FE35 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FE38 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FE3C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x2C0 	; 8040FE40 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
	call	_DgreatS	; 8040FE46 E8 E8 42 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FE4B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040FE4F 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FE54 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FE58 E8 BE 45 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FE5D 
	DB 0xE9,0x45,0xFD,0xFF,0xFF
;/  FFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040FE62 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 8040FE66 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FE6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8040FE6F E8 6E 45 FF FF 
;/  DUP2B?	WHILE 	DROP 2+ REPEAT
	call	_DUP2Bque	; 8040FE74 E8 60 68 FF FF 
	test	rax,rax	; 8040FE79 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040FE7C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040FE80 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_INLINEque+0x2F7 	; 8040FE84 
	DB 0xF,0x84,0xF,0x0,0x0,0x0
	call	_DgreatS	; 8040FE8A E8 A4 42 FF FF 
	call	_2add	; 8040FE8F E8 E4 45 FF FF 
;/*	jmp	_INLINEque+0x5 	; 8040FE94 
	DB 0xE9,0xE,0xFD,0xFF,0xFF
;/
;/ 2DROP  FALSE
	call	_2DROP	; 8040FE99 E8 CE 46 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FE9E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8040FEA2 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FEA7 
	DB 0x48,0x8D,0x6D,0xF8
;/;
	ret		; 8040FEAB C3 
;/
;/: DO_OPT   ( ADDR -- ADDR' )
;/  OPT? IF


_DO_OPT:
;/*	mov	rax,-0x08(rbp)	; 8040FEAC 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OPTque+0x5 (%rip),rax	; 8040FEB0 
	DB 0x48,0x8D,0x5,0xD8,0x59,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FEB7 
	DB 0x48,0x8B,0x0
	test	rax,rax	; 8040FEBA 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040FEBD 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DO_OPT+0x25 	; 8040FEC1 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
;/  MOPT-RULES  
	call	_MOPTsubRULES	; 8040FEC7 E8 9C EE FF FF 
;/ EVEN-EAX
	call	_EVENsubEAX	; 8040FECC E8 6C 64 FF FF 
;/ THEN ;
	ret		; 8040FED1 C3 
;/
;/: OPT   ( -- )  'NOOP DO_OPT DROP  ;


_OPT:
;/*	mov	rax,-0x08(rbp)	; 8040FED2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_NOOP(%rip),rax	; 8040FED6 
	DB 0x48,0x8D,0x5,0x5E,0x42,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040FEDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DO_OPT	; 8040FEE1 E8 C6 FF FF FF 
	call	_DgreatS	; 8040FEE6 E8 48 42 FF FF 
	ret		; 8040FEEB C3 
;/
;/: 1_,_STEP SetOP DROP COUNT C, ;


_1_com_STEP:
	call	_SetOP	; 8040FEEC E8 D8 5B FF FF 
	call	_DgreatS	; 8040FEF1 E8 3D 42 FF FF 
	call	_COUNT	; 8040FEF6 E8 C6 43 FF FF 
	call	_Ccom	; 8040FEFB E8 CE 4D FF FF 
	ret		; 8040FF00 C3 
;/: 2_,_STEP SetOP DROP DUP W@ W, 2+ ;


_2_com_STEP:
	call	_SetOP	; 8040FF01 E8 C3 5B FF FF 
	call	_DgreatS	; 8040FF06 E8 28 42 FF FF 
	call	_DUP	; 8040FF0B E8 18 46 FF FF 
	call	_Wload	; 8040FF10 E8 BC 42 FF FF 
	call	_Wcom	; 8040FF15 E8 97 4D FF FF 
	call	_2add	; 8040FF1A E8 59 45 FF FF 
	ret		; 8040FF1F C3 
;/: 3_,_STEP 2_,_STEP COUNT C, ;


_3_com_STEP:
	call	_2_com_STEP	; 8040FF20 E8 DC FF FF FF 
	call	_COUNT	; 8040FF25 E8 97 43 FF FF 
	call	_Ccom	; 8040FF2A E8 9F 4D FF FF 
	ret		; 8040FF2F C3 
;/: 4_,_STEP SetOP DROP DUP L@ L, 4+ ;


_4_com_STEP:
	call	_SetOP	; 8040FF30 E8 94 5B FF FF 
	call	_DgreatS	; 8040FF35 E8 F9 41 FF FF 
	call	_DUP	; 8040FF3A E8 E9 45 FF FF 
	call	_Lload	; 8040FF3F E8 82 42 FF FF 
	call	_Lcom	; 8040FF44 E8 4B 4D FF FF 
	call	_4add	; 8040FF49 E8 24 45 FF FF 
	ret		; 8040FF4E C3 
;/: 2_;_STEP 2_,_STEP DO_OPT ;


_2_end_STEP:
	call	_2_com_STEP	; 8040FF4F E8 AD FF FF FF 
	call	_DO_OPT	; 8040FF54 E8 53 FF FF FF 
	ret		; 8040FF59 C3 
;/: 3_;_STEP 3_,_STEP DO_OPT ;


_3_end_STEP:
	call	_3_com_STEP	; 8040FF5A E8 C1 FF FF FF 
	call	_DO_OPT	; 8040FF5F E8 48 FF FF FF 
	ret		; 8040FF64 C3 
;/: 4_;_STEP 4_,_STEP DO_OPT ;


_4_end_STEP:
	call	_4_com_STEP	; 8040FF65 E8 C6 FF FF FF 
	call	_DO_OPT	; 8040FF6A E8 3D FF FF FF 
	ret		; 8040FF6F C3 
;/: 5_;_STEP 4_,_STEP COUNT C,	DO_OPT ;


_5_end_STEP:
	call	_4_com_STEP	; 8040FF70 E8 BB FF FF FF 
	call	_COUNT	; 8040FF75 E8 47 43 FF FF 
	call	_Ccom	; 8040FF7A E8 4F 4D FF FF 
	call	_DO_OPT	; 8040FF7F E8 28 FF FF FF 
	ret		; 8040FF84 C3 
;/: 6_;_STEP 2_,_STEP DUP L@ L, 4+ DO_OPT ;


_6_end_STEP:
	call	_2_com_STEP	; 8040FF85 E8 77 FF FF FF 
	call	_DUP	; 8040FF8A E8 99 45 FF FF 
	call	_Lload	; 8040FF8F E8 32 42 FF FF 
	call	_Lcom	; 8040FF94 E8 FB 4C FF FF 
	call	_4add	; 8040FF99 E8 D4 44 FF FF 
	call	_DO_OPT	; 8040FF9E E8 9 FF FF FF 
	ret		; 8040FFA3 C3 
;/: 7_;_STEP 3_,_STEP DUP L@ L, 4+ DO_OPT ;


_7_end_STEP:
	call	_3_com_STEP	; 8040FFA4 E8 77 FF FF FF 
	call	_DUP	; 8040FFA9 E8 7A 45 FF FF 
	call	_Lload	; 8040FFAE E8 13 42 FF FF 
	call	_Lcom	; 8040FFB3 E8 DC 4C FF FF 
	call	_4add	; 8040FFB8 E8 B5 44 FF FF 
	call	_DO_OPT	; 8040FFBD E8 EA FE FF FF 
	ret		; 8040FFC2 C3 
;/: +EBP COUNT C>S OFF-EBP + C,	DO_OPT ;


_addEBP:
	call	_COUNT	; 8040FFC3 E8 F9 42 FF FF 
	call	_CgreatS	; 8040FFC8 E8 1E 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040FFCD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040FFD1 
	DB 0x48,0x8D,0x5,0xD1,0x58,0xFF,0xFF
;/*	mov	(rax),rax	; 8040FFD8 
	DB 0x48,0x8B,0x0
;/*	lea	-0x08(rbp),rbp	; 8040FFDB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8040FFDF E8 37 44 FF FF 
	call	_Ccom	; 8040FFE4 E8 E5 4C FF FF 
	call	_DO_OPT	; 8040FFE9 E8 BE FE FF FF 
	ret		; 8040FFEE C3 
;/: +REL DUP SL@ OVER + THERE -  L, 4+ \	DO_OPT


_addREL:
	call	_DUP	; 8040FFEF E8 34 45 FF FF 
	call	_SLload	; 8040FFF4 E8 C8 41 FF FF 
	call	_OVER	; 8040FFF9 E8 9B 45 FF FF 
	call	_add	; 8040FFFE E8 18 44 FF FF 
	call	_THERE	; 80410003 E8 30 4C FF FF 
	call	_sub	; 80410008 E8 B 44 FF FF 
	call	_Lcom	; 8041000D E8 82 4C FF FF 
	call	_4add	; 80410012 E8 5B 44 FF FF 
;/ ;
	ret		; 80410017 C3 
;/
;/: _INLINE,  (  CFA  --  )
;/	BEGIN
;/\  DO_OPT
;/  DUP L@      \  CFA  N'


__INLINEcom:
	call	_DUP	; 80410018 E8 B 45 FF FF 
	call	_Lload	; 8041001D E8 A4 41 FF FF 
;/  DUP FF AND 0C3 = IF DROP OPT? IF -EVEN-EAX EXIT-RULES EVEN-EAX THEN DROP  BREAK  \ RET
	call	_DUP	; 80410022 E8 1 45 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410027 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFF,eax	; 8041002B 
	DB 0xB8,0xFF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410030 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 80410034 E8 A9 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410039 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC3,eax	; 8041003D 
	DB 0xB8,0xC3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410042 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80410046 E8 EF 42 FF FF 
	test	rax,rax	; 8041004B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041004E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410052 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x79 	; 80410056 
	DB 0xF,0x84,0x35,0x0,0x0,0x0
	call	_DgreatS	; 8041005C E8 D2 40 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410061 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_OPTque+0x5 (%rip),rax	; 80410065 
	DB 0x48,0x8D,0x5,0x23,0x58,0xFF,0xFF
;/*	mov	(rax),rax	; 8041006C 
	DB 0x48,0x8B,0x0
	test	rax,rax	; 8041006F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80410072 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	__INLINEcom+0x73 	; 80410076 
	DB 0xF,0x84,0xF,0x0,0x0,0x0
	call	_subEVENsubEAX	; 8041007C E8 3E 80 FF FF 
	call	_EXITsubRULES	; 80410081 E8 49 EE FF FF 
	call	_EVENsubEAX	; 80410086 E8 B2 62 FF FF 
	call	_DgreatS	; 8041008B E8 A3 40 FF FF 
	ret		; 80410090 C3 
;/  DUP4B?	M_WL	4_;_STEP REPEAT
	call	_DUP4Bque	; 80410091 E8 FD 6C FF FF 
	test	rax,rax	; 80410096 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410099 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041009D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x99 	; 804100A1 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_4_end_STEP	; 804100A7 E8 B9 FE FF FF 
;/*	jmp	__INLINEcom	; 804100AC 
	DB 0xE9,0x67,0xFF,0xFF,0xFF
;/  DUP5B?	M_WL	5_;_STEP REPEAT
	call	_DUP5Bque	; 804100B1 E8 89 6D FF FF 
	test	rax,rax	; 804100B6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804100B9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804100BD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0xB9 	; 804100C1 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_5_end_STEP	; 804100C7 E8 A4 FE FF FF 
;/*	jmp	__INLINEcom	; 804100CC 
	DB 0xE9,0x47,0xFF,0xFF,0xFF
;/  DUP6B?	M_WL	6_;_STEP REPEAT
	call	_DUP6Bque	; 804100D1 E8 A 6E FF FF 
	test	rax,rax	; 804100D6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804100D9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804100DD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0xD9 	; 804100E1 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_6_end_STEP	; 804100E7 E8 99 FE FF FF 
;/*	jmp	__INLINEcom	; 804100EC 
	DB 0xE9,0x27,0xFF,0xFF,0xFF
;/  DUP7B?	M_WL	7_;_STEP REPEAT
	call	_DUP7Bque	; 804100F1 E8 C2 70 FF FF 
	test	rax,rax	; 804100F6 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804100F9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804100FD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0xF9 	; 80410101 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_7_end_STEP	; 80410107 E8 98 FE FF FF 
;/*	jmp	__INLINEcom	; 8041010C 
	DB 0xE9,0x7,0xFF,0xFF,0xFF
;/  DUP4B?[EBP]	M_WL 3?EBP 3_,_STEP +EBP REPEAT
	call	_DUP4BquexcEBPyc	; 80410111 E8 8D 6E FF FF 
	test	rax,rax	; 80410116 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410119 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041011D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x123 	; 80410121 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
	call	_3queEBP	; 80410127 E8 59 7F FF FF 
	call	_3_com_STEP	; 8041012C E8 EF FD FF FF 
	call	_addEBP	; 80410131 E8 8D FE FF FF 
;/*	jmp	__INLINEcom	; 80410136 
	DB 0xE9,0xDD,0xFE,0xFF,0xFF
;/  DUP5B?[EBP]	M_WL 4?EBP 4_,_STEP +EBP REPEAT
	call	_DUP5BquexcEBPyc	; 8041013B E8 33 6F FF FF 
	test	rax,rax	; 80410140 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410143 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410147 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x14D 	; 8041014B 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
	call	_4queEBP	; 80410151 E8 4C 7F FF FF 
	call	_4_com_STEP	; 80410156 E8 D5 FD FF FF 
	call	_addEBP	; 8041015B E8 63 FE FF FF 
;/*	jmp	__INLINEcom	; 80410160 
	DB 0xE9,0xB3,0xFE,0xFF,0xFF
;/  DUP6B?IP	M_WL	2_,_STEP +REL REPEAT
	call	_DUP6BqueIP	; 80410165 E8 73 6F FF FF 
	test	rax,rax	; 8041016A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041016D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410171 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x172 	; 80410175 
	DB 0xF,0x84,0xF,0x0,0x0,0x0
	call	_2_com_STEP	; 8041017B E8 81 FD FF FF 
	call	_addREL	; 80410180 E8 6A FE FF FF 
;/*	jmp	__INLINEcom	; 80410185 
	DB 0xE9,0x8E,0xFE,0xFF,0xFF
;/  DUP7B?IP	M_WL	3_,_STEP +REL  REPEAT
	call	_DUP7BqueIP	; 8041018A E8 93 70 FF FF 
	test	rax,rax	; 8041018F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410192 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410196 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x197 	; 8041019A 
	DB 0xF,0x84,0xF,0x0,0x0,0x0
	call	_3_com_STEP	; 804101A0 E8 7B FD FF FF 
	call	_addREL	; 804101A5 E8 45 FE FF FF 
;/*	jmp	__INLINEcom	; 804101AA 
	DB 0xE9,0x69,0xFE,0xFF,0xFF
;/  FFFFFF AND 
;/*	mov	rax,-0x08(rbp)	; 804101AF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFFFF,eax	; 804101B3 
	DB 0xB8,0xFF,0xFF,0xFF,0x0
;/*	lea	-0x08(rbp),rbp	; 804101B8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 804101BC E8 21 42 FF FF 
;/  DUP 6D8D48 = M_WL DROP DUP 3 + C@ +>OFF-EBP
	call	_DUP	; 804101C1 E8 62 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804101C6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D48,eax	; 804101CA 
	DB 0xB8,0x48,0x8D,0x6D,0x0
;/*	lea	-0x08(rbp),rbp	; 804101CF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 804101D3 E8 62 41 FF FF 
	test	rax,rax	; 804101D8 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804101DB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804101DF 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x20E 	; 804101E3 
	DB 0xF,0x84,0x3D,0x0,0x0,0x0
	call	_DgreatS	; 804101E9 E8 45 3F FF FF 
	call	_DUP	; 804101EE E8 35 43 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804101F3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 804101F7 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804101FC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80410200 E8 16 42 FF FF 
	call	_Cload	; 80410205 E8 C3 3F FF FF 
	call	_addgreatOFFsubEBP	; 8041020A E8 DA 62 FF FF 
;/                     4 + REPEAT  \ LEA  EBP, OFF-EBP [EBP]
;/*	mov	rax,-0x08(rbp)	; 8041020F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 80410213 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410218 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8041021C E8 FA 41 FF FF 
;/*	jmp	__INLINEcom	; 80410221 
	DB 0xE9,0xF2,0xFD,0xFF,0xFF
;/  DUP3B?[EBP]	M_WL 2?EBP 2_,_STEP +EBP REPEAT
	call	_DUP3BquexcEBPyc	; 80410226 E8 A3 67 FF FF 
	test	rax,rax	; 8041022B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041022E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410232 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x238 	; 80410236 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
	call	_2queEBP	; 8041023C E8 34 7E FF FF 
	call	_2_com_STEP	; 80410241 E8 BB FC FF FF 
	call	_addEBP	; 80410246 E8 78 FD FF FF 
;/*	jmp	__INLINEcom	; 8041024B 
	DB 0xE9,0xC8,0xFD,0xFF,0xFF
;/  DUP3B?	M_WL	3_;_STEP REPEAT
	call	_DUP3Bque	; 80410250 E8 7C 68 FF FF 
	test	rax,rax	; 80410255 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410258 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041025C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x258 	; 80410260 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_3_end_STEP	; 80410266 E8 EF FC FF FF 
;/*	jmp	__INLINEcom	; 8041026B 
	DB 0xE9,0xA8,0xFD,0xFF,0xFF
;/  FFFF AND
;/*	mov	rax,-0x08(rbp)	; 80410270 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xFFFF,eax	; 80410274 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410279 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AND	; 8041027D E8 60 41 FF FF 
;/  DUP2B?	WHILE	2_;_STEP REPEAT
	call	_DUP2Bque	; 80410282 E8 52 64 FF FF 
	test	rax,rax	; 80410287 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041028A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041028E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	__INLINEcom+0x28A 	; 80410292 
	DB 0xF,0x84,0xA,0x0,0x0,0x0
	call	_2_end_STEP	; 80410298 E8 B2 FC FF FF 
;/*	jmp	__INLINEcom	; 8041029D 
	DB 0xE9,0x76,0xFD,0xFF,0xFF
;/  HH. ." @COD, ERROR" ABORT
	call	_HHdot	; 804102A2 E8 70 53 FF FF 
	call	_cbigSdticcend	; 804102A7 E8 27 4C FF FF 
	DB 0xB,0x40,0x43,0x4F,0x44,0x2C,0x20,0x45,0x52,0x52,0x4F,0x52
	call	_TYPE	; 804102B8 E8 8F 4A FF FF 
	call	_ABORT	; 804102BD E8 D0 52 FF FF 
;/;
	ret		; 804102C2 C3 
;/
;/: OPT_INIT  ?SET


_OPT_INIT:
	call	_queSET	; 804102C3 E8 AE 58 FF FF 
;/\ EVEN-EBP? IF
;/ -EVEN-EBP
	call	_subEVENsubEBP	; 804102C8 E8 27 63 FF FF 
;/\ THEN
;/ ;
	ret		; 804102CD C3 
;/
;/: OPT_CLOSE
;/ EVEN-EBP


_OPT_CLOSE:
	call	_EVENsubEBP	; 804102CE E8 9D 61 FF FF 
;/ THERE TO LAST-HERE
	call	_THERE	; 804102D3 E8 60 49 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804102D8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x5 (%rip),rax	; 804102DC 
	DB 0x48,0x8D,0x5,0xED,0x55,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804102E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804102E7 E8 14 3F FF FF 
;/ ;
	ret		; 804102EC C3 
;/
;/: OPT; OPT  OPT_CLOSE ;


_OPTend:
	call	_OPT	; 804102ED E8 E0 FB FF FF 
	call	_OPT_CLOSE	; 804102F2 E8 D7 FF FF FF 
	ret		; 804102F7 C3 
;/
;/
;/: INLINE, ( CFA --  )
;/  OPT_INIT


_INLINEcom:
	call	_OPT_INIT	; 804102F8 E8 C6 FF FF FF 
;/  _INLINE,
	call	__INLINEcom	; 804102FD E8 16 FD FF FF 
;/  OPT_CLOSE
	call	_OPT_CLOSE	; 80410302 E8 C7 FF FF FF 
;/ ;
	ret		; 80410307 C3 
;/
;/TBASE M!
;/
;/\  8A DTST
;/\ [ ' DoTDTST TO TDTST ]

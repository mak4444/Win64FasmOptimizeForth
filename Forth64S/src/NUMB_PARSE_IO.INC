;/
;/
;/: HOLD ( char -- ) \ 94
;/  HLD @ 1- DUP HLD ! C!

_HOLD:
;/*	mov	rax,-0x08(rbp)	; 80410308 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x26A (%rip),rax	; 8041030C 
	DB 0x48,0x8D,0x5,0xA1,0x46,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410313 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410317 E8 AD 3E FF FF 
	call	_1sub	; 8041031C E8 69 41 FF FF 
	call	_DUP	; 80410321 E8 2 42 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410326 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x26A (%rip),rax	; 8041032A 
	DB 0x48,0x8D,0x5,0x83,0x46,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410331 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80410335 E8 C6 3E FF FF 
	call	_Csave	; 8041033A E8 96 3E FF FF 
;/;
	ret		; 8041033F C3 
;/
;/: <# ( -- ) \ 94
;/  PAD 1- HLD !


_lesshash:
;/*	mov	rax,-0x08(rbp)	; 80410340 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x372 (%rip),rax	; 80410344 
	DB 0x48,0x8D,0x5,0x71,0x47,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8041034B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_1sub	; 8041034F E8 36 41 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410354 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x26A (%rip),rax	; 80410358 
	DB 0x48,0x8D,0x5,0x55,0x46,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8041035F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80410363 E8 98 3E FF FF 
;/  0 PAD 1- C!
;/*	mov	rax,-0x08(rbp)	; 80410368 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8041036C 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410371 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_UNLOOP+0x372 (%rip),rax	; 80410375 
	DB 0x48,0x8D,0x5,0x40,0x47,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8041037C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_1sub	; 80410380 E8 5 41 FF FF 
	call	_Csave	; 80410385 E8 4B 3E FF FF 
;/;
	ret		; 8041038A C3 
;/
;/: # ( ud1 -- ud2 ) \ 94
;/  0 BASE @ UM/MOD >R BASE @ UM/MOD R>


_hash:
;/*	mov	rax,-0x08(rbp)	; 8041038B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8041038F 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410394 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410398 
	DB 0x48,0x8D,0x5,0x1D,0x48,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8041039F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_load	; 804103A3 E8 21 3E FF FF 
	call	_UMrslMOD	; 804103A8 E8 5F 41 FF FF 
	Push	rax	; 804103AD 50 
;/*	mov	0x00(rbp),rax	; 804103AE 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 804103B2 
	DB 0x48,0x89,0x45,0x0
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 804103B6 
	DB 0x48,0x8D,0x5,0xFF,0x47,0xFF,0xFF
	call	_load	; 804103BD E8 7 3E FF FF 
	call	_UMrslMOD	; 804103C2 E8 45 41 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804103C7 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 804103CB 58 
;/*	lea	-0x08(rbp),rbp	; 804103CC 
	DB 0x48,0x8D,0x6D,0xF8
;/  ROT DUP 10 < 0= IF 7 + THEN
	call	_ROT	; 804103D0 E8 3C 42 FF FF 
	call	_DUP	; 804103D5 E8 4E 41 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804103DA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xA,eax	; 804103DE 
	DB 0xB8,0xA,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804103E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_less	; 804103E7 E8 9B 3F FF FF 
	call	_0equ	; 804103EC E8 51 3F FF FF 
	test	rax,rax	; 804103F1 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804103F4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804103F8 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_hash+0x89 	; 804103FC 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80410402 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7,eax	; 80410406 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8041040B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 8041040F E8 7 40 FF FF 
;/ 48 + 
;/*	mov	rax,-0x08(rbp)	; 80410414 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x30,eax	; 80410418 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8041041D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80410421 E8 F5 3F FF FF 
;/  HOLD
	call	_HOLD	; 80410426 E8 DD FE FF FF 
;/;
	ret		; 8041042B C3 
;/
;/: #S ( ud1 -- ud2 ) \ 94
;/  BEGIN
;/    # 2DUP D0=


_hashS:
	call	_hash	; 8041042C E8 5A FF FF FF 
	call	_2DUP	; 80410431 E8 FB 40 FF FF 
	call	_D0equ	; 80410436 E8 2A 3F FF FF 
;/  UNTIL
	test	rax,rax	; 8041043B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041043E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410442 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_hashS	; 80410446 
	DB 0xF,0x84,0xE0,0xFF,0xFF,0xFF
;/;
	ret		; 8041044C C3 
;/
;/: #> ( xd -- c-addr u ) \ 94
;/  2DROP HLD @ PAD OVER - 1-


_hashgreat:
	call	_2DROP	; 8041044D E8 1A 41 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410452 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x26A (%rip),rax	; 80410456 
	DB 0x48,0x8D,0x5,0x57,0x45,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8041045D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410461 E8 63 3D FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410466 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x372 (%rip),rax	; 8041046A 
	DB 0x48,0x8D,0x5,0x4B,0x46,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410471 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OVER	; 80410475 E8 1F 41 FF FF 
	call	_sub	; 8041047A E8 99 3F FF FF 
	call	_1sub	; 8041047F E8 6 40 FF FF 
;/;
	ret		; 80410484 C3 
;/
;/: SIGN ( n -- ) \ 94
;/  0< IF [CHAR] - HOLD THEN


_SIGN:
	call	_0less	; 80410485 E8 21 3F FF FF 
	test	rax,rax	; 8041048A 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041048D 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410491 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_SIGN+0x28 	; 80410495 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8041049B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2D,eax	; 8041049F 
	DB 0xB8,0x2D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804104A4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_HOLD	; 804104A8 E8 5B FE FF FF 
;/;
	ret		; 804104AD C3 
;/
;/: (D.) ( d -- addr len )
;/  DUP >R DABS <# #S R> SIGN #>


_cbigDdotcend:
	call	_DUP	; 804104AE E8 75 40 FF FF 
	Push	rax	; 804104B3 50 
;/*	mov	0x00(rbp),rax	; 804104B4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804104B8 
	DB 0x48,0x8D,0x6D,0x8
	call	_DABS	; 804104BC E8 48 4B FF FF 
	call	_lesshash	; 804104C1 E8 7A FE FF FF 
	call	_hashS	; 804104C6 E8 61 FF FF FF 
;/*	mov	rax,-0x08(rbp)	; 804104CB 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 804104CF 58 
;/*	lea	-0x08(rbp),rbp	; 804104D0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SIGN	; 804104D4 E8 AC FF FF FF 
	call	_hashgreat	; 804104D9 E8 6F FF FF FF 
;/;
	ret		; 804104DE C3 
;/
;/: HOLDS ( addr u -- ) \ from eserv src
;/  TUCK + SWAP 0 ?DO


_HOLDS:
	call	_TUCK	; 804104DF E8 DD 40 FF FF 
	call	_add	; 804104E4 E8 32 3F FF FF 
	call	_SWAP	; 804104E9 E8 54 40 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804104EE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804104F2 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804104F7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_cbigqueDOcend	; 804104FB E8 A 42 FF FF 
	DQ _HOLDS+0x5A 
;/ DUP I
	call	_DUP	; 80410508 E8 1B 40 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8041050D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	r14,rax	; 80410511 
	DB 0x4C,0x89,0xF0
;/*	lea	-0x08(rbp),rbp	; 80410514 
	DB 0x48,0x8D,0x6D,0xF8
;/ - 1- C@ HOLD ( /CHAR +LOOP FIXME) LOOP DROP
	call	_sub	; 80410518 E8 FB 3E FF FF 
	call	_1sub	; 8041051D E8 68 3F FF FF 
	call	_Cload	; 80410522 E8 A6 3C FF FF 
	call	_HOLD	; 80410527 E8 DC FD FF FF 
;/*	inc	r14	; 8041052C 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 8041052F 
	DB 0x49,0xFF,0xC7
	jNo	_HOLDS+0x29 	; 80410532 71 D4 
	pop	r14	; 80410534 41 5E 
	pop	r15	; 80410536 41 5F 
	pop	rcx	; 80410538 59 
	call	_DgreatS	; 80410539 E8 F5 3B FF FF 
;/
;/;
	ret		; 8041053E C3 
;/
;/: SPACES       ( N  -- )
;/    0MAX 80 MIN ?DUP


_SPACES:
	call	_0MAX	; 8041053F E8 5D 4A FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410544 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x50,eax	; 80410548 
	DB 0xB8,0x50,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8041054D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_MIN	; 80410551 E8 A3 3D FF FF 
	call	_queDUP	; 80410556 E8 C8 3F FF FF 
;/    IF      0 ?DO SPACE LOOP 
	test	rax,rax	; 8041055B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8041055E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410562 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_SPACES+0x59 	; 80410566 
	DB 0xF,0x84,0x2C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8041056C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410570 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410575 
	DB 0x48,0x8D,0x6D,0xF8
	call	_cbigqueDOcend	; 80410579 E8 8C 41 FF FF 
	DQ _SPACES+0x59 
	call	_SPACE	; 80410586 E8 3 4A FF FF 
;/*	inc	r14	; 8041058B 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 8041058E 
	DB 0x49,0xFF,0xC7
	jNo	_SPACES+0x47 	; 80410591 71 F3 
	pop	r14	; 80410593 41 5E 
	pop	r15	; 80410595 41 5F 
	pop	rcx	; 80410597 59 
;/    THEN
;/;
	ret		; 80410598 C3 
;/
;/: D. ( d -- ) \ 94 DOUBLE
;/  (D.) TYPE SPACE ;


_Ddot:
	call	_cbigDdotcend	; 80410599 E8 10 FF FF FF 
	call	_TYPE	; 8041059E E8 A9 47 FF FF 
	call	_SPACE	; 804105A3 E8 E6 49 FF FF 
	ret		; 804105A8 C3 
;/
;/: S>U  0 ;


_SgreatU:
;/*	mov	rax,-0x08(rbp)	; 804105A9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804105AD 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804105B2 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804105B6 C3 
;/
;/: . ( n -- )  S>D D. ;


_dot:
	call	_SgreatD	; 804105B7 E8 22 3D FF FF 
	call	_Ddot	; 804105BC E8 D8 FF FF FF 
	ret		; 804105C1 C3 
;/
;/: U. ( u -- )   0 D. ;


_Udot:
;/*	mov	rax,-0x08(rbp)	; 804105C2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804105C6 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804105CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ddot	; 804105CF E8 C5 FF FF FF 
	ret		; 804105D4 C3 
;/
;/\ : U.R ( u n -- ) \ 94 CORE EXT
;/\  >R  0 <# #S #>  R> OVER - 0MAX SPACES TYPE ;
;/
;/: U.R  ( u n -- ) \ 94 CORE EXT
;/  >R 0 (D.) R> OVER - SPACES TYPE  ;


_UdotR:
	Push	rax	; 804105D5 50 
;/*	mov	0x00(rbp),rax	; 804105D6 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 804105DA 
	DB 0x48,0x89,0x45,0x0
;/*	mov	$0x0,eax	; 804105DE 
	DB 0xB8,0x0,0x0,0x0,0x0
	call	_cbigDdotcend	; 804105E3 E8 C6 FE FF FF 
;/*	mov	rax,-0x08(rbp)	; 804105E8 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 804105EC 58 
;/*	lea	-0x08(rbp),rbp	; 804105ED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OVER	; 804105F1 E8 A3 3F FF FF 
	call	_sub	; 804105F6 E8 1D 3E FF FF 
	call	_SPACES	; 804105FB E8 3F FF FF FF 
	call	_TYPE	; 80410600 E8 47 47 FF FF 
	ret		; 80410605 C3 
;/
;/T: .R  ( n1 n -- ) \ 94 CORE EXT
;/  >R S>D (D.) R> OVER - SPACES TYPE  ;


_dotR:
	Push	rax	; 80410606 50 
;/*	mov	0x00(rbp),rax	; 80410607 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041060B 
	DB 0x48,0x8D,0x6D,0x8
	call	_SgreatD	; 8041060F E8 CA 3C FF FF 
	call	_cbigDdotcend	; 80410614 E8 95 FE FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410619 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8041061D 58 
;/*	lea	-0x08(rbp),rbp	; 8041061E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OVER	; 80410622 E8 72 3F FF FF 
	call	_sub	; 80410627 E8 EC 3D FF FF 
	call	_SPACES	; 8041062C E8 E FF FF FF 
	call	_TYPE	; 80410631 E8 16 47 FF FF 
	ret		; 80410636 C3 
;/
;/: H.R ( n1 n2 -- )
;/ BASE @  >R HEX U.R


_HdotR:
;/*	mov	rax,-0x08(rbp)	; 80410637 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 8041063B 
	DB 0x48,0x8D,0x5,0x7A,0x45,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410642 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410646 E8 7E 3B FF FF 
	Push	rax	; 8041064B 50 
;/*	mov	0x00(rbp),rax	; 8041064C 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 80410650 
	DB 0x48,0x89,0x45,0x0
;/*	mov	$0x10,eax	; 80410654 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80410659 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 8041065D 
	DB 0x48,0x8D,0x5,0x58,0x45,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410664 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80410668 E8 93 3B FF FF 
	call	_UdotR	; 8041066D E8 63 FF FF FF 
;/ R> BASE ! ;
;/*	mov	rax,-0x08(rbp)	; 80410672 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410676 58 
;/*	mov	rax,-0x10(rbp)	; 80410677 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 8041067B 
	DB 0x48,0x8D,0x5,0x3A,0x45,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410682 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410686 E8 75 3B FF FF 
	ret		; 8041068B C3 
;/
;/: H.N           ( n1 n2 -- )    \ display n1 as a HEX number of n2 digits
;/                BASE @ >R HEX >R


_HdotN:
;/*	mov	rax,-0x08(rbp)	; 8041068C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410690 
	DB 0x48,0x8D,0x5,0x25,0x45,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410697 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8041069B E8 29 3B FF FF 
	Push	rax	; 804106A0 50 
;/*	mov	0x00(rbp),rax	; 804106A1 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 804106A5 
	DB 0x48,0x89,0x45,0x0
;/*	mov	$0x10,eax	; 804106A9 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804106AE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 804106B2 
	DB 0x48,0x8D,0x5,0x3,0x45,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804106B9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804106BD E8 3E 3B FF FF 
	Push	rax	; 804106C2 50 
;/*	mov	0x00(rbp),rax	; 804106C3 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 804106C7 
	DB 0x48,0x89,0x45,0x0
;/                0 <# R> 0 ?DO # LOOP #> TYPE
;/*	mov	$0x0,eax	; 804106CB 
	DB 0xB8,0x0,0x0,0x0,0x0
	call	_lesshash	; 804106D0 E8 6B FC FF FF 
;/*	mov	rax,-0x08(rbp)	; 804106D5 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 804106D9 58 
;/*	mov	rax,-0x10(rbp)	; 804106DA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x0,eax	; 804106DE 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 804106E3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_cbigqueDOcend	; 804106E7 E8 1E 40 FF FF 
	DQ _HdotN+0x7A 
	call	_hash	; 804106F4 E8 92 FC FF FF 
;/*	inc	r14	; 804106F9 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 804106FC 
	DB 0x49,0xFF,0xC7
	jNo	_HdotN+0x68 	; 804106FF 71 F3 
	pop	r14	; 80410701 41 5E 
	pop	r15	; 80410703 41 5F 
	pop	rcx	; 80410705 59 
	call	_hashgreat	; 80410706 E8 42 FD FF FF 
	call	_TYPE	; 8041070B E8 3C 46 FF FF 
;/                R> BASE ! ;
;/*	mov	rax,-0x08(rbp)	; 80410710 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410714 58 
;/*	mov	rax,-0x10(rbp)	; 80410715 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410719 
	DB 0x48,0x8D,0x5,0x9C,0x44,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410720 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410724 E8 D7 3A FF FF 
	ret		; 80410729 C3 
;/
;/
;/: H.H C@ 2 H.N SPACE ;


_HdotH:
	call	_Cload	; 8041072A E8 9E 3A FF FF 
;/*	mov	rax,-0x08(rbp)	; 8041072F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 80410733 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410738 
	DB 0x48,0x8D,0x6D,0xF8
	call	_HdotN	; 8041073C E8 4B FF FF FF 
	call	_SPACE	; 80410741 E8 48 48 FF FF 
	ret		; 80410746 C3 
;/\ : TAB 9 EMIT ;
;/
;/: .SN ( n --)
;/  DUP 0< IF ." Stack exhaustion" SP0 @ SP! THEN


_dotSN:
	call	_DUP	; 80410747 E8 DC 3D FF FF 
	call	_0less	; 8041074C E8 5A 3C FF FF 
	test	rax,rax	; 80410751 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410754 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410758 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_dotSN+0x4F 	; 8041075C 
	DB 0xF,0x84,0x34,0x0,0x0,0x0
	call	_cbigSdticcend	; 80410762 E8 6C 47 FF FF 
	DB 0x10,0x53,0x74,0x61,0x63,0x6B,0x20,0x65,0x78,0x68,0x61,0x75,0x73,0x74,0x69,0x6F,0x6E
	call	_TYPE	; 80410778 E8 CF 45 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8041077D 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_DOFIELD+0x14 (%rip),rax	; 80410781 
	DB 0x48,0x8D,0x5,0x50,0x44,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410788 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8041078C E8 38 3A FF FF 
	call	_SPsave	; 80410791 E8 12 3A FF FF 
;/   >R BEGIN
	Push	rax	; 80410796 50 
;/*	mov	0x00(rbp),rax	; 80410797 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041079B 
	DB 0x48,0x8D,0x6D,0x8
;/         R@
;/*	mov	rax,-0x08(rbp)	; 8041079F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rsp),rax	; 804107A3 
	DB 0x48,0x8B,0x4,0x24
	test	rax,rax	; 804107A7 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804107AA 
	DB 0x48,0x8B,0x45,0xF8
;/      WHILE
;/*	jz	_dotSN+0xB3 	; 804107AE 
	DB 0xF,0x84,0x46,0x0,0x0,0x0
;/        SP@ R@ 1- CELLS + @ .
	call	_SPload	; 804107B4 E8 E3 39 FF FF 
;/*	mov	rax,-0x08(rbp)	; 804107B9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rsp),rax	; 804107BD 
	DB 0x48,0x8B,0x4,0x24
;/*	lea	-0x08(rbp),rbp	; 804107C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_1sub	; 804107C5 E8 C0 3C FF FF 
	call	_CELLS	; 804107CA E8 BF 3C FF FF 
	call	_add	; 804107CF E8 47 3C FF FF 
	call	_load	; 804107D4 E8 F0 39 FF FF 
	call	_dot	; 804107D9 E8 D9 FD FF FF 
;/        R> 1- >R
;/*	mov	rax,-0x08(rbp)	; 804107DE 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 804107E2 58 
;/*	lea	-0x08(rbp),rbp	; 804107E3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_1sub	; 804107E7 E8 9E 3C FF FF 
	Push	rax	; 804107EC 50 
;/*	mov	0x00(rbp),rax	; 804107ED 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804107F1 
	DB 0x48,0x8D,0x6D,0x8
;/      REPEAT RDROP
;/*	jmp	_dotSN+0x58 	; 804107F5 
	DB 0xE9,0xA5,0xFF,0xFF,0xFF
;/*	lea	0x08(rsp),rsp	; 804107FA 
	DB 0x48,0x8D,0x64,0x24,0x8
;/;
	ret		; 804107FF C3 
;/
;/T: .S DEPTH .SN ;


_dotS:
	call	_DEPTH	; 80410800 E8 39 47 FF FF 
	call	_dotSN	; 80410805 E8 3D FF FF FF 
	ret		; 8041080A C3 
;/
;/: H.
;/  BASE @ HEX SWAP U. BASE ! ;


_Hdot:
;/*	mov	rax,-0x08(rbp)	; 8041080B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 8041080F 
	DB 0x48,0x8D,0x5,0xA6,0x43,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410816 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 8041081A E8 AA 39 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8041081F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x10,eax	; 80410823 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410828 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 8041082C 
	DB 0x48,0x8D,0x5,0x89,0x43,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410833 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410837 E8 C4 39 FF FF 
	call	_SWAP	; 8041083C E8 1 3D FF FF 
	call	_Udot	; 80410841 E8 7C FD FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410846 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 8041084A 
	DB 0x48,0x8D,0x5,0x6B,0x43,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410851 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 80410855 E8 A6 39 FF FF 
	ret		; 8041085A C3 
;/
;/
;/: 0.R
;/  >R 0 <# #S #> R> OVER - 0 MAX DUP 


_0dotR:
	Push	rax	; 8041085B 50 
;/*	mov	0x00(rbp),rax	; 8041085C 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 80410860 
	DB 0x48,0x89,0x45,0x0
;/*	mov	$0x0,eax	; 80410864 
	DB 0xB8,0x0,0x0,0x0,0x0
	call	_lesshash	; 80410869 E8 D2 FA FF FF 
	call	_hashS	; 8041086E E8 B9 FB FF FF 
	call	_hashgreat	; 80410873 E8 D5 FB FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410878 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8041087C 58 
;/*	lea	-0x08(rbp),rbp	; 8041087D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OVER	; 80410881 E8 13 3D FF FF 
	call	_sub	; 80410886 E8 8D 3B FF FF 
;/*	mov	rax,-0x08(rbp)	; 8041088B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8041088F 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410894 
	DB 0x48,0x8D,0x6D,0xF8
	call	_MAX	; 80410898 E8 78 3A FF FF 
	call	_DUP	; 8041089D E8 86 3C FF FF 
;/    IF 0 DO [CHAR] 0 EMIT LOOP
	test	rax,rax	; 804108A2 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804108A5 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804108A9 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_0dotR+0x96 	; 804108AD 
	DB 0xF,0x84,0x3E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804108B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804108B7 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804108BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_cbigDOcend	; 804108C0 E8 4B 3E FF FF 
	DQ _0dotR+0x91 
;/*	mov	rax,-0x08(rbp)	; 804108CD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x30,eax	; 804108D1 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804108D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_EMIT	; 804108DA E8 C 44 FF FF 
;/*	inc	r14	; 804108DF 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 804108E2 
	DB 0x49,0xFF,0xC7
	jNo	_0dotR+0x72 	; 804108E5 71 E6 
	pop	r14	; 804108E7 41 5E 
	pop	r15	; 804108E9 41 5F 
	pop	rcx	; 804108EB 59 
;/    ELSE DROP THEN TYPE ;
;/*	jmp	_0dotR+0x9B 	; 804108EC 
	DB 0xE9,0x5,0x0,0x0,0x0
	call	_DgreatS	; 804108F1 E8 3D 38 FF FF 
	call	_TYPE	; 804108F6 E8 51 44 FF FF 
	ret		; 804108FB C3 
;/
;/
;/: >PRT
;/  DUP BL U< IF DROP [CHAR] . THEN


_greatPRT:
	call	_DUP	; 804108FC E8 27 3C FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410901 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20,eax	; 80410905 
	DB 0xB8,0x20,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8041090A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Uless	; 8041090E E8 A9 3A FF FF 
	test	rax,rax	; 80410913 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410916 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041091A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_greatPRT+0x3A 	; 8041091E 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
	call	_DgreatS	; 80410924 E8 A 38 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410929 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E,eax	; 8041092D 
	DB 0xB8,0x2E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410932 
	DB 0x48,0x8D,0x6D,0xF8
;/;
	ret		; 80410936 C3 
;/
;/: PTYPE
;/  0 ?DO


_PTYPE:
;/*	mov	rax,-0x08(rbp)	; 80410937 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 8041093B 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410940 
	DB 0x48,0x8D,0x6D,0xF8
	call	_cbigqueDOcend	; 80410944 E8 C1 3D FF FF 
	DQ _PTYPE+0x36 
;/ COUNT >PRT EMIT LOOP DROP ;
	call	_COUNT	; 80410951 E8 6B 39 FF FF 
	call	_greatPRT	; 80410956 E8 A1 FF FF FF 
	call	_EMIT	; 8041095B E8 8B 43 FF FF 
;/*	inc	r14	; 80410960 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 80410963 
	DB 0x49,0xFF,0xC7
	jNo	_PTYPE+0x1A 	; 80410966 71 E9 
	pop	r14	; 80410968 41 5E 
	pop	r15	; 8041096A 41 5F 
	pop	rcx	; 8041096C 59 
	call	_DgreatS	; 8041096D E8 C1 37 FF FF 
	ret		; 80410972 C3 
;/
;/CREATE DUMP_BASE 0 ,

	DQ 0x0
;/
;/: DUMP_X ( addr u -- ) \ 94 TOOLS
;/  DUP 0= IF 2DROP EXIT THEN

_DUMP_X:
	call	_DUP	; 8041097B E8 A8 3B FF FF 
	call	_0equ	; 80410980 E8 BD 39 FF FF 
	test	rax,rax	; 80410985 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410988 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8041098C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUMP_X+0x21 	; 80410990 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
	call	_2DROP	; 80410996 E8 D1 3B FF FF 
	ret		; 8041099B C3 
;/  BASE @ >R HEX
;/*	mov	rax,-0x08(rbp)	; 8041099C 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 804109A0 
	DB 0x48,0x8D,0x5,0x15,0x42,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804109A7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 804109AB E8 19 38 FF FF 
	Push	rax	; 804109B0 50 
;/*	mov	0x00(rbp),rax	; 804109B1 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 804109B5 
	DB 0x48,0x89,0x45,0x0
;/*	mov	$0x10,eax	; 804109B9 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804109BE 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 804109C2 
	DB 0x48,0x8D,0x5,0xF3,0x41,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804109C9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_save	; 804109CD E8 2E 38 FF FF 
;/  $F + $10 U/ 0 DO
;/*	mov	rax,-0x08(rbp)	; 804109D2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF,eax	; 804109D6 
	DB 0xB8,0xF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804109DB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 804109DF E8 37 3A FF FF 
;/*	mov	rax,-0x08(rbp)	; 804109E4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x10,eax	; 804109E8 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804109ED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ursl	; 804109F1 E8 DB 3A FF FF 
;/*	mov	rax,-0x08(rbp)	; 804109F6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 804109FA 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804109FF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_cbigDOcend	; 80410A03 E8 8 3D FF FF 
	DQ _DUMP_X+0x18B 
;/\    I IF CR THEN
;/    CR DUP DUMP_BASE @ + 4 0.R SPACE
	call	_CR	; 80410A10 E8 69 43 FF FF 
	call	_DUP	; 80410A15 E8 E 3B FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410A1A 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_PTYPE+0x3C (%rip),rax	; 80410A1E 
	DB 0x48,0x8D,0x5,0x4E,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410A25 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410A29 E8 9B 37 FF FF 
	call	_add	; 80410A2E E8 E8 39 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410A33 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 80410A37 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410A3C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_0dotR	; 80410A40 E8 16 FE FF FF 
	call	_SPACE	; 80410A45 E8 44 45 FF FF 
;/    SPACE DUP $10 0
	call	_SPACE	; 80410A4A E8 3F 45 FF FF 
	call	_DUP	; 80410A4F E8 D4 3A FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410A54 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x10,eax	; 80410A58 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410A5D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x0,eax	; 80410A61 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410A66 
	DB 0x48,0x8D,0x6D,0xF0
;/      DO I 4 MOD 0= IF SPACE THEN
	call	_cbigDOcend	; 80410A6A E8 A1 3C FF FF 
	DQ _DUMP_X+0x163 
;/*	mov	rax,-0x08(rbp)	; 80410A77 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	r14,rax	; 80410A7B 
	DB 0x4C,0x89,0xF0
;/*	mov	rax,-0x10(rbp)	; 80410A7E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 80410A82 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410A87 
	DB 0x48,0x8D,0x6D,0xF0
	call	_MOD	; 80410A8B E8 2D 3A FF FF 
	call	_0equ	; 80410A90 E8 AD 38 FF FF 
	test	rax,rax	; 80410A95 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410A98 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410A9C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DUMP_X+0x130 	; 80410AA0 
	DB 0xF,0x84,0x5,0x0,0x0,0x0
	call	_SPACE	; 80410AA6 E8 E3 44 FF FF 
;/        DUP C@ 2 0.R SPACE 1+
	call	_DUP	; 80410AAB E8 78 3A FF FF 
	call	_Cload	; 80410AB0 E8 18 37 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410AB5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 80410AB9 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410ABE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_0dotR	; 80410AC2 E8 94 FD FF FF 
	call	_SPACE	; 80410AC7 E8 C2 44 FF FF 
	call	_CHARadd	; 80410ACC E8 AA 39 FF FF 
;/      LOOP SWAP $10  PTYPE
;/*	inc	r14	; 80410AD1 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 80410AD4 
	DB 0x49,0xFF,0xC7
	jNo	_DUMP_X+0xFC 	; 80410AD7 71 9E 
	pop	r14	; 80410AD9 41 5E 
	pop	r15	; 80410ADB 41 5F 
	pop	rcx	; 80410ADD 59 
	call	_SWAP	; 80410ADE E8 5F 3A FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410AE3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x10,eax	; 80410AE7 
	DB 0xB8,0x10,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410AEC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_PTYPE	; 80410AF0 E8 42 FE FF FF 
;/  LOOP DROP R> BASE !
;/*	inc	r14	; 80410AF5 
	DB 0x49,0xFF,0xC6
;/*	inc	r15	; 80410AF8 
	DB 0x49,0xFF,0xC7
;/*	jNo	_DUMP_X+0x95 	; 80410AFB 
	DB 0xF,0x81,0xF,0xFF,0xFF,0xFF
	pop	r14	; 80410B01 41 5E 
	pop	r15	; 80410B03 41 5F 
	pop	rcx	; 80410B05 59 
	call	_DgreatS	; 80410B06 E8 28 36 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410B0B 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410B0F 58 
;/*	mov	rax,-0x10(rbp)	; 80410B10 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410B14 
	DB 0x48,0x8D,0x5,0xA1,0x40,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410B1B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410B1F E8 DC 36 FF FF 
;/;
	ret		; 80410B24 C3 
;/
;/T: DUMP ( addr u -- ) \ 94 TOOLS
;/  DUMP_BASE 0!


_DUMP:
;/*	mov	rax,-0x08(rbp)	; 80410B25 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_PTYPE+0x3C (%rip),rax	; 80410B29 
	DB 0x48,0x8D,0x5,0x43,0xFE,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410B30 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OFF	; 80410B34 E8 40 37 FF FF 
;/  CR DUMP_X
	call	_CR	; 80410B39 E8 40 42 FF FF 
	call	_DUMP_X	; 80410B3E E8 38 FE FF FF 
;/;
	ret		; 80410B43 C3 
;/
;/: DIGIT ( C, N1 -> N2, TF / FF ) 
;/\ N2 - 
;/\ 
;/   >R


_DIGIT:
	Push	rax	; 80410B44 50 
;/*	mov	0x00(rbp),rax	; 80410B45 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 80410B49 
	DB 0x48,0x89,0x45,0x0
;/   [CHAR] 0 - 10 OVER U<
;/*	mov	$0x30,eax	; 80410B4D 
	DB 0xB8,0x30,0x0,0x0,0x0
	call	_sub	; 80410B52 E8 C1 38 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410B57 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xA,eax	; 80410B5B 
	DB 0xB8,0xA,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410B60 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OVER	; 80410B64 E8 30 3A FF FF 
	call	_Uless	; 80410B69 E8 4E 38 FF FF 
;/   IF 
	test	rax,rax	; 80410B6E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410B71 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410B75 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DIGIT+0x116 	; 80410B79 
	DB 0xF,0x84,0xDB,0x0,0x0,0x0
;/      DUP [CHAR] A [CHAR] 0 -     < IF  RDROP DROP 0 EXIT      THEN
	call	_DUP	; 80410B7F E8 A4 39 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410B84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x41,eax	; 80410B88 
	DB 0xB8,0x41,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410B8D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x30,eax	; 80410B91 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410B96 
	DB 0x48,0x8D,0x6D,0xF0
	call	_sub	; 80410B9A E8 79 38 FF FF 
	call	_less	; 80410B9F E8 E3 37 FF FF 
	test	rax,rax	; 80410BA4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410BA7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410BAB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DIGIT+0x89 	; 80410BAF 
	DB 0xF,0x84,0x18,0x0,0x0,0x0
;/*	lea	0x08(rsp),rsp	; 80410BB5 
	DB 0x48,0x8D,0x64,0x24,0x8
	call	_DgreatS	; 80410BBA E8 74 35 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410BBF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410BC3 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410BC8 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80410BCC C3 
;/      DUP [CHAR] a [CHAR] 0 -  1- > IF [CHAR] a  [CHAR] A - -  THEN
	call	_DUP	; 80410BCD E8 56 39 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410BD2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x61,eax	; 80410BD6 
	DB 0xB8,0x61,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410BDB 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x30,eax	; 80410BDF 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410BE4 
	DB 0x48,0x8D,0x6D,0xF0
	call	_sub	; 80410BE8 E8 2B 38 FF FF 
	call	_1sub	; 80410BED E8 98 38 FF FF 
	call	_great	; 80410BF2 E8 7E 37 FF FF 
	test	rax,rax	; 80410BF7 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410BFA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410BFE 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DIGIT+0xE4 	; 80410C02 
	DB 0xF,0x84,0x20,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80410C08 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x61,eax	; 80410C0C 
	DB 0xB8,0x61,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410C11 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x41,eax	; 80410C15 
	DB 0xB8,0x41,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410C1A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_sub	; 80410C1E E8 F5 37 FF FF 
	call	_sub	; 80410C23 E8 F0 37 FF FF 
;/          [CHAR] A [CHAR] 0 - 10 - -
;/*	mov	rax,-0x08(rbp)	; 80410C28 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x41,eax	; 80410C2C 
	DB 0xB8,0x41,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410C31 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x30,eax	; 80410C35 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410C3A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_sub	; 80410C3E E8 D5 37 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410C43 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xA,eax	; 80410C47 
	DB 0xB8,0xA,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410C4C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_sub	; 80410C50 E8 C3 37 FF FF 
	call	_sub	; 80410C55 E8 BE 37 FF FF 
;/   THEN R> OVER U> DUP 0= IF NIP THEN ;
;/*	mov	rax,-0x08(rbp)	; 80410C5A 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410C5E 58 
;/*	lea	-0x08(rbp),rbp	; 80410C5F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OVER	; 80410C63 E8 31 39 FF FF 
	call	_Ugreat	; 80410C68 E8 43 37 FF FF 
	call	_DUP	; 80410C6D E8 B6 38 FF FF 
	call	_0equ	; 80410C72 E8 CB 36 FF FF 
	test	rax,rax	; 80410C77 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410C7A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410C7E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_DIGIT+0x149 	; 80410C82 
	DB 0xF,0x84,0x5,0x0,0x0,0x0
	call	_NIP	; 80410C88 E8 7F 39 FF FF 
	ret		; 80410C8D C3 
;/
;/
;/: >NUMBER ( ud1 c-addr1 u1 -- ud2 c-addr2 u2 ) \ 94
;/  BEGIN
;/    DUP


_greatNUMBER:
	call	_DUP	; 80410C8E E8 95 38 FF FF 
;/  WHILE
	test	rax,rax	; 80410C93 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410C96 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410C9A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_greatNUMBER+0xD7 	; 80410C9E 
	DB 0xF,0x84,0xC1,0x0,0x0,0x0
;/    >R
	Push	rax	; 80410CA4 50 
;/*	mov	0x00(rbp),rax	; 80410CA5 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410CA9 
	DB 0x48,0x8D,0x6D,0x8
;/    DUP >R
	call	_DUP	; 80410CAD E8 76 38 FF FF 
	Push	rax	; 80410CB2 50 
;/*	mov	0x00(rbp),rax	; 80410CB3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410CB7 
	DB 0x48,0x8D,0x6D,0x8
;/    C@ BASE @ DIGIT 0=     \ ud n flag
	call	_Cload	; 80410CBB E8 D 35 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410CC0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410CC4 
	DB 0x48,0x8D,0x5,0xF1,0x3E,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410CCB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410CCF E8 F5 34 FF FF 
	call	_DIGIT	; 80410CD4 E8 6B FE FF FF 
	call	_0equ	; 80410CD9 E8 64 36 FF FF 
;/    IF R> R> EXIT THEN     \ ud n  ( ud = udh udl )
	test	rax,rax	; 80410CDE 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410CE1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410CE5 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_greatNUMBER+0x70 	; 80410CE9 
	DB 0xF,0x84,0xF,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80410CEF 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410CF3 58 
;/*	mov	rax,-0x10(rbp)	; 80410CF4 
	DB 0x48,0x89,0x45,0xF0
	pop	rax	; 80410CF8 58 
;/*	lea	-0x10(rbp),rbp	; 80410CF9 
	DB 0x48,0x8D,0x6D,0xF0
	ret		; 80410CFD C3 
;/    SWAP BASE @ UM* DROP   \ udl n udh*base
	call	_SWAP	; 80410CFE E8 3F 38 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410D03 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410D07 
	DB 0x48,0x8D,0x5,0xAE,0x3E,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410D0E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410D12 E8 B2 34 FF FF 
	call	_UMmul	; 80410D17 E8 C7 37 FF FF 
	call	_DgreatS	; 80410D1C E8 12 34 FF FF 
;/    ROT BASE @ UM* D+      \ (n udh*base)+(udl*baseD)
	call	_ROT	; 80410D21 E8 EB 38 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410D26 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_UNLOOP+0x472 (%rip),rax	; 80410D2A 
	DB 0x48,0x8D,0x5,0x8B,0x3E,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410D31 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410D35 E8 8F 34 FF FF 
	call	_UMmul	; 80410D3A E8 A4 37 FF FF 
	call	_Dadd	; 80410D3F E8 E0 36 FF FF 
;/    R> 1+ R> 1-
;/*	mov	rax,-0x08(rbp)	; 80410D44 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410D48 58 
;/*	lea	-0x08(rbp),rbp	; 80410D49 
	DB 0x48,0x8D,0x6D,0xF8
	call	_CHARadd	; 80410D4D E8 29 37 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410D52 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410D56 58 
;/*	lea	-0x08(rbp),rbp	; 80410D57 
	DB 0x48,0x8D,0x6D,0xF8
	call	_1sub	; 80410D5B E8 2A 37 FF FF 
;/  REPEAT
;/*	jmp	_greatNUMBER	; 80410D60 
	DB 0xE9,0x29,0xFF,0xFF,0xFF
;/;
	ret		; 80410D65 C3 
;/
;/
;/\  0 0 S" 1234"  >NUMBER H. H. H. H.
;/
;/: /STRING DUP>R - SWAP R> + SWAP ;


_rslSTRING:
	Push	rax	; 80410D66 50 
	call	_sub	; 80410D67 E8 AC 36 FF FF 
	call	_SWAP	; 80410D6C E8 D1 37 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410D71 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410D75 58 
;/*	lea	-0x08(rbp),rbp	; 80410D76 
	DB 0x48,0x8D,0x6D,0xF8
	call	_add	; 80410D7A E8 9C 36 FF FF 
	call	_SWAP	; 80410D7F E8 BE 37 FF FF 
	ret		; 80410D84 C3 
;/
;/VARIABLE &DOUBLE?

	DQ 0x0
	DB 0x0,0x0,0x0
;/VARIABLE &?MINUS
	DQ 0x0
;/
;/: DOUBLE? &DOUBLE? @ ;

_DOUBLEque:
;/*	mov	rax,-0x08(rbp)	; 80410D98 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_rslSTRING+0x22 (%rip),rax	; 80410D9C 
	DB 0x48,0x8D,0x5,0xE5,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410DA3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410DA7 E8 1D 34 FF FF 
	ret		; 80410DAC C3 
;/: ?MINUS  &?MINUS @ ;


_queMINUS:
;/*	mov	rax,-0x08(rbp)	; 80410DAD 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_rslSTRING+0x2A (%rip),rax	; 80410DB1 
	DB 0x48,0x8D,0x5,0xD8,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80410DB8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_load	; 80410DBC E8 8 34 FF FF 
	ret		; 80410DC1 C3 
;/
;/: NUMBER?       ( addr len -- d1 f1 )
;/                FALSE &DOUBLE? !                \ initially not a double #


_NUMBERque:
;/*	mov	rax,-0x08(rbp)	; 80410DC2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410DC6 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410DCB 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_rslSTRING+0x22 (%rip),rax	; 80410DCF 
	DB 0x48,0x8D,0x5,0xB2,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410DD6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410DDA E8 21 34 FF FF 
;/                OVER C@ [CHAR] - =
	call	_OVER	; 80410DDF E8 B5 37 FF FF 
	call	_Cload	; 80410DE4 E8 E4 33 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410DE9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2D,eax	; 80410DED 
	DB 0xB8,0x2D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410DF2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80410DF6 E8 3F 35 FF FF 
;/                OVER AND DUP>R
	call	_OVER	; 80410DFB E8 99 37 FF FF 
	call	_AND	; 80410E00 E8 DD 35 FF FF 
	Push	rax	; 80410E05 50 
;/                IF      1 /STRING
	test	rax,rax	; 80410E06 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410E09 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410E0D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NUMBERque+0x67 	; 80410E11 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80410E17 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1,eax	; 80410E1B 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410E20 
	DB 0x48,0x8D,0x6D,0xF8
	call	_rslSTRING	; 80410E24 E8 3D FF FF FF 
;/                THEN
;/                DUP 0=
	call	_DUP	; 80410E29 E8 FA 36 FF FF 
	call	_0equ	; 80410E2E E8 F 35 FF FF 
;/                IF      R>DROP      FALSE &?MINUS !
	test	rax,rax	; 80410E33 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410E36 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410E3A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NUMBERque+0xC9 	; 80410E3E 
	DB 0xF,0x84,0x47,0x0,0x0,0x0
;/*	lea	0x08(rsp),rsp	; 80410E44 
	DB 0x48,0x8D,0x64,0x24,0x8
;/*	mov	rax,-0x08(rbp)	; 80410E49 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410E4D 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410E52 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_rslSTRING+0x2A (%rip),rax	; 80410E56 
	DB 0x48,0x8D,0x5,0x33,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410E5D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410E61 E8 9A 33 FF FF 
;/                        2DROP 0 0 FALSE EXIT   \ always return zero on failure
	call	_2DROP	; 80410E66 E8 1 37 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410E6B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410E6F 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410E74 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x0,eax	; 80410E78 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x18(rbp)	; 80410E7D 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	$0x0,eax	; 80410E81 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x18(rbp),rbp	; 80410E86 
	DB 0x48,0x8D,0x6D,0xE8
	ret		; 80410E8A C3 
;/                THEN
;/                0 0 2SWAP >NUMBER
;/*	mov	rax,-0x08(rbp)	; 80410E8B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410E8F 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410E94 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x0,eax	; 80410E98 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80410E9D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_2SWAP	; 80410EA1 E8 A9 36 FF FF 
	call	_greatNUMBER	; 80410EA6 E8 E3 FD FF FF 
;/                OVER C@ [CHAR] . =              \ next char is a '.'
	call	_OVER	; 80410EAB E8 E9 36 FF FF 
	call	_Cload	; 80410EB0 E8 18 33 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410EB5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E,eax	; 80410EB9 
	DB 0xB8,0x2E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410EBE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_equ	; 80410EC2 E8 73 34 FF FF 
;/                OVER SWAP 0< AND                     \ more chars to look at
	call	_OVER	; 80410EC7 E8 CD 36 FF FF 
	call	_SWAP	; 80410ECC E8 71 36 FF FF 
	call	_0less	; 80410ED1 E8 D5 34 FF FF 
	call	_AND	; 80410ED6 E8 7 35 FF FF 
;/                IF \     DUP 1- TO DP-LOCATION
	test	rax,rax	; 80410EDB 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410EDE 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410EE2 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NUMBERque+0x1A8 	; 80410EE6 
	DB 0xF,0x84,0x7E,0x0,0x0,0x0
;/			BEGIN
;/                        1 /STRING >NUMBER
;/*	mov	rax,-0x08(rbp)	; 80410EEC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1,eax	; 80410EF0 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410EF5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_rslSTRING	; 80410EF9 E8 68 FE FF FF 
	call	_greatNUMBER	; 80410EFE E8 8B FD FF FF 
;/                        DUP 0=
	call	_DUP	; 80410F03 E8 20 36 FF FF 
	call	_0equ	; 80410F08 E8 35 34 FF FF 
;/                        IF      TRUE &DOUBLE? ! \ mark as a double number
	test	rax,rax	; 80410F0D 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410F10 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410F14 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NUMBERque+0x17B 	; 80410F18 
	DB 0xF,0x84,0x1F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80410F1E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80410F22 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80410F29 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_rslSTRING+0x22 (%rip),rax	; 80410F2D 
	DB 0x48,0x8D,0x5,0x54,0xFE,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410F34 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410F38 E8 C3 32 FF FF 
;/                        THEN
;/  OVER C@ [CHAR] . <>			UNTIL 
	call	_OVER	; 80410F3D E8 57 36 FF FF 
	call	_Cload	; 80410F42 E8 86 32 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410F47 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E,eax	; 80410F4B 
	DB 0xB8,0x2E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80410F50 
	DB 0x48,0x8D,0x6D,0xF8
	call	_lessgreat	; 80410F54 E8 40 34 FF FF 
	test	rax,rax	; 80410F59 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410F5C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410F60 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NUMBERque+0x12A 	; 80410F64 
	DB 0xF,0x84,0x82,0xFF,0xFF,0xFF
;/                THEN    NIP 0=
	call	_NIP	; 80410F6A E8 9D 36 FF FF 
	call	_0equ	; 80410F6F E8 CE 33 FF FF 
;/                R> ?MINUS XOR
;/*	mov	rax,-0x08(rbp)	; 80410F74 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410F78 58 
;/*	lea	-0x08(rbp),rbp	; 80410F79 
	DB 0x48,0x8D,0x6D,0xF8
	call	_queMINUS	; 80410F7D E8 2B FE FF FF 
	call	_XOR	; 80410F82 E8 6D 34 FF FF 
;/                IF      >R DNEGATE R>
	test	rax,rax	; 80410F87 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80410F8A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410F8E 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_NUMBERque+0x1ED 	; 80410F92 
	DB 0xF,0x84,0x17,0x0,0x0,0x0
	Push	rax	; 80410F98 50 
;/*	mov	0x00(rbp),rax	; 80410F99 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80410F9D 
	DB 0x48,0x8D,0x6D,0x8
	call	_DNEGATE	; 80410FA1 E8 5F 34 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80410FA6 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80410FAA 58 
;/*	lea	-0x08(rbp),rbp	; 80410FAB 
	DB 0x48,0x8D,0x6D,0xF8
;/                THEN  FALSE &?MINUS !
;/*	mov	rax,-0x08(rbp)	; 80410FAF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80410FB3 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80410FB8 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_rslSTRING+0x2A (%rip),rax	; 80410FBC 
	DB 0x48,0x8D,0x5,0xCD,0xFD,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80410FC3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_save	; 80410FC7 E8 34 32 FF FF 
;/;
	ret		; 80410FCC C3 
;/
